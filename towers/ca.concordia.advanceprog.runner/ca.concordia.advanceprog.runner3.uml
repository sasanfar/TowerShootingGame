<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_8919EG6cEeSZe_WBkuFUeQ" name="ca_concordia_advanceprog_runner3">
    <eAnnotations xmi:id="_9Iz28G6cEeSZe_WBkuFUeQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_9Iz28W6cEeSZe_WBkuFUeQ" source="codegen">
        <details xmi:id="_9I0eAG6cEeSZe_WBkuFUeQ" key="codegenDirectory" value="/ca.concordia.advanceprog.runner/src"/>
        <details xmi:id="_9ufW4G6cEeSZe_WBkuFUeQ" key="AssociatedSourceCode" value="/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/util/Utility.java;2447615272/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/HighLevelCritter.java;436681763/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/LowLevelCritter.java;2317785255/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/MediumLevelCritter.java;3921663185/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/engine/ButtonHandler.java;555693658/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/TowerType.java;1070661429/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/TowerStrategy.java;2674257907/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Cell.java;3616077033/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Map.java;571131677/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/MapGenerator.java;2624886656/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Movement.java;2405399563/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Status.java;1957996985/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Surface.java;2831536314/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Tower.java;3619510530/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/runner/Runner.java;241997172/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/engine/Engine.java;1609698736/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/Critter.java;1257379271/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_9VoK8G6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_9VoK8W6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_9VoK8m6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_9VoK826cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_9VoK9G6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_9VoK9W6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_9VoK9m6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_9VoK926cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_9VqAIG6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_9U4kEG6cEeSZe_WBkuFUeQ" name="ca">
      <packagedElement xmi:type="uml:Package" xmi:id="_9U4kEW6cEeSZe_WBkuFUeQ" name="concordia">
        <packagedElement xmi:type="uml:Package" xmi:id="_9U4kEm6cEeSZe_WBkuFUeQ" name="advanceprog">
          <packagedElement xmi:type="uml:Package" xmi:id="_9U5LIG6cEeSZe_WBkuFUeQ" name="util">
            <packagedElement xmi:type="uml:Class" xmi:id="_9Vm80G6cEeSZe_WBkuFUeQ" name="Utility">
              <ownedComment xmi:id="_9ay-0G6cEeSZe_WBkuFUeQ">
                <body>We can put general purpose methods here, such as collection helpers and this&#xD;
randInt that I need for the initial version All Utility methods are most of&#xD;
the time static&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9amxkG6cEeSZe_WBkuFUeQ" name="randInt" specification="_9VoyAG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9amxkW6cEeSZe_WBkuFUeQ" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9amxkm6cEeSZe_WBkuFUeQ" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9amxk26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Random rand = new Random();&#xD;
		int randomNum = rand.nextInt((max - min) + 1) + min;&#xD;
		return randomNum;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9VoyAG6cEeSZe_WBkuFUeQ" name="randInt" isStatic="true" method="_9amxkG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9VoyAW6cEeSZe_WBkuFUeQ" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9VoyAm6cEeSZe_WBkuFUeQ" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9VoyA26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_9U5yMG6cEeSZe_WBkuFUeQ" name="ui">
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_9VuRkG6cEeSZe_WBkuFUeQ" name="TowerType">
              <ownedLiteral xmi:id="_9Vu4oW6cEeSZe_WBkuFUeQ" name="Regular"/>
              <ownedLiteral xmi:id="_9Vu4om6cEeSZe_WBkuFUeQ" name="Mass"/>
              <ownedLiteral xmi:id="_9Vu4o26cEeSZe_WBkuFUeQ" name="Riffle"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_9Vu4pG6cEeSZe_WBkuFUeQ" name="TowerStrategy">
              <ownedComment xmi:id="_s4AQAG6eEeSZe_WBkuFUeQ">
                <body>different strategies for each tower, representing different way to shoot&#xD;
critters&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <ownedLiteral xmi:id="_9VvfsW6cEeSZe_WBkuFUeQ" name="Closest"/>
              <ownedLiteral xmi:id="_9Vvfsm6cEeSZe_WBkuFUeQ" name="Farthest"/>
              <ownedLiteral xmi:id="_9Vvfs26cEeSZe_WBkuFUeQ" name="Sickest"/>
              <ownedLiteral xmi:id="_9VvftG6cEeSZe_WBkuFUeQ" name="Healthiest"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9VvftW6cEeSZe_WBkuFUeQ" name="Cell">
              <ownedComment xmi:id="_9azl4G6cEeSZe_WBkuFUeQ">
                <body>The MapGenerator class is using to make cells of the map based on this&#xD;
structure. It is kind of DataClass that holds the status of cell</body>
              </ownedComment>
              <ownedAttribute xmi:id="_9aD_AG6cEeSZe_WBkuFUeQ" name="value" type="_9WOn5G6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9anYq26cEeSZe_WBkuFUeQ" name="Cell" specification="_9VwGwG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9anYrG6cEeSZe_WBkuFUeQ" type="_9VvftW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>value = Status.notDecided;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9VwGwG6cEeSZe_WBkuFUeQ" name="Cell" method="_9anYq26cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9VwGwW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9VwGwm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9VwGw26cEeSZe_WBkuFUeQ" type="_9VvftW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9Vwt0G6cEeSZe_WBkuFUeQ" name="Map">
              <ownedComment xmi:id="_9azl4W6cEeSZe_WBkuFUeQ">
                <body>The map is the holder of data that shows which cell of that two dimensional&#xD;
array is block, path or tower</body>
              </ownedComment>
              <ownedAttribute xmi:id="_9aEmEW6cEeSZe_WBkuFUeQ" name="MapGenerator" type="_9V20cG6cEeSZe_WBkuFUeQ" association="_9a-lAG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aFNIW6cEeSZe_WBkuFUeQ" name="CLEAR" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aFNIm6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aFNI26cEeSZe_WBkuFUeQ" name="BLOCKED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aFNJG6cEeSZe_WBkuFUeQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aFNJW6cEeSZe_WBkuFUeQ" name="TOWER" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aFNJm6cEeSZe_WBkuFUeQ" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aF0MG6cEeSZe_WBkuFUeQ" name="Width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aF0Mm6cEeSZe_WBkuFUeQ" name="Height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aF0NG6cEeSZe_WBkuFUeQ" name="TILE_SIZE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aGbQG6cEeSZe_WBkuFUeQ" value="20"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aGbQW6cEeSZe_WBkuFUeQ" name="StartColumnIndex">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aGbQ26cEeSZe_WBkuFUeQ" name="StartRowIndex">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aHCUW6cEeSZe_WBkuFUeQ" name="Data">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9aHCUm6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9an_sG6cEeSZe_WBkuFUeQ" name="Map" specification="_9VxU4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9an_sW6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9an_sm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9an_s26cEeSZe_WBkuFUeQ" type="_9Vwt0G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Width = width;&#xD;
		Height = height;&#xD;
		Data = new int[Width][Height];&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
		MapGenerator = new MapGenerator(Height, Width);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9an_tG6cEeSZe_WBkuFUeQ" name="setMapGenerator" specification="_9Y3sMG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9an_tW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_9V20cG6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>this.MapGenerator = mapGenerator;&#xD;
&#xD;
		this.Width = mapGenerator.getWidth();&#xD;
		this.Height = mapGenerator.getHeight();&#xD;
&#xD;
		Data = new int[Width][Height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9an_tm6cEeSZe_WBkuFUeQ" name="generateMap" specification="_9Vx79G6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>while (MapGenerator.getPath().size() &lt; 50)&#xD;
			MapGenerator.RandomGenerate(Height, Width);&#xD;
&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9an_t26cEeSZe_WBkuFUeQ" name="Map" specification="_9Y3sMm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9an_uG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9an_uW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9an_um6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_9V20cG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9an_u26cEeSZe_WBkuFUeQ" type="_9Vwt0G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.MapGenerator = mapGenerator;&#xD;
		Data = new int[width][height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; width; i++)&#xD;
			for (int j = 0; j &lt; height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
&#xD;
		Width = width;&#xD;
		Height = height;&#xD;
&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9an_vG6cEeSZe_WBkuFUeQ" name="Map" specification="_9Y4TQ26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9an_vW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_9V20cG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9an_vm6cEeSZe_WBkuFUeQ" type="_9Vwt0G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>MapGenerator = mapGenerator;&#xD;
&#xD;
		Width = mapGenerator.getWidth();&#xD;
		Height = mapGenerator.getHeight();&#xD;
&#xD;
		Data = new int[Width][Height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aomwG6cEeSZe_WBkuFUeQ" name="paint" specification="_9ZfXQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aomwW6cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>for (int x = 0; x &lt; Runner.X_DIMENSION; x++) {&#xD;
			for (int y = 0; y &lt; Runner.Y_DIMENSION; y++) {&#xD;
&#xD;
				// so if the cell is blocks, draw a light grey block&#xD;
				// otherwise use a dark gray&#xD;
				graphic.setColor(Color.darkGray);&#xD;
				if (Data[y][x] == BLOCKED) {&#xD;
					graphic.setColor(Color.white);&#xD;
				}&#xD;
				if (Data[y][x] == TOWER) {&#xD;
					graphic.setColor(Color.blue);&#xD;
				}&#xD;
				// draw the rectangle with a dark outline&#xD;
				graphic.fillRect(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE,&#xD;
						TILE_SIZE);&#xD;
				graphic.setColor(graphic.getColor().darker());&#xD;
				graphic.drawRect(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE,&#xD;
						TILE_SIZE);&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (int x = 0; x &lt; Width; x++) {&#xD;
			for (int y = 0; y &lt; Height; y++) {&#xD;
&#xD;
				if (Data[y][x] == TOWER) {&#xD;
					graphic.setColor(Color.blue);&#xD;
&#xD;
					for (int i = 0; i &lt; Runner.TOWERS.size(); i++)&#xD;
						if (Runner.TOWERS.get(i).x == y&#xD;
								&amp;&amp; Runner.TOWERS.get(i).y == x) {&#xD;
							Tower tower = Runner.TOWERS.get(i);&#xD;
							drawCircle(graphic, x * TILE_SIZE, y * TILE_SIZE,&#xD;
									tower.Range * 20);&#xD;
						}&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		graphic.setColor(Color.orange);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aomwm6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_9Zf-UG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aomw26cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9aomxG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aomxW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aomxm6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aomx26cEeSZe_WBkuFUeQ" name="isBlocked" specification="_9VzKEG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aomyG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aomyW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aomym6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (isNotMap(x, y))&#xD;
			return true;&#xD;
		else&#xD;
			return Data[(int) y][(int) x] == BLOCKED;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aomy26cEeSZe_WBkuFUeQ" name="isNotMap" specification="_9VzxIG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aomzG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aomzW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aomzm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (x &lt; 0 || x > Width || y &lt; 0 || y > Height)&#xD;
			return true;&#xD;
		else&#xD;
			return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aomz26cEeSZe_WBkuFUeQ" name="tryMapXYtoCellNumber" specification="_9VzxJG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aom0G6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aom0W6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aom0m6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>for (int i = 0; i &lt; 400; i = i + 20)&#xD;
			for (int j = 0; j &lt; 400; j = j + 20) {&#xD;
				if (x >= i &amp;&amp; x &lt;= i + 20)&#xD;
					if (y >= j &amp;&amp; y &lt;= j + 20)&#xD;
						return ((i / 20) + &quot;,&quot; + (j / 20));&#xD;
			}&#xD;
		return &quot;&quot;;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9apN0G6cEeSZe_WBkuFUeQ" name="UserDefinedMapValidation" specification="_9V0YMm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9apN0W6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9apN0m6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9apN026cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9apN1G6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9apN1W6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this.MapGenerator.getPath() != null) {&#xD;
			// this.MapGenerator.setPath(null);&#xD;
			this.MapGenerator.setPath(new ArrayList&lt;Movement>());&#xD;
			System.out.println(&quot;Map Editing...&quot;);&#xD;
			for (int i = 0; i &lt; height; i++)&#xD;
				for (int j = 0; j &lt; width; j++)&#xD;
					if (this.Data[i][j] == Map.CLEAR)&#xD;
						this.MapGenerator.Grid[i][j].value = Status.notDecided;&#xD;
					else&#xD;
						this.MapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
			MapGenerator validity = this.MapGenerator.mapEditing(entry, exit,&#xD;
					height, width);&#xD;
			if (validity == null)&#xD;
				return false;&#xD;
			return true;&#xD;
		} else {&#xD;
			System.out.println(&quot;Manually Generating...&quot;);&#xD;
			this.MapGenerator = new MapGenerator(height, width);&#xD;
			for (int i = 0; i &lt; height; i++)&#xD;
				for (int j = 0; j &lt; width; j++)&#xD;
					if (this.Data[i][j] == Map.CLEAR)&#xD;
						this.MapGenerator.Grid[i][j].value = Status.notDecided;&#xD;
					else&#xD;
						this.MapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
			MapGenerator validity = this.MapGenerator.ManualGenerate(entry,&#xD;
					exit, height, width);&#xD;
			if (validity == null)&#xD;
				return false;&#xD;
&#xD;
			else {&#xD;
				// complete map;&#xD;
			}&#xD;
			return true;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9VxU4G6cEeSZe_WBkuFUeQ" name="Map" method="_9an_sG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9Vx78W6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9Vx78m6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_9azl4m6cEeSZe_WBkuFUeQ">
                  <body>Create a new map with some default contents&#xD;
	 * &#xD;
	 * @param width&#xD;
	 * @param height</body>
                </ownedComment>
                <ownedParameter xmi:id="_9VxU4W6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Vx78G6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Vx7826cEeSZe_WBkuFUeQ" type="_9Vwt0G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9Vx79G6cEeSZe_WBkuFUeQ" name="generateMap" method="_9an_tm6cEeSZe_WBkuFUeQ"/>
              <ownedOperation xmi:id="_9VzKEG6cEeSZe_WBkuFUeQ" name="isBlocked" method="_9aomx26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9azl5m6cEeSZe_WBkuFUeQ">
                  <body>Check if a particular location on the map is blocked. Note that the x and&#xD;
	 * y parameters are floating point numbers meaning that we can be checking&#xD;
	 * partially across a grid cell.&#xD;
	 * &#xD;
	 * @param x&#xD;
	 *            The x position to check for blocking&#xD;
	 * @param y&#xD;
	 *            The y position to check for blocking&#xD;
	 * @return True if the location is blocked</body>
                </ownedComment>
                <ownedParameter xmi:id="_9VzKEW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9VzKEm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9VzKE26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9VzxIG6cEeSZe_WBkuFUeQ" name="isNotMap" method="_9aomy26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9azl526cEeSZe_WBkuFUeQ">
                  <body>This method will tell the caller if it is in the area of map&#xD;
	 * &#xD;
	 * @param x&#xD;
	 *            is the position in the x-Axis&#xD;
	 * @param y&#xD;
	 *            is the position in the y-Axis</body>
                </ownedComment>
                <ownedParameter xmi:id="_9VzxIW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9VzxIm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9VzxI26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9VzxJG6cEeSZe_WBkuFUeQ" name="tryMapXYtoCellNumber" isStatic="true" method="_9aomz26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9azl6G6cEeSZe_WBkuFUeQ">
                  <body>This is very useful method that map the point (x,y) to the corresponding&#xD;
	 * cell in the array of [15][15] or any user preference when wanted to&#xD;
	 * create the map&#xD;
	 * &#xD;
	 * @param is&#xD;
	 *            the value x in the x-Axis&#xD;
	 * @param is&#xD;
	 *            the value of y-Axis</body>
                </ownedComment>
                <ownedParameter xmi:id="_9VzxJW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9V0YMG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9V0YMW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9V0YMm6cEeSZe_WBkuFUeQ" name="UserDefinedMapValidation" method="_9apN0G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9azl6W6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for checking if the user created map is valid&#xD;
	 * or not by checking the start point, end point and the path from start to&#xD;
	 * end&#xD;
	 * &#xD;
	 * @param entry&#xD;
	 * @param exit&#xD;
	 * @param height&#xD;
	 * @param width&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_9V0YM26cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9V0YNG6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9V0YNW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9V0YNm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9V0_QG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9Y3sMG6cEeSZe_WBkuFUeQ" name="setMapGenerator" method="_9an_tG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9Y3sMW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_9V20cG6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9Y3sMm6cEeSZe_WBkuFUeQ" name="Map" method="_9an_t26cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9Y4TQG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9Y4TQW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_9azl426cEeSZe_WBkuFUeQ">
                  <body>This constructor is used by Load button&#xD;
	 * &#xD;
	 * @param width&#xD;
	 *            is the width map&#xD;
	 * &#xD;
	 * @param height&#xD;
	 *            is the height of the map&#xD;
	 * &#xD;
	 * @param mapGenerator&#xD;
	 *            to generate the path based on the loaded file</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Y3sM26cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y3sNG6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y3sNW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_9V20cG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Y4TQm6cEeSZe_WBkuFUeQ" type="_9Vwt0G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9Y4TQ26cEeSZe_WBkuFUeQ" name="Map" method="_9an_vG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9Y4TRW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9Y4TRm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9Y4TRG6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_9V20cG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Y4TR26cEeSZe_WBkuFUeQ" type="_9Vwt0G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZfXQG6cEeSZe_WBkuFUeQ" name="paint" method="_9aomwG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9azl5G6cEeSZe_WBkuFUeQ">
                  <body>Render the map to the graphics context provided. The rendering is just&#xD;
	 * simple fill rectangles&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            The graphics context on which to draw the map</body>
                </ownedComment>
                <ownedParameter xmi:id="_9ZfXQW6cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9Zf-UG6cEeSZe_WBkuFUeQ" name="drawCircle" method="_9aomwm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9azl5W6cEeSZe_WBkuFUeQ">
                  <body>This method is used in when we want to show a circle around a tower for&#xD;
	 * the range of shooting&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            is the handle for depicting objects on it</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Zf-UW6cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Zf-Um6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Zf-U26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Zf-VG6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9V20cG6cEeSZe_WBkuFUeQ" name="MapGenerator">
              <ownedComment xmi:id="_9azl6m6cEeSZe_WBkuFUeQ">
                <body>Creates a randomized map and a path from the starting point to the end point&#xD;
in it.&#xD;
&#xD;
@author Sasan&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_9aHpYG6cEeSZe_WBkuFUeQ" name="Grid" isStatic="true" type="_9VvftW6cEeSZe_WBkuFUeQ" association="_9a-lA26cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9aHpYW6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aHpZG6cEeSZe_WBkuFUeQ" name="Path" isStatic="true" type="_9WOA0G6cEeSZe_WBkuFUeQ" isOrdered="true">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9aIQcW6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aI3gm6cEeSZe_WBkuFUeQ" name="Height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9azl626cEeSZe_WBkuFUeQ" name="Width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9a0M8m6cEeSZe_WBkuFUeQ" name="StartingPoint">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9a00AG6cEeSZe_WBkuFUeQ" name="EndPoint">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ap05G6cEeSZe_WBkuFUeQ" name="MapGenerator" specification="_9V3bgG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ap05W6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ap05m6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ap0526cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Grid = new Cell[height][width];&#xD;
		Path = new ArrayList&lt;Movement>();&#xD;
		Height = height;&#xD;
		Width = width;&#xD;
		StartingPoint = 0;&#xD;
		EndPoint = 0;&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j] = new Cell();&#xD;
&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j].value = Status.notDecided;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ap06G6cEeSZe_WBkuFUeQ" name="getStartinPoint" specification="_9V4ClG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ap06W6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.StartingPoint;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ap06m6cEeSZe_WBkuFUeQ" name="getEndPoint" specification="_9WFd8W6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ap0626cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.EndPoint;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aqb8G6cEeSZe_WBkuFUeQ" name="getWidth" specification="_9WFd826cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aqb8W6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.Width;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aqb8m6cEeSZe_WBkuFUeQ" name="MapGenerator" specification="_9WGFAG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aqb826cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aqb9G6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aqb9W6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aqb9m6cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Grid = new Cell[height][width];&#xD;
		Path = new ArrayList&lt;Movement>();&#xD;
		StartingPoint = 0;&#xD;
		EndPoint = 0;&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j] = new Cell();&#xD;
&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j].value = Status.notDecided;&#xD;
		LoadMap(file);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aqb926cEeSZe_WBkuFUeQ" name="SaveMap" specification="_9WGsE26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aqb-G6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>File statText = new File(file);&#xD;
		FileOutputStream is = new FileOutputStream(statText);&#xD;
		OutputStreamWriter osw = new OutputStreamWriter(is);&#xD;
		Writer writer = new BufferedWriter(osw);&#xD;
		writer.write(Height + &quot;\r\n&quot;);&#xD;
		writer.write(Width + &quot;\r\n&quot;);&#xD;
		writer.write(this.StartingPoint + &quot;\r\n&quot;);&#xD;
		writer.write(this.EndPoint + &quot;\r\n&quot;);&#xD;
		for (int i = 0; i &lt; MapGenerator.Path.size(); i++)&#xD;
			writer.write(MapGenerator.Path.get(i).toString() + &quot;\r\n&quot;);&#xD;
		writer.close();&#xD;
		System.out.println(&quot;File saved!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aqb-W6cEeSZe_WBkuFUeQ" name="LoadMap" specification="_9WHTIG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9aqb-m6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9aqb-26cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>System.out.println(&quot;Loading...&quot;);&#xD;
		BufferedReader br = new BufferedReader(new FileReader(file));&#xD;
		try {&#xD;
			String line = br.readLine();&#xD;
			this.Height = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.Width = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.StartingPoint = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.EndPoint = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			while (line != null) {&#xD;
				switch (line) {&#xD;
				case &quot;Up&quot;:&#xD;
					this.Path.add(Movement.Up);&#xD;
					break;&#xD;
				case &quot;Down&quot;:&#xD;
					this.Path.add(Movement.Down);&#xD;
					break;&#xD;
				case &quot;Right&quot;:&#xD;
					this.Path.add(Movement.Right);&#xD;
					break;&#xD;
				case &quot;Left&quot;:&#xD;
					this.Path.add(Movement.Left);&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
				line = br.readLine();&#xD;
			}&#xD;
		} finally {&#xD;
			br.close();&#xD;
		}&#xD;
		int curI = this.StartingPoint, curJ = 0;&#xD;
		this.Grid[curI][curJ].value = Status.isPath;&#xD;
		for (int i = 0; i &lt; this.Path.size(); i++) {&#xD;
			Movement dir = this.Path.get(i);&#xD;
			switch (dir) {&#xD;
			case Up:&#xD;
				// Go Up&#xD;
				curI--;&#xD;
				break;&#xD;
			case Down:&#xD;
				// Go Down&#xD;
				curI++;&#xD;
				break;&#xD;
			case Left:&#xD;
				// Go Left&#xD;
				curJ--;&#xD;
				break;&#xD;
			case Right:&#xD;
				// Go Right&#xD;
				curJ++;&#xD;
				break;&#xD;
			default:&#xD;
				break;&#xD;
			}&#xD;
			if (curI &lt; Height &amp;&amp; curI >= 0 &amp;&amp; curJ &lt; Width &amp;&amp; curJ >= 0)&#xD;
				this.Grid[curI][curJ].value = Status.isPath;&#xD;
		}&#xD;
		for (int i = 0; i &lt; Height; i++)&#xD;
			for (int j = 0; j &lt; Width; j++)&#xD;
				if (this.Grid[i][j].value != Status.isPath)&#xD;
					this.Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Loaded:&quot;);&#xD;
		for (int i = 0; i &lt; Height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; Width; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; this.Path.size(); i++)&#xD;
			System.out.print(this.Path.get(i) + &quot; &quot;);&#xD;
&#xD;
		return this;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arDAG6cEeSZe_WBkuFUeQ" name="Deadend" specification="_9WH6MG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arDAW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDAm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDA26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>try {&#xD;
			if ((i >= 0 &amp;&amp; i &lt;= Height - 2 &amp;&amp; Grid[i + 1][j].value == Status.notDecided)&#xD;
					|| (i >= 1 &amp;&amp; i &lt; Height &amp;&amp; Grid[i - 1][j].value == Status.notDecided)&#xD;
					|| (j >= 0 &amp;&amp; j &lt;= Width - 2 &amp;&amp; Grid[i][j + 1].value == Status.notDecided)&#xD;
					|| (j >= 1 &amp;&amp; j &lt; Width &amp;&amp; Grid[i][j - 1].value == Status.notDecided))&#xD;
				return false;&#xD;
		} catch (Exception e) {&#xD;
			return false;&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arDBG6cEeSZe_WBkuFUeQ" name="DestinationCellAdjIsZero" specification="_9Y6vgW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arDBW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDBm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDB26cEeSZe_WBkuFUeQ" name="Dir" type="_9WOA0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9arDCG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>int adj = 0;&#xD;
		switch (Dir) {&#xD;
		case Up:&#xD;
			if (i > 0 &amp;&amp; j > 0 &amp;&amp; Grid[i - 1][j - 1].value == Status.isPath) // left&#xD;
																				// of&#xD;
																				// destination&#xD;
																				// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i - 1][j + 1].value == Status.isPath) // right of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 1 &amp;&amp; Grid[i - 2][j].value == Status.isPath) // top of&#xD;
																// destination&#xD;
																// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Down:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j > 0&#xD;
					&amp;&amp; Grid[i + 1][j - 1].value == Status.isPath) // left of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i &lt; Height - 1 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i + 1][j + 1].value == Status.isPath) // right of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i &lt; Height - 2 &amp;&amp; Grid[i + 2][j].value == Status.isPath) // bottom&#xD;
																			// of&#xD;
																			// destination&#xD;
																			// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Left:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j > 0&#xD;
					&amp;&amp; Grid[i + 1][j - 1].value == Status.isPath) // bottom of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j > 0 &amp;&amp; Grid[i - 1][j - 1].value == Status.isPath) // top&#xD;
																				// of&#xD;
																				// destination&#xD;
																				// cell&#xD;
				adj++;&#xD;
			if (j > 1 &amp;&amp; Grid[i][j - 2].value == Status.isPath) // left of&#xD;
																// destination&#xD;
																// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Right:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i + 1][j + 1].value == Status.isPath) // bottom of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i - 1][j + 1].value == Status.isPath) // top of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (j &lt; Width - 2 &amp;&amp; Grid[i][j + 2].value == Status.isPath) // right&#xD;
																		// of&#xD;
																		// destination&#xD;
																		// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		default:&#xD;
			break;&#xD;
		}&#xD;
		if (adj == 0)&#xD;
			return true;&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arDCW6cEeSZe_WBkuFUeQ" name="MoveIsPossible" specification="_9Y7Wk26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arDCm6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDC26cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDDG6cEeSZe_WBkuFUeQ" name="Dir" type="_9WOA0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9arDDW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>try {&#xD;
			if (((i > 0 &amp;&amp; Grid[i - 1][j].value == Status.notDecided &amp;&amp; Dir == Movement.Up)&#xD;
					|| (i &lt; Height - 1&#xD;
							&amp;&amp; Grid[i + 1][j].value == Status.notDecided &amp;&amp; Dir == Movement.Down)&#xD;
					|| (j > 0 &amp;&amp; Grid[i][j - 1].value == Status.notDecided &amp;&amp; Dir == Movement.Left) || (j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i][j + 1].value == Status.notDecided &amp;&amp; Dir == Movement.Right))&#xD;
			// &amp;&amp; DestinationCellAdjIsZero(i, j, Dir)&#xD;
			)&#xD;
				return true;&#xD;
		} catch (Exception e) {&#xD;
			return false;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arDDm6cEeSZe_WBkuFUeQ" name="RandomGenerate" specification="_9WIhQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arDD26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDEG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDEW6cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>// Initializing&#xD;
		Random rnd = new Random();&#xD;
		int in = 0;&#xD;
		int out = rnd.nextInt(height);&#xD;
		StartingPoint = in;&#xD;
		EndPoint = out;&#xD;
		Runner.entry = StartingPoint;&#xD;
		Runner.exit = EndPoint;&#xD;
		// int in = scn.nextInt(height);&#xD;
		// int out = scn.nextInt(height);&#xD;
&#xD;
		int cur_i = 0, cur_j = 0, Dir;&#xD;
		Movement Direction = null;&#xD;
&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// Random Generation&#xD;
		while (!(cur_i == out &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				Dir = rnd.nextInt(4);&#xD;
				switch (Dir) {&#xD;
				case 0:&#xD;
					Direction = Movement.Up;&#xD;
					break;&#xD;
				case 1:&#xD;
					Direction = Movement.Down;&#xD;
					break;&#xD;
				case 2:&#xD;
					Direction = Movement.Left;&#xD;
					break;&#xD;
				case 3:&#xD;
					Direction = Movement.Right;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
				if (MoveIsPossible(cur_i, cur_j, Direction)) {&#xD;
					// Update(cur_i, cur_j, Direction);&#xD;
					switch (Direction) {&#xD;
					case Up:&#xD;
						// Go Up&#xD;
						cur_i--;&#xD;
						break;&#xD;
					case Down:&#xD;
						// Go Down&#xD;
						cur_i++;&#xD;
						break;&#xD;
					case Left:&#xD;
						// Go Left&#xD;
						cur_j--;&#xD;
						break;&#xD;
					case Right:&#xD;
						// Go Right&#xD;
						cur_j++;&#xD;
						break;&#xD;
					default:&#xD;
						break;&#xD;
					}&#xD;
					Grid[cur_i][cur_j].value = Status.isPath;&#xD;
					Path.add(Direction);&#xD;
				}&#xD;
			} else {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = Path.get(Path.size() - 1);&#xD;
				if (LastMove == null)&#xD;
					RandomGenerate(height, width);&#xD;
				Path.remove(Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arDEm6cEeSZe_WBkuFUeQ" name="ManualGenerate" specification="_9WJIUm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arDE26cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDFG6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDFW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDFm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arDF26cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>StartingPoint = entry;&#xD;
		EndPoint = exit;&#xD;
		int cur_i = entry;&#xD;
		int cur_j = 0;&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// DFS&#xD;
		while (!(cur_i == exit &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				if (MoveIsPossible(cur_i, cur_j, Movement.Right)) {&#xD;
					cur_j++;&#xD;
					Path.add(Movement.Right);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Up)) {&#xD;
					cur_i--;&#xD;
					Path.add(Movement.Up);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Down)) {&#xD;
					cur_i++;&#xD;
					Path.add(Movement.Down);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Left)) {&#xD;
					cur_j--;&#xD;
					Path.add(Movement.Left);&#xD;
				}&#xD;
				Grid[cur_i][cur_j].value = Status.isPath;&#xD;
			} else if (!Path.isEmpty()) {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = Path.get(Path.size() - 1);&#xD;
				Path.remove(Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			if (Path.isEmpty() &amp;&amp; Deadend(cur_i, cur_j)) {&#xD;
				System.out&#xD;
						.println(&quot;There isn't a path between entry point and end point!&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arqEG6cEeSZe_WBkuFUeQ" name="mapEditing" specification="_9WJvYm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arqEW6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arqEm6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arqE26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arqFG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9arqFW6cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>StartingPoint = entry;&#xD;
		EndPoint = exit;&#xD;
		int cur_i = entry;&#xD;
		int cur_j = 0;&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// DFS&#xD;
		while (!(cur_i == exit &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				if (MoveIsPossible(cur_i, cur_j, Movement.Right)) {&#xD;
					cur_j++;&#xD;
					this.Path.add(Movement.Right);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Up)) {&#xD;
					cur_i--;&#xD;
					this.Path.add(Movement.Up);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Down)) {&#xD;
					cur_i++;&#xD;
					this.Path.add(Movement.Down);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Left)) {&#xD;
					cur_j--;&#xD;
					this.Path.add(Movement.Left);&#xD;
				}&#xD;
				Grid[cur_i][cur_j].value = Status.isPath;&#xD;
			} else if (!this.Path.isEmpty()) {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = this.Path.get(this.Path.size() - 1);&#xD;
				this.Path.remove(this.Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			if (this.Path.isEmpty() &amp;&amp; Deadend(cur_i, cur_j)) {&#xD;
				System.out&#xD;
						.println(&quot;There isn't a path between entry point and end point!&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arqFm6cEeSZe_WBkuFUeQ" name="setWidth" specification="_9WKWc26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arqF26cEeSZe_WBkuFUeQ" name="newWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.Width = newWidth;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arqGG6cEeSZe_WBkuFUeQ" name="setStartingPoint" specification="_9WK9gG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arqGW6cEeSZe_WBkuFUeQ" name="newStart">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.StartingPoint = newStart;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9arqGm6cEeSZe_WBkuFUeQ" name="setEndPoint" specification="_9WK9gm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9arqG26cEeSZe_WBkuFUeQ" name="newEnd">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.EndPoint = newEnd;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9V3bgG6cEeSZe_WBkuFUeQ" name="MapGenerator" method="_9ap05G6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9V4CkW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9V4Ckm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9V3bgW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9V4CkG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9V4Ck26cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9V4ClG6cEeSZe_WBkuFUeQ" name="getStartinPoint" method="_9ap06G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a00A26cEeSZe_WBkuFUeQ">
                  <body>getter of StartingPoint&#xD;
	 * &#xD;
	 * @return Starting Point</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WFd8G6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WFd8W6cEeSZe_WBkuFUeQ" name="getEndPoint" method="_9ap06m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a00BG6cEeSZe_WBkuFUeQ">
                  <body>getter of EndPoint&#xD;
	 * &#xD;
	 * @return EndPoint</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WFd8m6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WFd826cEeSZe_WBkuFUeQ" name="getWidth" method="_9aqb8G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a00BW6cEeSZe_WBkuFUeQ">
                  <body>get the Width of&#xD;
	 * &#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WFd9G6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WGFAG6cEeSZe_WBkuFUeQ" name="MapGenerator" method="_9aqb8m6cEeSZe_WBkuFUeQ" raisedException="_9ZhMcG6cEeSZe_WBkuFUeQ _9ZG8wW6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9WGsEG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9WGsEW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_9a00Bm6cEeSZe_WBkuFUeQ">
                  <body>After loading map based on the file path in will fill it with new cell&#xD;
	 * for the path&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @throws NumberFormatException&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WGFAW6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WGFAm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WGFA26cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WGsEm6cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WGsE26cEeSZe_WBkuFUeQ" name="SaveMap" method="_9aqb926cEeSZe_WBkuFUeQ" raisedException="_9ZG8wW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a00B26cEeSZe_WBkuFUeQ">
                  <body>Save map with based on the given path&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WGsFG6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WHTIG6cEeSZe_WBkuFUeQ" name="LoadMap" method="_9aqb-W6cEeSZe_WBkuFUeQ" raisedException="_9ZhMcG6cEeSZe_WBkuFUeQ _9ZG8wW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a00CG6cEeSZe_WBkuFUeQ">
                  <body>This method will read the file to create a new map based on the inputs&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @return&#xD;
	 * @throws NumberFormatException&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WHTIW6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y6vgG6cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WH6MG6cEeSZe_WBkuFUeQ" name="Deadend" method="_9arDAG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a1bEG6cEeSZe_WBkuFUeQ">
                  <body>will check if the path has reached a dead-end&#xD;
	 * &#xD;
	 * @param i&#xD;
	 * @param j&#xD;
	 * @return true if it has found any dead-end</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WH6MW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WH6Mm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WH6M26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WIhQG6cEeSZe_WBkuFUeQ" name="RandomGenerate" method="_9arDDm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a1bE26cEeSZe_WBkuFUeQ">
                  <body>Generating a new map based on random numbers that starts with point(0,0)&#xD;
	 * and finished with the right edge.&#xD;
	 * &#xD;
	 * @return MapGenerator the generated map</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WJIUG6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WJIUW6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y79oW6cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WJIUm6cEeSZe_WBkuFUeQ" name="ManualGenerate" method="_9arDEm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a1bFG6cEeSZe_WBkuFUeQ">
                  <body>Checks user defined map for validation&#xD;
	 * &#xD;
	 * @param entry&#xD;
	 * @param exit&#xD;
	 * @param height&#xD;
	 * @param width&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WJIU26cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WJIVG6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WJvYG6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WJvYW6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y79om6cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WJvYm6cEeSZe_WBkuFUeQ" name="mapEditing" method="_9arqEG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9WJvY26cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WKWcG6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WKWcW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WKWcm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y79o26cEeSZe_WBkuFUeQ" type="_9V20cG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WKWc26cEeSZe_WBkuFUeQ" name="setWidth" method="_9arqFm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9WKWdG6cEeSZe_WBkuFUeQ" name="newWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WK9gG6cEeSZe_WBkuFUeQ" name="setStartingPoint" method="_9arqGG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9WK9gW6cEeSZe_WBkuFUeQ" name="newStart">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WK9gm6cEeSZe_WBkuFUeQ" name="setEndPoint" method="_9arqGm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9WK9g26cEeSZe_WBkuFUeQ" name="newEnd">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9Y6vgW6cEeSZe_WBkuFUeQ" name="DestinationCellAdjIsZero" method="_9arDBG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a1bEW6cEeSZe_WBkuFUeQ">
                  <body>Deprecate method that we used to search the path for adjacency with&#xD;
	 * another path when we are going to make the map based on user creation of&#xD;
	 * map&#xD;
	 * &#xD;
	 * @param i&#xD;
	 * @param j&#xD;
	 * @param Dir&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Y6vgm6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y7WkG6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y7WkW6cEeSZe_WBkuFUeQ" name="Dir" type="_9WOA0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Y7Wkm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9Y7Wk26cEeSZe_WBkuFUeQ" name="MoveIsPossible" method="_9arDCW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a1bEm6cEeSZe_WBkuFUeQ">
                  <body>Check the new movement is possible or not&#xD;
	 * &#xD;
	 * @param i&#xD;
	 *            is the value on the X-Axis&#xD;
	 * @param j&#xD;
	 *            is the value on Y-Axis&#xD;
	 * @param Dir&#xD;
	 *            the next movement&#xD;
	 * @return true if it's possible and false if it's not possible</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Y7WlG6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y7WlW6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y7Wlm6cEeSZe_WBkuFUeQ" name="Dir" type="_9WOA0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Y79oG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_9WOA0G6cEeSZe_WBkuFUeQ" name="Movement">
              <ownedComment xmi:id="_9a1bFW6cEeSZe_WBkuFUeQ">
                <body>Enum indicating the next movement that should be performed by the engine and&#xD;
critter&#xD;
&#xD;
@author Sasan&#xD;
 *</body>
              </ownedComment>
              <ownedLiteral xmi:id="_9WOn4G6cEeSZe_WBkuFUeQ" name="Up"/>
              <ownedLiteral xmi:id="_9WOn4W6cEeSZe_WBkuFUeQ" name="Down"/>
              <ownedLiteral xmi:id="_9WOn4m6cEeSZe_WBkuFUeQ" name="Right"/>
              <ownedLiteral xmi:id="_9WOn426cEeSZe_WBkuFUeQ" name="Left"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_9WOn5G6cEeSZe_WBkuFUeQ" name="Status">
              <ownedComment xmi:id="_9a1bFm6cEeSZe_WBkuFUeQ">
                <body>possible values of each cell in the map&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <ownedLiteral xmi:id="_9WPO8G6cEeSZe_WBkuFUeQ" name="isPath"/>
              <ownedLiteral xmi:id="_9WPO8W6cEeSZe_WBkuFUeQ" name="isBlock"/>
              <ownedLiteral xmi:id="_9WPO8m6cEeSZe_WBkuFUeQ" name="notDecided"/>
              <ownedLiteral xmi:id="_9WPO826cEeSZe_WBkuFUeQ" name="isTower"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9WPO9G6cEeSZe_WBkuFUeQ" name="Surface">
              <ownedComment xmi:id="_9a1bF26cEeSZe_WBkuFUeQ">
                <body>This is the main element of the game, Surface tends to hold and draw each and&#xD;
every UI elements we have in the game It should be complete over the time&#xD;
Creation of Surface is the common thing between all games and you can find&#xD;
many similar things like this which actually this one is also influenced by a&#xD;
piece of code I found somewhere else.&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_9aKssG6cEeSZe_WBkuFUeQ" name="Strategy" type="_9Y9y0G6cEeSZe_WBkuFUeQ" association="_9a_MEW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aKssm6cEeSZe_WBkuFUeQ" name="prevRow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aLTwW6cEeSZe_WBkuFUeQ" name="prevCol" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aL60G6cEeSZe_WBkuFUeQ" name="RowChanged">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aL60W6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aL6026cEeSZe_WBkuFUeQ" name="PreviousRowLeftBlock">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aL61G6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aMh4W6cEeSZe_WBkuFUeQ" name="PreviousRowRightBlock">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aMh4m6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aNI8W6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ" association="_9a_zIG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aNI826cEeSZe_WBkuFUeQ" name="Panel" type="_9Y-Z4m6cEeSZe_WBkuFUeQ" association="_9a_zI26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aNwAW6cEeSZe_WBkuFUeQ" name="Frame" isStatic="true" type="_9Y-Z4G6cEeSZe_WBkuFUeQ" association="_9bAaMG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9asRIG6cEeSZe_WBkuFUeQ" name="Surface" specification="_9Y_A8G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9asRIW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9asRIm6cEeSZe_WBkuFUeQ" name="engine" type="_9WlNMG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9asRI26cEeSZe_WBkuFUeQ" type="_9WPO9G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.map = map;&#xD;
		Strategy = engine.getStrategy();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9asRJG6cEeSZe_WBkuFUeQ" name="refreshSurface" specification="_9ZjBoG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9asRJW6cEeSZe_WBkuFUeQ" name="g" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>g.setColor(Color.black);&#xD;
		g.fillRect(0, 0, 500, 500);&#xD;
&#xD;
		g.translate(100, 100);&#xD;
		map.paint(g);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9Y_A8G6cEeSZe_WBkuFUeQ" name="Surface" method="_9asRIG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9Y_A826cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9Y_A9G6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9Y_A8W6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Y_A8m6cEeSZe_WBkuFUeQ" name="engine" type="_9WlNMG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Y_A9W6cEeSZe_WBkuFUeQ" type="_9WPO9G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZjBoG6cEeSZe_WBkuFUeQ" name="refreshSurface" method="_9asRJG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ZjosG6cEeSZe_WBkuFUeQ" name="g" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9WSSQG6cEeSZe_WBkuFUeQ" name="Tower">
              <ownedComment xmi:id="_9a1bGG6cEeSZe_WBkuFUeQ">
                <body>Holds information about the tower such as Level and current paid amount for&#xD;
this tower&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_9aOXEG6cEeSZe_WBkuFUeQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aOXEm6cEeSZe_WBkuFUeQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aO-IG6cEeSZe_WBkuFUeQ" name="Level">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aO-Im6cEeSZe_WBkuFUeQ" name="CurrentAmount">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aO-JG6cEeSZe_WBkuFUeQ" name="Range">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aPlMG6cEeSZe_WBkuFUeQ" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aPlMm6cEeSZe_WBkuFUeQ" name="Type" type="_9VuRkG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aQMQW6cEeSZe_WBkuFUeQ" name="Strategy" type="_9Vu4pG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aQzUG6cEeSZe_WBkuFUeQ" name="Shooting">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aQzUm6cEeSZe_WBkuFUeQ" name="crittersInRange" type="_9Wsh8G6cEeSZe_WBkuFUeQ" isOrdered="true" association="_9bAaM26cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9aQzU26cEeSZe_WBkuFUeQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aRaYG6cEeSZe_WBkuFUeQ" value="new ArrayList&lt;Critter>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aRaYm6cEeSZe_WBkuFUeQ" name="lastTimeSpan" type="_9ZA2I26cEeSZe_WBkuFUeQ"/>
              <interfaceRealization xmi:id="_9ZkPwG6cEeSZe_WBkuFUeQ" client="_9WSSQG6cEeSZe_WBkuFUeQ" supplier="_9ZA2IW6cEeSZe_WBkuFUeQ" contract="_9ZA2IW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9asRJm6cEeSZe_WBkuFUeQ" name="Tower" specification="_9WS5UG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9asRJ26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9asRKG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9asRKW6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9asRKm6cEeSZe_WBkuFUeQ" name="currentAmount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9asRK26cEeSZe_WBkuFUeQ" name="shooting">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9asRLG6cEeSZe_WBkuFUeQ" type="_9WSSQG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.x = x;&#xD;
		this.y = y;&#xD;
		this.Level = level;&#xD;
		this.CurrentAmount = currentAmount;&#xD;
		this.Type = TowerType.Regular;&#xD;
		this.Strategy = TowerStrategy.Closest;&#xD;
		this.Shooting = shooting;&#xD;
		this.lastTimeSpan = new Date();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9as4MG6cEeSZe_WBkuFUeQ" name="improveLevel" specification="_9WTgZ26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9as4MW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this.Level &lt; 5) {&#xD;
			this.Shooting -= 50;&#xD;
			this.Level++;&#xD;
			this.CurrentAmount += 50;&#xD;
			if (this.Level >= 3 &amp;&amp; this.Level &lt;= 4)&#xD;
				this.Range++;&#xD;
			else if (this.Level == 5) {&#xD;
				this.Range++;&#xD;
			}&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9as4Mm6cEeSZe_WBkuFUeQ" name="update" specification="_9Zk20m6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9as4M26cEeSZe_WBkuFUeQ" name="arg0" type="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9as4NG6cEeSZe_WBkuFUeQ" name="arg1" type="_9Zk20G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>Critter critter = (Critter) arg0;&#xD;
		if (!crittersInRange.contains(critter))&#xD;
			crittersInRange.add(critter);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9as4NW6cEeSZe_WBkuFUeQ" name="checkIfIsinTheAreaOfTower" specification="_9ZCEQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9as4Nm6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9as4N26cEeSZe_WBkuFUeQ" name="xp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9as4OG6cEeSZe_WBkuFUeQ" name="yp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9as4OW6cEeSZe_WBkuFUeQ" type="_9WSSQG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>boolean isIn = false;&#xD;
		for (int x = 0; x &lt; Runner.X_DIMENSION; x++) {&#xD;
			for (int y = 0; y &lt; Runner.Y_DIMENSION; y++) {&#xD;
&#xD;
				if (map.Data[y][x] == Map.TOWER) {&#xD;
					int centerX = x;&#xD;
					int centerY = y;&#xD;
&#xD;
					if (Math.abs((int) centerX - xp / 20)&#xD;
							+ Math.abs((int) centerY - yp / 20) &lt;= Range)&#xD;
						isIn = true;&#xD;
					else&#xD;
						isIn = false;&#xD;
&#xD;
					if (isIn) {&#xD;
						for (int i = 0; i &lt; Runner.TOWERS.size(); i++)&#xD;
							if (Runner.TOWERS.get(i).x == centerY&#xD;
									&amp;&amp; Runner.TOWERS.get(i).y == centerX) {&#xD;
								Tower tower = Runner.TOWERS.get(i);&#xD;
								Engine.graphic.setColor(Color.yellow);&#xD;
								drawCircle(Engine.graphic, tower.y * 20,&#xD;
										tower.x * 20, tower.Range * 20,&#xD;
										tower.Type == Type.Regular ? 1&#xD;
												: tower.Type == Type.Mass ? 10&#xD;
														: 5);&#xD;
								return this;&#xD;
							}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (isIn)&#xD;
			return this;&#xD;
		else&#xD;
			return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9as4Om6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_9Zld426cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9as4O26cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9as4PG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9as4PW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9as4Pm6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9as4P26cEeSZe_WBkuFUeQ" name="stroke">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// graphic.setStroke(new BasicStroke(stroke));&#xD;
		graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
		// graphic.setStroke(new BasicStroke(1));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9WS5UG6cEeSZe_WBkuFUeQ" name="Tower" method="_9asRJm6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9WTgZG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9WTgZW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9WS5UW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WTgYG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WTgYW6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WTgYm6cEeSZe_WBkuFUeQ" name="currentAmount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WTgY26cEeSZe_WBkuFUeQ" name="shooting">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WTgZm6cEeSZe_WBkuFUeQ" type="_9WSSQG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WTgZ26cEeSZe_WBkuFUeQ" name="improveLevel" method="_9as4MG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9WUHcG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZCEQG6cEeSZe_WBkuFUeQ" name="checkIfIsinTheAreaOfTower" method="_9as4NW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ZCEQW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9ZCEQm6cEeSZe_WBkuFUeQ" name="xp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZCEQ26cEeSZe_WBkuFUeQ" name="yp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZCERG6cEeSZe_WBkuFUeQ" type="_9WSSQG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9Zk20m6cEeSZe_WBkuFUeQ" name="update" method="_9as4Mm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9Zk2026cEeSZe_WBkuFUeQ" name="arg0" type="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Zk21G6cEeSZe_WBkuFUeQ" name="arg1" type="_9Zk20G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9Zld426cEeSZe_WBkuFUeQ" name="drawCircle" method="_9as4Om6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9Zld5G6cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9ZmE8G6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZmE8W6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZmE8m6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZmE826cEeSZe_WBkuFUeQ" name="stroke">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9a-lAG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9a-lAW6cEeSZe_WBkuFUeQ _9aEmEW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9a-lAW6cEeSZe_WBkuFUeQ" name="" type="_9Vwt0G6cEeSZe_WBkuFUeQ" association="_9a-lAG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9a-lA26cEeSZe_WBkuFUeQ" name="" memberEnd="_9a-lBG6cEeSZe_WBkuFUeQ _9aHpYG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9a-lBG6cEeSZe_WBkuFUeQ" name="" type="_9V20cG6cEeSZe_WBkuFUeQ" association="_9a-lA26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9a_MEW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9a_MEm6cEeSZe_WBkuFUeQ _9aKssG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9a_MEm6cEeSZe_WBkuFUeQ" name="" type="_9WPO9G6cEeSZe_WBkuFUeQ" association="_9a_MEW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9a_zIG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9a_zIW6cEeSZe_WBkuFUeQ _9aNI8W6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9a_zIW6cEeSZe_WBkuFUeQ" name="" type="_9WPO9G6cEeSZe_WBkuFUeQ" association="_9a_zIG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9a_zI26cEeSZe_WBkuFUeQ" name="" memberEnd="_9a_zJG6cEeSZe_WBkuFUeQ _9aNI826cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9a_zJG6cEeSZe_WBkuFUeQ" name="" type="_9WPO9G6cEeSZe_WBkuFUeQ" association="_9a_zI26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bAaMG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bAaMW6cEeSZe_WBkuFUeQ _9aNwAW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bAaMW6cEeSZe_WBkuFUeQ" name="" type="_9WPO9G6cEeSZe_WBkuFUeQ" association="_9bAaMG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bAaM26cEeSZe_WBkuFUeQ" name="" memberEnd="_9bAaNG6cEeSZe_WBkuFUeQ _9aQzUm6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bAaNG6cEeSZe_WBkuFUeQ" name="" type="_9WSSQG6cEeSZe_WBkuFUeQ" association="_9bAaM26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_9U5yMW6cEeSZe_WBkuFUeQ" name="elements">
            <packagedElement xmi:type="uml:Class" xmi:id="_9VpZEG6cEeSZe_WBkuFUeQ" name="HighLevelCritter">
              <ownedComment xmi:id="_9ay-0W6cEeSZe_WBkuFUeQ">
                <body>Representation of Critters which is created in level 5&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_9Yzax26cEeSZe_WBkuFUeQ" general="_9Wsh8G6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9amxlG6cEeSZe_WBkuFUeQ" name="HighLevelCritter" specification="_9YzawG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9amxlW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9amxlm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9amxl26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9amxmG6cEeSZe_WBkuFUeQ" type="_9VpZEG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(200);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9YzawG6cEeSZe_WBkuFUeQ" name="HighLevelCritter" method="_9amxlG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9YzaxG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9YzaxW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9YzawW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Yzawm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Yzaw26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Yzaxm6cEeSZe_WBkuFUeQ" type="_9VpZEG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9VqnMG6cEeSZe_WBkuFUeQ" name="LowLevelCritter">
              <ownedComment xmi:id="_9ay-0m6cEeSZe_WBkuFUeQ">
                <body>Representation of Critters which is created in level 1&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_9Y0B126cEeSZe_WBkuFUeQ" general="_9Wsh8G6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9amxmW6cEeSZe_WBkuFUeQ" name="LowLevelCritter" specification="_9Y0B0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9amxmm6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9amxm26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9amxnG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9amxnW6cEeSZe_WBkuFUeQ" type="_9VqnMG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(100);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9Y0B0G6cEeSZe_WBkuFUeQ" name="LowLevelCritter" method="_9amxmW6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9Y0B1G6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9Y0B1W6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9Y0B0W6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Y0B0m6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y0B026cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y0B1m6cEeSZe_WBkuFUeQ" type="_9VqnMG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9VrOQG6cEeSZe_WBkuFUeQ" name="MediumLevelCritter">
              <generalization xmi:id="_9Y0o526cEeSZe_WBkuFUeQ" general="_9Wsh8G6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9anYoG6cEeSZe_WBkuFUeQ" name="MediumLevelCritter" specification="_9Y0o4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9anYoW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9anYom6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9anYo26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9anYpG6cEeSZe_WBkuFUeQ" type="_9VrOQG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(150);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9Y0o4G6cEeSZe_WBkuFUeQ" name="MediumLevelCritter" method="_9anYoG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9Y0o5G6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9Y0o5W6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9Y0o4W6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Y0o4m6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y0o426cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Y0o5m6cEeSZe_WBkuFUeQ" type="_9VrOQG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9Wsh8G6cEeSZe_WBkuFUeQ" name="Critter">
              <ownedComment xmi:id="_9a3QR26cEeSZe_WBkuFUeQ">
                <body>Critter is the main moving element in the game that each critter has x and y&#xD;
which describes the current location or soon to be moved location&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_9ZzgUG6cEeSZe_WBkuFUeQ" general="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9agq8G6cEeSZe_WBkuFUeQ" name="x" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9agq8m6cEeSZe_WBkuFUeQ" name="y" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ahSA26cEeSZe_WBkuFUeQ" name="map" visibility="private" type="_9Vwt0G6cEeSZe_WBkuFUeQ" association="_9bMndG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9ah5EW6cEeSZe_WBkuFUeQ" name="ang" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ah5E26cEeSZe_WBkuFUeQ" name="lastCell" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9ah5FG6cEeSZe_WBkuFUeQ" value="&quot;0,0&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aigIW6cEeSZe_WBkuFUeQ" name="currentPathIndex" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aigIm6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aigJG6cEeSZe_WBkuFUeQ" name="existingLife" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aigJW6cEeSZe_WBkuFUeQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ajHMG6cEeSZe_WBkuFUeQ" name="toReduceTheMoney">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9ajHMW6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ajHMm6cEeSZe_WBkuFUeQ" name="flaggedToStopReduce" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9ajHM26cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ajuQG6cEeSZe_WBkuFUeQ" name="calcuatedX" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9ajuQW6cEeSZe_WBkuFUeQ" value="0.0f"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ajuQ26cEeSZe_WBkuFUeQ" name="calcuatedy" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9ajuRG6cEeSZe_WBkuFUeQ" value="0.0f"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9akVUG6cEeSZe_WBkuFUeQ" name="left">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9akVUW6cEeSZe_WBkuFUeQ" name="right" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9akVU26cEeSZe_WBkuFUeQ" name="up">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9akVVG6cEeSZe_WBkuFUeQ" name="down" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ak8YW6cEeSZe_WBkuFUeQ" name="stop" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9ak8Ym6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ak8ZG6cEeSZe_WBkuFUeQ" name="centerX">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aljcW6cEeSZe_WBkuFUeQ" name="centerY">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9awilm6cEeSZe_WBkuFUeQ" name="Critter" specification="_9ZVmQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9awil26cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9awimG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9awimW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9awimm6cEeSZe_WBkuFUeQ" type="_9Wsh8G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.map = map;&#xD;
		this.x = x;&#xD;
		this.y = y;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axJoG6cEeSZe_WBkuFUeQ" name="createCritter" specification="_9ZWNUG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9axJoW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9axJom6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axJo26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axJpG6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axJpW6cEeSZe_WBkuFUeQ" type="_9Wsh8G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>if (level == 1)&#xD;
			return new LowLevelCritter(map, x, y);&#xD;
&#xD;
		if (level > 1 &amp;&amp; level &lt;= 4)&#xD;
			return new MediumLevelCritter(map, x, y);&#xD;
&#xD;
		if (level >= 5)&#xD;
			return new HighLevelCritter(map, x, y);&#xD;
&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axJpm6cEeSZe_WBkuFUeQ" name="move" specification="_9Wu-MG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9axJp26cEeSZe_WBkuFUeQ" name="dx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axJqG6cEeSZe_WBkuFUeQ" name="dy">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axJqW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>float nx = x + dx;&#xD;
		float ny = y + dy;&#xD;
		x = nx;&#xD;
		y = ny;&#xD;
		ang = (float) (Math.atan2(dx, dy) - (Math.PI / 2));&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axJqm6cEeSZe_WBkuFUeQ" name="determineMovement" specification="_9Wu-NG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>if (stop)&#xD;
			return;&#xD;
		String currentPosition = Map.tryMapXYtoCellNumber((int) calcuatedX,&#xD;
				(int) calcuatedy);&#xD;
&#xD;
		if (!lastCell.equals(currentPosition)) {&#xD;
			if (proceedToMove((int) calcuatedX, (int) calcuatedy)) {&#xD;
				currentPathIndex += 1;&#xD;
				lastCell = currentPosition;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		MapGenerator mapp = map.MapGenerator;&#xD;
&#xD;
		if (((int) y) + 0.5 == mapp.getEndPoint() + 0.5&#xD;
				&amp;&amp; ((int) x) == mapp.getWidth() - 1) {&#xD;
			Engine.setGameOver();&#xD;
			stop();&#xD;
			return;&#xD;
		}&#xD;
		if (currentPathIndex &lt; MapGenerator.getPath().size()) {&#xD;
			Movement movement = MapGenerator.getPath().get(currentPathIndex);&#xD;
			if (movement == Movement.Left) {&#xD;
				setRight(false);&#xD;
				setLeft(true);&#xD;
				setDown(false);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Right) {&#xD;
				setRight(true);&#xD;
				setLeft(false);&#xD;
				setDown(false);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Down) {&#xD;
				setRight(false);&#xD;
				setLeft(false);&#xD;
				setDown(true);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Up) {&#xD;
				setRight(false);&#xD;
				setLeft(false);&#xD;
				setDown(false);&#xD;
				setUp(true);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axJq26cEeSZe_WBkuFUeQ" name="stop" specification="_9Wu-NW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>stop = true;&#xD;
		setUp(false);&#xD;
		setDown(false);&#xD;
		setLeft(false);&#xD;
		setRight(false);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axJrG6cEeSZe_WBkuFUeQ" name="moving" specification="_9ZW0YG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9axJrW6cEeSZe_WBkuFUeQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axJrm6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>float dx = 0;&#xD;
		float dy = 0;&#xD;
&#xD;
		determineMovement();&#xD;
		if (isLeft()) {&#xD;
			dx -= 1;&#xD;
		}&#xD;
		if (isRight()) {&#xD;
			dx += 1;&#xD;
		}&#xD;
		if (isUp()) {&#xD;
			dy -= 1;&#xD;
		}&#xD;
		if (isDown()) {&#xD;
			dy += 1;&#xD;
		}&#xD;
&#xD;
		if ((dx != 0) || (dy != 0)) {&#xD;
			move(dx * delta * 0.003f, dy * delta * 0.003f);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axwsG6cEeSZe_WBkuFUeQ" name="paint" specification="_9ZySMG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9axwsW6cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>if (!Engine.IS_CREATE_CRITTER)&#xD;
			return;&#xD;
		int xp = (int) (Map.TILE_SIZE * x);&#xD;
		int yp = (int) (Map.TILE_SIZE * y);&#xD;
		graphic.setColor(Color.green);&#xD;
		if (getExistingLife() &lt;= 0) {&#xD;
			this.existingLife = 0;&#xD;
			graphic.setColor(Color.red);&#xD;
			if (flaggedToStopReduce) {&#xD;
				flaggedToStopReduce = false;&#xD;
				toReduceTheMoney = true;&#xD;
			}&#xD;
&#xD;
			stop();&#xD;
		} else {&#xD;
			for (Tower tower : Runner.TOWERS) {&#xD;
&#xD;
				Tower currentTower = tower.checkIfIsinTheAreaOfTower(map, xp,&#xD;
						yp);&#xD;
				if (currentTower != null) {&#xD;
&#xD;
					setChanged();&#xD;
					notifyObservers(currentTower);&#xD;
				} else&#xD;
					tower.crittersInRange.remove(this);&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		calcuatedX = xp;&#xD;
		calcuatedy = yp;&#xD;
&#xD;
		graphic.rotate(ang, xp, yp);&#xD;
&#xD;
		graphic.drawString(Float.toString(getExistingLife()), (xp + 15),&#xD;
				(int) (yp + 5));&#xD;
		graphic.drawOval((int) (xp - 10), (int) (yp - 10), 20, 20);&#xD;
&#xD;
		graphic.rotate(-ang, xp, yp);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axwsm6cEeSZe_WBkuFUeQ" name="proceedToMove" specification="_9WvlQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9axws26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axwtG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axwtW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (int i = 0; i &lt; 400; i = i + 20)&#xD;
			for (int j = 0; j &lt; 400; j = j + 20) {&#xD;
				if (x == (i + (i + 20)) / 2)&#xD;
					if (y == (j + (j + 20)) / 2)&#xD;
						return true;&#xD;
			}&#xD;
		return false;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axwtm6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_9Zy5QG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9axwt26cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9axwuG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axwuW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9axwum6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axwu26cEeSZe_WBkuFUeQ" name="isRight" specification="_9WwMUW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9axwvG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return right;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9axwvW6cEeSZe_WBkuFUeQ" name="setRight" specification="_9WwMU26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9axwvm6cEeSZe_WBkuFUeQ" name="right">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.right = right;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ayXwG6cEeSZe_WBkuFUeQ" name="isDown" specification="_9WwzYG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ayXwW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return down;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ayXwm6cEeSZe_WBkuFUeQ" name="setDown" specification="_9WwzYm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ayXw26cEeSZe_WBkuFUeQ" name="down">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.down = down;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ayXxG6cEeSZe_WBkuFUeQ" name="setExistingLife" specification="_9WxacG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ayXxW6cEeSZe_WBkuFUeQ" name="existingLife">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <language>java</language>
                <body>this.existingLife = existingLife;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ayXxm6cEeSZe_WBkuFUeQ" name="getX" specification="_9Wxacm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ayXx26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return (int) this.x;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9Wu-MG6cEeSZe_WBkuFUeQ" name="move" method="_9axJpm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QSW6cEeSZe_WBkuFUeQ">
                  <body>Will move the critter toward the path based on dx and dy&#xD;
	 * &#xD;
	 * @param dx&#xD;
	 * @param dy&#xD;
	 * @return If the movement is performed correctly</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Wu-MW6cEeSZe_WBkuFUeQ" name="dx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Wu-Mm6cEeSZe_WBkuFUeQ" name="dy">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Wu-M26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wu-NG6cEeSZe_WBkuFUeQ" name="determineMovement" method="_9axJqm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QSm6cEeSZe_WBkuFUeQ">
                  <body>In this method the left,right,up and down would be updated based on the&#xD;
	 * next valid movement</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wu-NW6cEeSZe_WBkuFUeQ" name="stop" visibility="private" method="_9axJq26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QS26cEeSZe_WBkuFUeQ">
                  <body>Will stop any movement of current critter</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WvlQG6cEeSZe_WBkuFUeQ" name="proceedToMove" isStatic="true" method="_9axwsm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QTm6cEeSZe_WBkuFUeQ">
                  <body>This method is to make sure the next movement would be in the area of the&#xD;
	 * our map with the preferred dimension&#xD;
	 * &#xD;
	 * @param x&#xD;
	 * @param y&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WvlQW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WvlQm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WwMUG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WwMUW6cEeSZe_WBkuFUeQ" name="isRight" method="_9axwu26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a33UG6cEeSZe_WBkuFUeQ">
                  <body>checks for the right&#xD;
	 * &#xD;
	 * @return right variable</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WwMUm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WwMU26cEeSZe_WBkuFUeQ" name="setRight" method="_9axwvW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a33UW6cEeSZe_WBkuFUeQ">
                  <body>setter for the right variable&#xD;
	 * &#xD;
	 * @param right</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WwMVG6cEeSZe_WBkuFUeQ" name="right">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WwzYG6cEeSZe_WBkuFUeQ" name="isDown" method="_9ayXwG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a33Um6cEeSZe_WBkuFUeQ">
                  <body>checks for the down&#xD;
	 * &#xD;
	 * @return down variable</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WwzYW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WwzYm6cEeSZe_WBkuFUeQ" name="setDown" method="_9ayXwm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a33U26cEeSZe_WBkuFUeQ">
                  <body>setter for the down&#xD;
	 * &#xD;
	 * @param down</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WwzY26cEeSZe_WBkuFUeQ" name="down">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WxacG6cEeSZe_WBkuFUeQ" name="setExistingLife" method="_9ayXxG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a33VG6cEeSZe_WBkuFUeQ">
                  <body>setter for the existing life and is called by engine when the critter in&#xD;
	 * the area of shooting of towers&#xD;
	 * &#xD;
	 * @param existingLife</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WxacW6cEeSZe_WBkuFUeQ" name="existingLife">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wxacm6cEeSZe_WBkuFUeQ" name="getX" method="_9ayXxm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a33VW6cEeSZe_WBkuFUeQ">
                  <body>current position of critter in X-Axis&#xD;
	 * &#xD;
	 * @return x</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Wxac26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZVmQG6cEeSZe_WBkuFUeQ" name="Critter" visibility="protected" method="_9awilm6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9ZVmRG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9ZVmRW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_9a3QSG6cEeSZe_WBkuFUeQ">
                  <body>Create an instance of critter based on map x and y to locate the movement&#xD;
	 * &#xD;
	 * @param map&#xD;
	 * @param x&#xD;
	 * @param y</body>
                </ownedComment>
                <ownedParameter xmi:id="_9ZVmQW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9ZVmQm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZVmQ26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZVmRm6cEeSZe_WBkuFUeQ" type="_9Wsh8G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZWNUG6cEeSZe_WBkuFUeQ" name="createCritter" isStatic="true" method="_9axJoG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ZWNUW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9ZWNUm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZWNU26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZWNVG6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZWNVW6cEeSZe_WBkuFUeQ" type="_9Wsh8G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZW0YG6cEeSZe_WBkuFUeQ" name="moving" method="_9axJrG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QTG6cEeSZe_WBkuFUeQ">
                  <body>Physically move critter based on delta and those variable with set in&#xD;
	 * determineMovement method&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param map</body>
                </ownedComment>
                <ownedParameter xmi:id="_9ZW0YW6cEeSZe_WBkuFUeQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZW0Ym6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZySMG6cEeSZe_WBkuFUeQ" name="paint" method="_9axwsG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QTW6cEeSZe_WBkuFUeQ">
                  <body>After the movement has been taken place, the paint method is responsible&#xD;
	 * to show the new position of critter&#xD;
	 * &#xD;
	 * @param graphic</body>
                </ownedComment>
                <ownedParameter xmi:id="_9ZySMW6cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9Zy5QG6cEeSZe_WBkuFUeQ" name="drawCircle" method="_9axwtm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QT26cEeSZe_WBkuFUeQ">
                  <body>This method is used in when we want to show a circle around a tower for&#xD;
	 * the range of shooting&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            is the handle for depicting objects on it</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Zy5QW6cEeSZe_WBkuFUeQ" name="graphic" type="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9Zy5Qm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Zy5Q26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9Zy5RG6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bMndG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bMndW6cEeSZe_WBkuFUeQ _9ahSA26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bMndW6cEeSZe_WBkuFUeQ" name="" type="_9Wsh8G6cEeSZe_WBkuFUeQ" association="_9bMndG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_9U7AUW6cEeSZe_WBkuFUeQ" name="engine">
            <packagedElement xmi:type="uml:Class" xmi:id="_9VscYG6cEeSZe_WBkuFUeQ" name="ButtonHandler">
              <ownedComment xmi:id="_9ay-026cEeSZe_WBkuFUeQ">
                <body>This class would be used when we want to handle keyboard interactions from&#xD;
the player We may use map it for map creation it extends KeyAdapter</body>
              </ownedComment>
              <generalization xmi:id="_9ZewMm6cEeSZe_WBkuFUeQ" general="_9Y1P8G6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9anYpW6cEeSZe_WBkuFUeQ" name="ButtonHandler" specification="_9VtDcG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9anYpm6cEeSZe_WBkuFUeQ" type="_9VscYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>System.out.println(&quot; Button handler initialised! &quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9anYp26cEeSZe_WBkuFUeQ" name="keyPressed" specification="_9ZeJIG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9anYqG6cEeSZe_WBkuFUeQ" name="key" type="_9Y1P8m6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>switch (key.getKeyCode()) {&#xD;
		case KeyEvent.VK_UP:&#xD;
			// Critter..get(0).setUp(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_DOWN:&#xD;
			// Critter.critters.get(0).setDown(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_LEFT:&#xD;
			// Critter.critters.get(0).setLeft(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_RIGHT:&#xD;
			// Critter.critters.get(0).setRight(true);&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9anYqW6cEeSZe_WBkuFUeQ" name="keyReleased" specification="_9ZewMG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9anYqm6cEeSZe_WBkuFUeQ" name="key" type="_9Y1P8m6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>switch (key.getKeyCode()) {&#xD;
		case KeyEvent.VK_UP:&#xD;
			// Critter.critters.get(0).setUp(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_DOWN:&#xD;
			// Critter.critters.get(0).setDown(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_LEFT:&#xD;
			// Critter.critters.get(0).setLeft(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_RIGHT:&#xD;
&#xD;
			// Critter.critters.get(0).setRight(false);&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9VtDcG6cEeSZe_WBkuFUeQ" name="ButtonHandler" method="_9anYpW6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9VtDcW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9VtDcm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_9VtDc26cEeSZe_WBkuFUeQ" type="_9VscYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZeJIG6cEeSZe_WBkuFUeQ" name="keyPressed" method="_9anYp26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ZeJIW6cEeSZe_WBkuFUeQ" name="key" type="_9Y1P8m6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZewMG6cEeSZe_WBkuFUeQ" name="keyReleased" method="_9anYqW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ZewMW6cEeSZe_WBkuFUeQ" name="key" type="_9Y1P8m6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_9WlNMG6cEeSZe_WBkuFUeQ" name="Engine">
              <ownedComment xmi:id="_9a2pOG6cEeSZe_WBkuFUeQ">
                <body>This class is responsible for the game logic including the movements,&#xD;
creation of critters, accounting of the game and so on. In case of&#xD;
restarting, this class would be initialized again and its noteworthy to know&#xD;
that we make the constructor of this class private and we are going to&#xD;
initialize this class using initialEngine which is a static method returning&#xD;
new instance of class&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_9ZwdAG6cEeSZe_WBkuFUeQ" general="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9adnoW6cEeSZe_WBkuFUeQ" name="Panel" type="_9Y-Z4m6cEeSZe_WBkuFUeQ" association="_9bKyQW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aeOsW6cEeSZe_WBkuFUeQ" name="MAP" isStatic="true" type="_9Vwt0G6cEeSZe_WBkuFUeQ" association="_9bKyRG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aeOs26cEeSZe_WBkuFUeQ" name="MONEY" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aeOtG6cEeSZe_WBkuFUeQ" value="1000"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9ae1wG6cEeSZe_WBkuFUeQ" name="Surface" type="_9WPO9G6cEeSZe_WBkuFUeQ" association="_9bLZUW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9ae1wm6cEeSZe_WBkuFUeQ" name="critters" isStatic="true" type="_9Wsh8G6cEeSZe_WBkuFUeQ" isOrdered="true" association="_9bLZVG6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9ae1w26cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9afc0G6cEeSZe_WBkuFUeQ" name="gameLevelandNumberofCritters" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9afc0W6cEeSZe_WBkuFUeQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9afc026cEeSZe_WBkuFUeQ" name="IS_CREATE_CRITTER" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9afc1G6cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9agD4G6cEeSZe_WBkuFUeQ" name="graphic" isStatic="true" type="_9Y2eEm6cEeSZe_WBkuFUeQ" association="_9bMAYW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9agD4m6cEeSZe_WBkuFUeQ" name="engine" visibility="private" isStatic="true" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bMAZG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9agD5G6cEeSZe_WBkuFUeQ" name="strategy" type="_9Y9y0G6cEeSZe_WBkuFUeQ" isReadOnly="true" association="_9bMncW6cEeSZe_WBkuFUeQ"/>
              <interfaceRealization xmi:id="_9ZuAwG6cEeSZe_WBkuFUeQ" client="_9WlNMG6cEeSZe_WBkuFUeQ" supplier="_9ZA2IW6cEeSZe_WBkuFUeQ" contract="_9ZA2IW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9avUcG6cEeSZe_WBkuFUeQ" name="initialEngine" specification="_9ZR74G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9avUcW6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9avUcm6cEeSZe_WBkuFUeQ" name="createNew">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9avUc26cEeSZe_WBkuFUeQ" type="_9WlNMG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>MAP = map;&#xD;
		if (engine == null || createNew)&#xD;
			engine = new Engine();&#xD;
		return engine;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9avUdG6cEeSZe_WBkuFUeQ" name="Engine" specification="_9WmbUG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9avUdW6cEeSZe_WBkuFUeQ" type="_9WlNMG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Surface = new Surface(MAP, this);&#xD;
		critters = new ArrayList&lt;Critter>();&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++) {&#xD;
			Critter critter = Critter.createCritter(MAP, MAP.StartColumnIndex,&#xD;
					MAP.StartRowIndex, gameLevelandNumberofCritters);&#xD;
			critters.add(critter);&#xD;
			critter.addObserver(this);&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9avUdm6cEeSZe_WBkuFUeQ" name="update" specification="_9ZvO4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9avUd26cEeSZe_WBkuFUeQ" name="critterArg" type="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9avUeG6cEeSZe_WBkuFUeQ" name="towerArg" type="_9Zk20G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>Critter critter = (Critter) critterArg;&#xD;
		Tower tower = (Tower) towerArg;&#xD;
		Critter tempCritter = null;&#xD;
&#xD;
		if (tower.Strategy == TowerStrategy.Closest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			int minDX = 1000;&#xD;
			int minDY = 1000;&#xD;
			for (int i = 0; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (Math.abs((tower.crittersInRange.get(i).getX()) - tower.x) &lt; minDX&#xD;
						|| Math.abs((tower.crittersInRange.get(i).getY())&#xD;
								- tower.y) &lt; minDY) {&#xD;
					minDX = Math.abs((tower.crittersInRange.get(i).getX())&#xD;
							- tower.x);&#xD;
					minDY = Math.abs((tower.crittersInRange.get(i).getY())&#xD;
							- tower.y);&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
				}&#xD;
		} else if (tower.Strategy == TowerStrategy.Farthest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			int maxDX = 0;&#xD;
			int maxDY = 0;&#xD;
			for (int i = 0; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (Math.abs(tower.crittersInRange.get(i).getX() - tower.x) > maxDX&#xD;
						|| Math.abs(tower.crittersInRange.get(i).getY()&#xD;
								- tower.y) > maxDY) {&#xD;
					maxDX = Math.abs((tower.crittersInRange.get(i).getX())&#xD;
							- tower.x);&#xD;
					maxDY = Math.abs((tower.crittersInRange.get(i).getY())&#xD;
							- tower.y);&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
				}&#xD;
		} else if (tower.Strategy == TowerStrategy.Healthiest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			tempCritter = tower.crittersInRange.get(0);&#xD;
			for (int i = 1; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (tower.crittersInRange.get(i).getExistingLife() > tempCritter&#xD;
						.getExistingLife())&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
		} else if (tower.Strategy == TowerStrategy.Sickest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			tempCritter = tower.crittersInRange.get(0);&#xD;
			for (int i = 1; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (tower.crittersInRange.get(i).getExistingLife() &lt; tempCritter&#xD;
						.getExistingLife())&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
		}&#xD;
		if (critter == tempCritter) {&#xD;
			Date dateobj = new Date();&#xD;
			if (dateobj.getTime() - tower.lastTimeSpan.getTime() > tower.Shooting) {&#xD;
				int shootingType = 0;&#xD;
				if (tower.Type == TowerType.Regular)&#xD;
					shootingType = 1;&#xD;
				else if (tower.Type == TowerType.Mass)&#xD;
					shootingType = 10;&#xD;
				else {&#xD;
					shootingType = 2;&#xD;
					tower.Shooting = 50;&#xD;
				}&#xD;
				critter.setExistingLife((int) (critter.getExistingLife() - shootingType));&#xD;
				tower.lastTimeSpan = dateobj;&#xD;
			}&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9av7gG6cEeSZe_WBkuFUeQ" name="resetMoney" specification="_9WnCYG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>MONEY = 1000;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9av7gW6cEeSZe_WBkuFUeQ" name="withDraw" specification="_9WnCYW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9av7gm6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (checkBalance())&#xD;
			MONEY -= amount;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9av7g26cEeSZe_WBkuFUeQ" name="deposit" specification="_9WnCY26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9av7hG6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>MONEY += amount;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9av7hW6cEeSZe_WBkuFUeQ" name="checkBalance" specification="_9WnpcG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9av7hm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (MONEY >= 100)&#xD;
			return true;&#xD;
		else&#xD;
			return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9av7h26cEeSZe_WBkuFUeQ" name="setStrategy" specification="_9Zv18G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9av7iG6cEeSZe_WBkuFUeQ" name="strategy" type="_9Y9y0G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>this.strategy = strategy;&#xD;
		Surface.Strategy = strategy;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9av7iW6cEeSZe_WBkuFUeQ" name="playing" specification="_9Wnpcm6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>if (Runner.userEditing) {&#xD;
			critters = null;&#xD;
			refreshSurface();&#xD;
			strategy.show();&#xD;
			return;&#xD;
		}&#xD;
		if (critters == null) {&#xD;
			critters = new ArrayList&lt;Critter>();&#xD;
			for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
				if (critters.size() &lt; gameLevelandNumberofCritters) {&#xD;
					Critter critter = Critter.createCritter(MAP,&#xD;
							MAP.StartColumnIndex, MAP.StartRowIndex,&#xD;
							gameLevelandNumberofCritters);&#xD;
					critter.addObserver(this);&#xD;
					critters.add(critter);&#xD;
&#xD;
					for (Tower tower : Runner.TOWERS) {&#xD;
						critter.addObserver(tower);&#xD;
					}&#xD;
				}&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			if (critters.get(i).isToReduceTheMoney()) {&#xD;
				deposit(200);&#xD;
				critters.get(i).setToReduceTheMoney(false);&#xD;
			}&#xD;
&#xD;
		boolean toNewLevel = true;&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			if (critters.get(i).getExistingLife() > 0) {&#xD;
				toNewLevel = false;&#xD;
			}&#xD;
&#xD;
		if (toNewLevel) {&#xD;
			critters = null;&#xD;
			nextLevel();&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		graphic = refreshSurface();&#xD;
&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			critters.get(i).paint(graphic);&#xD;
&#xD;
		strategy.show();&#xD;
		try {&#xD;
			Thread.sleep(4);&#xD;
		} catch (Exception e) {&#xD;
&#xD;
		}&#xD;
&#xD;
		for (int index = 0; index &lt; gameLevelandNumberofCritters; index++)&#xD;
			critters.get(index).moving(5 + index, MAP);&#xD;
&#xD;
		try {&#xD;
			for (int index = 0; index &lt; gameLevelandNumberofCritters; index++) {&#xD;
				critters.get(index).moving(index % 5, MAP);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			// TODO: handle exception&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9awikG6cEeSZe_WBkuFUeQ" name="refreshSurface" specification="_9Wnpc26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9awikW6cEeSZe_WBkuFUeQ" type="_9Y2eEm6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Graphics2D g = (Graphics2D) strategy.getDrawGraphics();&#xD;
		Surface.refreshSurface(g);&#xD;
		strategy.show();&#xD;
		return g;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9awikm6cEeSZe_WBkuFUeQ" name="nextLevel" specification="_9WoQgG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>JOptionPane.showMessageDialog(null,&#xD;
				&quot;You Are Victorious! Press start and go to level: &quot;&#xD;
						+ (gameLevelandNumberofCritters + 1));&#xD;
&#xD;
		Engine.IS_CREATE_CRITTER = true;&#xD;
		gameLevelandNumberofCritters++;&#xD;
		deposit(500);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9awik26cEeSZe_WBkuFUeQ" name="setGameOver" specification="_9WoQgW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>JOptionPane.showMessageDialog(null, &quot;Game Over&quot;);&#xD;
		critters = null;&#xD;
		for (Tower tower : Runner.TOWERS) {&#xD;
			MAP.Data[tower.x][tower.y] = Map.BLOCKED;&#xD;
		}&#xD;
		Runner.TOWERS.clear();&#xD;
		Engine.IS_CREATE_CRITTER = true;&#xD;
		gameLevelandNumberofCritters = 1;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9WmbUG6cEeSZe_WBkuFUeQ" name="Engine" visibility="private" method="_9avUdG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9WmbUW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9WmbUm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_9a2pOm6cEeSZe_WBkuFUeQ">
                  <body>private constructor of Engine class that initialize map, map validation,&#xD;
	 * set the default value for money (1000), create surface based on the new&#xD;
	 * map. Here we also create two critter for our game and can be dynamic&#xD;
	 * based on the level of the game. For now we hard coded the creation of&#xD;
	 * these two critters.</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WmbU26cEeSZe_WBkuFUeQ" type="_9WlNMG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WnCYG6cEeSZe_WBkuFUeQ" name="resetMoney" method="_9av7gG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pO26cEeSZe_WBkuFUeQ">
                  <body>this methos is responsible for reseting game settings</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WnCYW6cEeSZe_WBkuFUeQ" name="withDraw" method="_9av7gW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pPG6cEeSZe_WBkuFUeQ">
                  <body>This is part of accounting system of the our game which will reduce the&#xD;
	 * amount of the user deposited. Then it will refresh the text of label for&#xD;
	 * showing the remaining amount of money&#xD;
	 * &#xD;
	 * @param amount&#xD;
	 *            represents the amount of money should be reduced from the&#xD;
	 *            deposit</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WnCYm6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WnCY26cEeSZe_WBkuFUeQ" name="deposit" method="_9av7g26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QQG6cEeSZe_WBkuFUeQ">
                  <body>This method will act in opposite of withdraw. it is used full when the&#xD;
	 * player sells the tower for half of the prices it pays for.</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WnCZG6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WnpcG6cEeSZe_WBkuFUeQ" name="checkBalance" method="_9av7hW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QQW6cEeSZe_WBkuFUeQ">
                  <body>It will be called whenever we want to make sure the player wont exceed&#xD;
	 * the amount it has for buying towers.&#xD;
	 * &#xD;
	 * @return will return true/false to indicate if the user positive balance&#xD;
	 *         or not.</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WnpcW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wnpcm6cEeSZe_WBkuFUeQ" name="playing" method="_9av7iW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QQ26cEeSZe_WBkuFUeQ">
                  <body>This public method is playing an important role in the game. It has the&#xD;
	 * game logic inside to be called by the thread frequently.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wnpc26cEeSZe_WBkuFUeQ" name="refreshSurface" method="_9awikG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QRG6cEeSZe_WBkuFUeQ">
                  <body>depicting latest changes on the screen&#xD;
	 * &#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Zv18m6cEeSZe_WBkuFUeQ" type="_9Y2eEm6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WoQgG6cEeSZe_WBkuFUeQ" name="nextLevel" method="_9awikm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QRW6cEeSZe_WBkuFUeQ">
                  <body>Transition from one level to another</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WoQgW6cEeSZe_WBkuFUeQ" name="setGameOver" isStatic="true" method="_9awik26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QRm6cEeSZe_WBkuFUeQ">
                  <body>This static method is called when the player cannot defend well from&#xD;
	 * critters and one critter reach the end point</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZR74G6cEeSZe_WBkuFUeQ" name="initialEngine" isStatic="true" method="_9avUcG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pOW6cEeSZe_WBkuFUeQ">
                  <body>Static method which is responsible for creating an instance of class&#xD;
	 * Engine and is accessible from outside because it's static method</body>
                </ownedComment>
                <ownedParameter xmi:id="_9ZR74W6cEeSZe_WBkuFUeQ" name="map" type="_9Vwt0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9ZR74m6cEeSZe_WBkuFUeQ" name="createNew">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZR7426cEeSZe_WBkuFUeQ" type="_9WlNMG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZvO4G6cEeSZe_WBkuFUeQ" name="update" method="_9avUdm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ZvO4W6cEeSZe_WBkuFUeQ" name="critterArg" type="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9ZvO4m6cEeSZe_WBkuFUeQ" name="towerArg" type="_9Zk20G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9Zv18G6cEeSZe_WBkuFUeQ" name="setStrategy" method="_9av7h26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a3QQm6cEeSZe_WBkuFUeQ">
                  <body>It is used to set the private value of strategy for internal usages will&#xD;
	 * assign BufferStrategy to local variable strategy.&#xD;
	 * &#xD;
	 * @param the&#xD;
	 *            value of this parameter should be correspond to the Surface&#xD;
	 *            which itself is extending the canvas</body>
                </ownedComment>
                <ownedParameter xmi:id="_9Zv18W6cEeSZe_WBkuFUeQ" name="strategy" type="_9Y9y0G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bKyQW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bKyQm6cEeSZe_WBkuFUeQ _9adnoW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bKyQm6cEeSZe_WBkuFUeQ" name="" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bKyQW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bKyRG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bKyRW6cEeSZe_WBkuFUeQ _9aeOsW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bKyRW6cEeSZe_WBkuFUeQ" name="" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bKyRG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bLZUW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bLZUm6cEeSZe_WBkuFUeQ _9ae1wG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bLZUm6cEeSZe_WBkuFUeQ" name="" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bLZUW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bLZVG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bLZVW6cEeSZe_WBkuFUeQ _9ae1wm6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bLZVW6cEeSZe_WBkuFUeQ" name="" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bLZVG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bMAYW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bMAYm6cEeSZe_WBkuFUeQ _9agD4G6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bMAYm6cEeSZe_WBkuFUeQ" name="" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bMAYW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bMAZG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bMAZW6cEeSZe_WBkuFUeQ _9agD4m6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bMAZW6cEeSZe_WBkuFUeQ" name="" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bMAZG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bMncW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bMncm6cEeSZe_WBkuFUeQ _9agD5G6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bMncm6cEeSZe_WBkuFUeQ" name="" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bMncW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_9U8OcG6cEeSZe_WBkuFUeQ" name="runner">
            <packagedElement xmi:type="uml:Class" xmi:id="_9WWjsG6cEeSZe_WBkuFUeQ" name="Runner">
              <ownedComment xmi:id="_9a1bGW6cEeSZe_WBkuFUeQ">
                <body>This is the entry class of the game which has main method that Java needs to&#xD;
execute the game. it consist of buttons that are responsible for controlling&#xD;
the game during execution. Although it gets the main panel instance from the&#xD;
surface and depict the menu on top of that.&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_9ZrkgG6cEeSZe_WBkuFUeQ" general="_9ZEggG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aSBcG6cEeSZe_WBkuFUeQ" name="TOWERS" isStatic="true" type="_9WSSQG6cEeSZe_WBkuFUeQ" isOrdered="true" association="_9bBBQG6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9aSBcW6cEeSZe_WBkuFUeQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aSBcm6cEeSZe_WBkuFUeQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aSogG6cEeSZe_WBkuFUeQ" name="paused" visibility="private" isStatic="true">
                <eAnnotations xmi:id="_9aSogW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9aSogm6cEeSZe_WBkuFUeQ" key="volatile"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aSog26cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aSohW6cEeSZe_WBkuFUeQ" name="map" visibility="private" isStatic="true" type="_9Vwt0G6cEeSZe_WBkuFUeQ" association="_9bBBQ26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aTPkG6cEeSZe_WBkuFUeQ" name="engine" visibility="private" isStatic="true" type="_9WlNMG6cEeSZe_WBkuFUeQ" association="_9bBoUG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aTPkm6cEeSZe_WBkuFUeQ" name="startPauseButton" visibility="private" isStatic="true" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bBoU26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aTPlG6cEeSZe_WBkuFUeQ" name="lock" visibility="private" isStatic="true" type="_9Zk20G6cEeSZe_WBkuFUeQ" association="_9bCPYW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aT2oG6cEeSZe_WBkuFUeQ" value="new Object()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aT2om6cEeSZe_WBkuFUeQ" name="gameSpeed" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aT2o26cEeSZe_WBkuFUeQ" value="10"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aT2pW6cEeSZe_WBkuFUeQ" name="mapGenerator" visibility="private" isStatic="true" type="_9V20cG6cEeSZe_WBkuFUeQ" association="_9bC2cW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aUdsW6cEeSZe_WBkuFUeQ" name="MoneyLabel" isStatic="true" type="_9Zn6IG6cEeSZe_WBkuFUeQ" association="_9bDdgW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aUds26cEeSZe_WBkuFUeQ" name="X_DIMENSION" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aUdtG6cEeSZe_WBkuFUeQ" value="15"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aVEwW6cEeSZe_WBkuFUeQ" name="Y_DIMENSION" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aVEwm6cEeSZe_WBkuFUeQ" value="15"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aVExG6cEeSZe_WBkuFUeQ" name="newGame" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aVExW6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aVr0W6cEeSZe_WBkuFUeQ" name="newEmptyGame" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aVr0m6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aVr1G6cEeSZe_WBkuFUeQ" name="userEditing" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aWS4G6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aWS4m6cEeSZe_WBkuFUeQ" name="StillBuilding" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aWS426cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aWS5W6cEeSZe_WBkuFUeQ" name="SelectedEntry" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aWS5m6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aW58W6cEeSZe_WBkuFUeQ" name="SelectedExit" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aW58m6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aW59G6cEeSZe_WBkuFUeQ" name="entry" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aXhAG6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aXhA26cEeSZe_WBkuFUeQ" name="createMap" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aXhBG6cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aYIEG6cEeSZe_WBkuFUeQ" name="Panel" isStatic="true" type="_9Y-Z4m6cEeSZe_WBkuFUeQ" association="_9bEEkG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aYIEm6cEeSZe_WBkuFUeQ" name="Frame" isStatic="true" type="_9Y-Z4G6cEeSZe_WBkuFUeQ" association="_9bEEk26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aYIFG6cEeSZe_WBkuFUeQ" name="Strategy" type="_9Y9y0G6cEeSZe_WBkuFUeQ" association="_9bEroW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aYvIW6cEeSZe_WBkuFUeQ" name="newMapButton" visibility="private" isStatic="true" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bFSsW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aYvI26cEeSZe_WBkuFUeQ" name="createUserMap" visibility="private" isStatic="true" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bFStG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aZWMW6cEeSZe_WBkuFUeQ" name="loadMapButton" visibility="private" isStatic="true" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bF5wW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aZWM26cEeSZe_WBkuFUeQ" name="saveMapButton" visibility="private" isStatic="true" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bF5xG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aZ9QW6cEeSZe_WBkuFUeQ" name="acceptChanges" visibility="private" isStatic="true" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bGg0W6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_9aZ9Q26cEeSZe_WBkuFUeQ" name="Strategy1" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bGg1G6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aZ9RG6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Closest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aakUG6cEeSZe_WBkuFUeQ" name="Strategy2" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bHH4W6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aakUW6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Farthest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9aakU26cEeSZe_WBkuFUeQ" name="Strategy3" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bHu8G6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9aakVG6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Sickest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9abLYG6cEeSZe_WBkuFUeQ" name="Strategy4" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bHu826cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9abLYW6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Healthiest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9abLY26cEeSZe_WBkuFUeQ" name="strategyShow" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bIWAW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9abLZG6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9abycG6cEeSZe_WBkuFUeQ" name="typeShow" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bIWBG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9abycW6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9abyc26cEeSZe_WBkuFUeQ" name="currentTowerStatusButton" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bI9EW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9abydG6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9acZgG6cEeSZe_WBkuFUeQ" name="currentTowerAmount" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bI9FG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9acZgW6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9acZg26cEeSZe_WBkuFUeQ" name="sellButton" visibility="private" type="_9ZnTEG6cEeSZe_WBkuFUeQ" association="_9bJkIm6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9acZhG6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9adAkG6cEeSZe_WBkuFUeQ" name="counter" visibility="private" type="_9Zq9cm6cEeSZe_WBkuFUeQ" association="_9bKLMG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9adAkW6cEeSZe_WBkuFUeQ" value="new Thread(new Runnable() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void run() {&#xD;&#xA;&#x9;&#x9;&#x9;while (true) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;work();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;})"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9adAk26cEeSZe_WBkuFUeQ" name="pauseResume" visibility="private" type="_9ZFuoG6cEeSZe_WBkuFUeQ" association="_9bKLM26cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9adAlG6cEeSZe_WBkuFUeQ" value="new ActionListener() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void actionPerformed(java.awt.event.ActionEvent e) {&#xD;&#xA;&#x9;&#x9;&#x9;// gameSpeed = (int) (gameSpeed > 0 ? gameSpeed - 0.5 : gameSpeed);&#xD;&#xA;&#x9;&#x9;&#x9;paused = !paused;&#xD;&#xA;&#x9;&#x9;&#x9;startPauseButton.setText(paused ? &quot;Resume&quot; : &quot;Pause&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;synchronized (lock) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;lock.notifyAll();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_9a2CIG6cEeSZe_WBkuFUeQ" name="exit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_9a2CI26cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_9ZmsAG6cEeSZe_WBkuFUeQ" client="_9WWjsG6cEeSZe_WBkuFUeQ" supplier="_9ZA2IW6cEeSZe_WBkuFUeQ" contract="_9ZA2IW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9atfQG6cEeSZe_WBkuFUeQ" name="main" specification="_9WZnAG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9atfQW6cEeSZe_WBkuFUeQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9atfQm6cEeSZe_WBkuFUeQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>java.awt.EventQueue.invokeLater(new Runnable() {&#xD;
			@Override&#xD;
			public void run() {&#xD;
				new Runner();&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9atfQ26cEeSZe_WBkuFUeQ" name="Runner" specification="_9WaOEW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9atfRG6cEeSZe_WBkuFUeQ" type="_9WWjsG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>createNewGame();&#xD;
		createMainSurface();&#xD;
		engine.setStrategy(Strategy);&#xD;
		createButtons();&#xD;
&#xD;
		startPauseButton.addActionListener(pauseResume);&#xD;
		handleMouseActions();&#xD;
		counter.start();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9atfRW6cEeSZe_WBkuFUeQ" name="createNewGame" specification="_9WaOFW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>String levelToPlay = JOptionPane.showInputDialog(Panel,&#xD;
				&quot;The level you want play:&quot;, &quot;1&quot;);&#xD;
		Engine.gameLevelandNumberofCritters = Integer.parseInt(levelToPlay);&#xD;
		if (createMap) {&#xD;
			createMap();&#xD;
			map.generateMap();&#xD;
			createMap = true;&#xD;
		}&#xD;
		engineInitializingObserving();&#xD;
		if (MoneyLabel != null)&#xD;
			engine.resetMoney();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9auGUG6cEeSZe_WBkuFUeQ" name="createEmptyMap" specification="_9Wa1IG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>Engine.IS_CREATE_CRITTER = false;&#xD;
		map = new Map(X_DIMENSION, Y_DIMENSION);&#xD;
		for (int i = 0; i &lt; X_DIMENSION; i++)&#xD;
			for (int j = 0; j &lt; Y_DIMENSION; j++) {&#xD;
				map.Data[i][j] = Map.BLOCKED;&#xD;
			}&#xD;
		&#xD;
		engineInitializingObserving();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9auGUW6cEeSZe_WBkuFUeQ" name="createMap" specification="_9Wa1IW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>map = new Map(X_DIMENSION, Y_DIMENSION);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9auGUm6cEeSZe_WBkuFUeQ" name="engineInitializingObserving" specification="_9Wa1Im6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>engine = Engine.initialEngine(map,true);&#xD;
		engine.addObserver(this);&#xD;
		engine.setStrategy(Strategy);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9auGU26cEeSZe_WBkuFUeQ" name="update" specification="_9ZpvUG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9auGVG6cEeSZe_WBkuFUeQ" name="arg0" type="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9auGVW6cEeSZe_WBkuFUeQ" name="arg1" type="_9Zk20G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>MoneyLabel.setText(&quot;Balance: &quot; + Integer.toString(engine.MONEY) + &quot;$&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9auGVm6cEeSZe_WBkuFUeQ" name="createMainSurface" specification="_9Wa1I26cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>int WIDTH = map.Width * (Runner.X_DIMENSION + 50);&#xD;
		int HEIGHT = map.Height * (Runner.Y_DIMENSION + 30);&#xD;
&#xD;
		Frame = new JFrame(&quot;Tower Game&quot;);&#xD;
&#xD;
		Frame.setLayout(new BorderLayout());&#xD;
&#xD;
		Panel = new JPanel();&#xD;
		Panel.setPreferredSize(new Dimension(20, 50));&#xD;
		Panel.setBackground(Color.black);&#xD;
		setBackground(Color.black);&#xD;
		Frame.add(Panel, BorderLayout.NORTH);&#xD;
&#xD;
		setBounds(0, 0, 500, 500);&#xD;
		Frame.add(this, BorderLayout.CENTER);&#xD;
		Frame.setSize(WIDTH, HEIGHT);&#xD;
		Frame.setResizable(false);&#xD;
		Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		Frame.setLocationRelativeTo(null);&#xD;
		Frame.setVisible(true);&#xD;
		addKeyListener(new ButtonHandler());&#xD;
		requestFocus();&#xD;
&#xD;
		createBufferStrategy(2);&#xD;
		Strategy = getBufferStrategy();&#xD;
&#xD;
		// handleMouseActions(Frame);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9auGV26cEeSZe_WBkuFUeQ" name="createButtons" specification="_9WbcMG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>startPauseButton = new JButton(&quot;Pause&quot;);&#xD;
		newMapButton = new JButton(&quot;New Game&quot;);&#xD;
		createUserMap = new JButton(&quot;Create User Map&quot;);&#xD;
		loadMapButton = new JButton(&quot;Load Map&quot;);&#xD;
		saveMapButton = new JButton(&quot;Save Map&quot;);&#xD;
		acceptChanges = new JButton(&quot;Accept MAp&quot;);&#xD;
		MoneyLabel = new JLabel(&quot;Balance: &quot; + Integer.toString(Engine.MONEY)&#xD;
				+ &quot;$&quot;, SwingConstants.RIGHT);&#xD;
		MoneyLabel.setForeground(Color.white);&#xD;
&#xD;
		Panel.add(startPauseButton);&#xD;
		Panel.add(newMapButton);&#xD;
		Panel.add(createUserMap);&#xD;
		Panel.add(loadMapButton);&#xD;
		Panel.add(saveMapButton);&#xD;
		Panel.add(MoneyLabel, BorderLayout.WEST);&#xD;
&#xD;
		Panel.add(acceptChanges);&#xD;
		acceptChanges.setVisible(false);&#xD;
&#xD;
		newMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				newGame = true;&#xD;
			}&#xD;
		});&#xD;
&#xD;
		saveMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				JFileChooser chooser = new JFileChooser();&#xD;
				// chooser.setCurrentDirectory(new java.io.File(&quot;.&quot;));&#xD;
				chooser.setDialogTitle(&quot;select folder&quot;);&#xD;
				chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);&#xD;
				chooser.setAcceptAllFileFilterUsed(false);&#xD;
&#xD;
				int returnVal = chooser.showSaveDialog(Panel);&#xD;
				if (returnVal == JFileChooser.APPROVE_OPTION) {&#xD;
					String str = chooser.getSelectedFile().getName();&#xD;
					try {&#xD;
						Engine.MAP.MapGenerator.SaveMap(str);&#xD;
					} catch (IOException e1) {&#xD;
						e1.printStackTrace();&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
&#xD;
		loadMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
&#xD;
				userEditing = true;&#xD;
				acceptChanges.setVisible(true);&#xD;
				int height, width;&#xD;
				JFileChooser chooser = new JFileChooser();&#xD;
				FileNameExtensionFilter filter = new FileNameExtensionFilter(&#xD;
						&quot;mp Maps&quot;, &quot;mp&quot;);&#xD;
				chooser.setFileFilter(filter);&#xD;
				int returnVal = chooser.showOpenDialog(Panel);&#xD;
				if (returnVal == JFileChooser.APPROVE_OPTION) {&#xD;
					System.out.println(&quot;Loading...&quot;);&#xD;
					String str = chooser.getSelectedFile().getName();&#xD;
					try {&#xD;
						BufferedReader br = new BufferedReader(new FileReader(&#xD;
								str));&#xD;
						try {&#xD;
							String line = br.readLine();&#xD;
							height = Integer.parseInt(line);&#xD;
							// mapGenerator.setHeight(Integer.parseInt(line));&#xD;
							line = br.readLine();&#xD;
							width = Integer.parseInt(line);&#xD;
							// mapGenerator.setWidth (Integer.parseInt(line));&#xD;
							mapGenerator = new MapGenerator(height, width);&#xD;
							SelectedEntry = true;&#xD;
							SelectedExit = true;&#xD;
							line = br.readLine();&#xD;
							int newStart = Integer.parseInt(line);&#xD;
							mapGenerator.setStartingPoint(newStart);&#xD;
							entry = newStart;&#xD;
							Runner.X_DIMENSION = height;&#xD;
							Runner.Y_DIMENSION = width;&#xD;
							line = br.readLine();&#xD;
							int newEnd = Integer.parseInt(line);&#xD;
							mapGenerator.setEndPoint(newEnd);&#xD;
							exit = newEnd;&#xD;
							line = br.readLine();&#xD;
							while (line != null) {&#xD;
								switch (line) {&#xD;
								case &quot;Up&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Up);&#xD;
									break;&#xD;
								case &quot;Down&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Down);&#xD;
									break;&#xD;
								case &quot;Right&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Right);&#xD;
									break;&#xD;
								case &quot;Left&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Left);&#xD;
									break;&#xD;
								default:&#xD;
									break;&#xD;
								}&#xD;
								line = br.readLine();&#xD;
							}&#xD;
						} finally {&#xD;
							br.close();&#xD;
						}&#xD;
						int curI = mapGenerator.getStartinPoint(), curJ = 0;&#xD;
						mapGenerator.Grid[curI][curJ].value = Status.isPath;&#xD;
						for (int i = 0; i &lt; mapGenerator.getPath().size(); i++) {&#xD;
							Movement dir = mapGenerator.getPath().get(i);&#xD;
							switch (dir) {&#xD;
							case Up:&#xD;
								// Go Up&#xD;
								curI--;&#xD;
								break;&#xD;
							case Down:&#xD;
								// Go Down&#xD;
								curI++;&#xD;
								break;&#xD;
							case Left:&#xD;
								// Go Left&#xD;
								curJ--;&#xD;
								break;&#xD;
							case Right:&#xD;
								// Go Right&#xD;
								curJ++;&#xD;
								break;&#xD;
							default:&#xD;
								break;&#xD;
							}&#xD;
							if (curI &lt; mapGenerator.getHeight() &amp;&amp; curI >= 0&#xD;
									&amp;&amp; curJ &lt; mapGenerator.getWidth()&#xD;
									&amp;&amp; curJ >= 0)&#xD;
								mapGenerator.Grid[curI][curJ].value = Status.isPath;&#xD;
						}&#xD;
						for (int i = 0; i &lt; mapGenerator.getHeight(); i++)&#xD;
							for (int j = 0; j &lt; mapGenerator.getWidth(); j++)&#xD;
								if (mapGenerator.Grid[i][j].value != Status.isPath)&#xD;
									mapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
						// Printing&#xD;
						System.out.println(&quot;Map Loaded:&quot;);&#xD;
						for (int i = 0; i &lt; mapGenerator.getHeight(); i++) {&#xD;
							System.out.print(&quot;|&quot;);&#xD;
							for (int j = 0; j &lt; mapGenerator.getWidth(); j++)&#xD;
								if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
									System.out.print(&quot;X|&quot;);&#xD;
								else&#xD;
									System.out.print(&quot; |&quot;);&#xD;
							System.out.println();&#xD;
						}&#xD;
&#xD;
						for (int i = 0; i &lt; mapGenerator.getPath().size(); i++)&#xD;
							System.out.print(mapGenerator.getPath().get(i)&#xD;
									+ &quot; &quot;);&#xD;
						System.out.println(&quot;&quot;);&#xD;
						// mapGenerator.LoadMap(str);&#xD;
						map.setMapGenerator(mapGenerator);&#xD;
						// Engine.MAP_VALIDATION = new MapValidation(map);&#xD;
&#xD;
						Engine.critters = null;&#xD;
						StillBuilding = true;&#xD;
						// Window w = SwingUtilities&#xD;
						// .getWindowAncestor(engine.Panel);&#xD;
						// w.setVisible(false);&#xD;
&#xD;
						// new Runner();&#xD;
&#xD;
					} catch (IOException e1) {&#xD;
						e1.printStackTrace();&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
&#xD;
		createUserMap.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				String X_Y = JOptionPane.showInputDialog(Panel,&#xD;
						&quot;Put in your dimension:&quot;, &quot;15,15&quot;);&#xD;
				newEmptyGame = true;&#xD;
				String[] parts = X_Y.split(&quot;,&quot;);&#xD;
				int x = Integer.parseInt(parts[1]);&#xD;
				int y = Integer.parseInt(parts[0]);&#xD;
				// TODO Auto-generated method stub&#xD;
				X_DIMENSION = x;&#xD;
				Y_DIMENSION = y;&#xD;
				userEditing = true;&#xD;
				acceptChanges.setVisible(true);&#xD;
				StillBuilding = true;&#xD;
				SelectedEntry = false; // 1st selection&#xD;
				SelectedExit = false; // 2nd selection&#xD;
			}&#xD;
		});&#xD;
&#xD;
		acceptChanges.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				// TODO Auto-generated method stub&#xD;
				if (SelectedEntry &amp;&amp; SelectedExit) {&#xD;
					if (map.UserDefinedMapValidation(entry, exit, map.Height,&#xD;
							map.Width)) {&#xD;
						// show appropriate message&#xD;
						userEditing = false;&#xD;
						StillBuilding = false;&#xD;
						acceptChanges.setVisible(false);&#xD;
						createMap = false;&#xD;
						Engine.IS_CREATE_CRITTER = true;&#xD;
					} else {&#xD;
						StillBuilding = true;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9autYG6cEeSZe_WBkuFUeQ" name="work" specification="_9WbcMW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>allowPause();&#xD;
		if (newGame) {&#xD;
			createNewGame();&#xD;
			newGame = false;&#xD;
		}&#xD;
		if (newEmptyGame) {&#xD;
			createEmptyMap();&#xD;
			newEmptyGame = false;&#xD;
		}&#xD;
		engine.playing();&#xD;
		sleep();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9autYW6cEeSZe_WBkuFUeQ" name="allowPause" specification="_9WbcMm6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>synchronized (lock) {&#xD;
			while (paused) {&#xD;
				try {&#xD;
					lock.wait();&#xD;
				} catch (InterruptedException e) {&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9autYm6cEeSZe_WBkuFUeQ" name="sleep" specification="_9WbcM26cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>try {&#xD;
			Thread.sleep(gameSpeed);&#xD;
		} catch (InterruptedException e) {&#xD;
&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9autY26cEeSZe_WBkuFUeQ" name="done" specification="_9WcDQG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>startPauseButton.setText(&quot;Start&quot;);&#xD;
		paused = true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9autZG6cEeSZe_WBkuFUeQ" name="handleMouseActions" specification="_9WcDQW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>addMouseListener(new MouseAdapter() {&#xD;
			private Color background;&#xD;
&#xD;
			@Override&#xD;
			public void mousePressed(MouseEvent e) {&#xD;
				if (userEditing) {&#xD;
					String clickedPoint = Map.tryMapXYtoCellNumber(&#xD;
							e.getX() - 100, e.getY() - 100);&#xD;
					String[] parts = clickedPoint.split(&quot;,&quot;);&#xD;
					int x, y;&#xD;
&#xD;
					try {&#xD;
						x = Integer.parseInt(parts[1]);&#xD;
						y = Integer.parseInt(parts[0]);&#xD;
					} catch (Exception e2) {&#xD;
						return;&#xD;
					}&#xD;
&#xD;
					if (StillBuilding &amp;&amp; !SelectedEntry &amp;&amp; !SelectedExit) {&#xD;
						// select entry point;&#xD;
						if (y == 0) {&#xD;
							entry = x;&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
							SelectedEntry = true;&#xD;
						} else {&#xD;
							// show message to select from the first column&#xD;
							System.out.println(&quot;Select from the 1st column!&quot;);&#xD;
						}&#xD;
					} else if (StillBuilding &amp;&amp; SelectedEntry &amp;&amp; !SelectedExit) {&#xD;
						// select exit point;&#xD;
						if (y == map.Width - 1) {&#xD;
							exit = x;&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
							SelectedExit = true;&#xD;
						} else {&#xD;
							// show message to select from the last column&#xD;
							System.out.println(&quot;Select from the last column!&quot;);&#xD;
						}&#xD;
					} else if (StillBuilding &amp;&amp; SelectedEntry &amp;&amp; SelectedExit) {&#xD;
						if (map.Data[x][y] == Map.BLOCKED)&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
						else {&#xD;
							if (x != entry || x != exit)&#xD;
								map.Data[x][y] = Map.BLOCKED;&#xD;
							// else if (x == entry &amp;&amp; y == 0) {&#xD;
							// SelectedEntry = false;&#xD;
							// System.out.println(&quot;Select new entry point&quot;);&#xD;
							// } else if (x == exit &amp;&amp; y == map.Width - 1) {&#xD;
							// SelectedExit = false;&#xD;
							// System.out.println(&quot;Select new exit point&quot;);&#xD;
							// }&#xD;
						}&#xD;
					}&#xD;
&#xD;
				} else {&#xD;
					String clickedPoint = Map.tryMapXYtoCellNumber(&#xD;
							e.getX() - 100, e.getY() - 100);&#xD;
					String[] parts = clickedPoint.split(&quot;,&quot;);&#xD;
					int x = Integer.parseInt(parts[1]);&#xD;
					int y = Integer.parseInt(parts[0]);&#xD;
					if (map.Data[x][y] == Map.BLOCKED) {&#xD;
						if (engine.checkBalance()) {&#xD;
							JButton regularTypeButton = new JButton(&quot;Regular&quot;);&#xD;
							JButton massTypeButton = new JButton(&#xD;
									&quot;Mass Shooting&quot;);&#xD;
							JButton riffleTypeButton = new JButton(&#xD;
									&quot;Riffle Shooting&quot;);&#xD;
&#xD;
							final JFrame parent = new JFrame();&#xD;
&#xD;
							currentTowerAmount.setEnabled(false);&#xD;
&#xD;
							strategyShow.setEnabled(false);&#xD;
&#xD;
							parent.add(regularTypeButton);&#xD;
							parent.add(massTypeButton);&#xD;
							parent.add(riffleTypeButton);&#xD;
&#xD;
							parent.getContentPane().setLayout(&#xD;
									new GridLayout(3, 3));&#xD;
&#xD;
							parent.pack();&#xD;
							parent.setLocationRelativeTo(null);&#xD;
							parent.setVisible(true);&#xD;
&#xD;
							parent.repaint();&#xD;
							final Tower newTower = new Tower(x, y, 1, 100, 200);&#xD;
&#xD;
							regularTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Regular;&#xD;
&#xD;
											parent.setVisible(false);&#xD;
&#xD;
										}&#xD;
									});&#xD;
&#xD;
							massTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Mass;&#xD;
											engine.withDraw(200);&#xD;
											parent.setVisible(false);&#xD;
&#xD;
										}&#xD;
									});&#xD;
&#xD;
							riffleTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Riffle;&#xD;
											engine.withDraw(100);&#xD;
											parent.setVisible(false);&#xD;
										}&#xD;
									});&#xD;
&#xD;
							TOWERS.add(newTower);&#xD;
							for (Critter critter : Engine.critters) {&#xD;
								critter.addObserver(newTower);&#xD;
							}&#xD;
							map.Data[x][y] = Map.TOWER;&#xD;
							engine.withDraw(100);&#xD;
						} else&#xD;
							JOptionPane.showMessageDialog(null,&#xD;
									&quot;No More Money!&quot;);&#xD;
					} else if (map.Data[x][y] == Map.TOWER) {&#xD;
						if (e.isAltDown()) {&#xD;
							showCharacteristics(x, y);&#xD;
						} else {&#xD;
&#xD;
							int amountToDeposit = GetTower(x, y).CurrentAmount / 2;&#xD;
							map.Data[x][y] = Map.BLOCKED;&#xD;
							engine.deposit(amountToDeposit);&#xD;
							Iterator&lt;Tower> i = TOWERS.iterator();&#xD;
							while (i.hasNext()) {&#xD;
								Tower tower = i.next();&#xD;
								if (tower.x == x &amp;&amp; tower.y == y)&#xD;
									i.remove();&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
&#xD;
			private void showCharacteristics(int x, int y) {&#xD;
				final Tower tower = GetTower(x, y);&#xD;
				final JFrame parent = new JFrame();&#xD;
&#xD;
				final JPanel informationPanel = new JPanel();&#xD;
				final JPanel strategyPanel = new JPanel();&#xD;
				final JPanel actionPanel = new JPanel();&#xD;
&#xD;
				currentTowerAmount.setEnabled(false);&#xD;
&#xD;
				strategyShow.setEnabled(false);&#xD;
				typeShow.setEnabled(false);&#xD;
&#xD;
				informationPanel.add(typeShow);&#xD;
&#xD;
				informationPanel.add(currentTowerAmount);&#xD;
&#xD;
				parent.add(informationPanel, BorderLayout.NORTH);&#xD;
&#xD;
				actionPanel.add(currentTowerStatusButton);&#xD;
				actionPanel.add(sellButton);&#xD;
				parent.add(actionPanel, BorderLayout.CENTER);&#xD;
&#xD;
				strategyPanel.add(Strategy1);&#xD;
				strategyPanel.add(Strategy2);&#xD;
				strategyPanel.add(Strategy3);&#xD;
				strategyPanel.add(Strategy4);&#xD;
				strategyPanel.add(strategyShow);&#xD;
				parent.add(strategyPanel, BorderLayout.SOUTH);&#xD;
&#xD;
				updateValues(tower);&#xD;
&#xD;
				parent.getContentPane().setLayout(new GridLayout(3, 3));&#xD;
&#xD;
				parent.pack();&#xD;
				parent.setLocationRelativeTo(null);&#xD;
				parent.setVisible(true);&#xD;
&#xD;
				parent.repaint();&#xD;
&#xD;
				currentTowerStatusButton&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								if (tower.improveLevel()) {&#xD;
									engine.withDraw(50);&#xD;
									updateValues(tower);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
				sellButton&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								map.Data[tower.x][tower.y] = Map.BLOCKED;&#xD;
								engine.deposit(tower.CurrentAmount / 2);&#xD;
								parent.setVisible(false);&#xD;
							}&#xD;
						});&#xD;
				Strategy1&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Closest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy2&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Farthest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy3&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Sickest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy4&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Healthiest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
			}&#xD;
&#xD;
			private void updateValues(Tower tower) {&#xD;
				currentTowerStatusButton&#xD;
						.setText(&quot;Increase the power of tower with 50$ (current is: [&quot;&#xD;
								+ tower.Level + &quot;])&quot;);&#xD;
&#xD;
				sellButton.setText(&quot;Sell this tower ($&quot;&#xD;
						+ (tower.CurrentAmount / 2) + &quot;)&quot;);&#xD;
&#xD;
				currentTowerAmount&#xD;
						.setText(&quot;Amount you paid for this tower so far is: &quot;&#xD;
								+ tower.CurrentAmount);&#xD;
&#xD;
				// if (tower.Level &lt; 5)&#xD;
				// currentShooting.setText(&quot;Current Shooting rate is:  &quot;&#xD;
				// + tower.Shooting + &quot;  Update to  &quot; + (tower.Shooting&#xD;
				// +50));&#xD;
				// else&#xD;
				// currentShooting.setText(&quot;Current Shoothin rate is: &quot;&#xD;
				// + tower.Shooting + &quot; Cannot Update.&quot;);&#xD;
&#xD;
				strategyShow.setText(&quot;Strategy: &quot; + tower.Strategy.toString());&#xD;
				typeShow.setText(&quot;Type of Tower: &quot; + tower.Type.toString());&#xD;
&#xD;
			}&#xD;
&#xD;
			@Override&#xD;
			public void mouseReleased(MouseEvent e) {&#xD;
				setBackground(background);&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9autZW6cEeSZe_WBkuFUeQ" name="GetTower" specification="_9WcDQm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9autZm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9autZ26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9autaG6cEeSZe_WBkuFUeQ" type="_9WSSQG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Iterator&lt;Tower> i = TOWERS.iterator();&#xD;
		while (i.hasNext()) {&#xD;
			Tower tower = i.next();&#xD;
			if (tower.x == x &amp;&amp; tower.y == y)&#xD;
				return tower;&#xD;
		}&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_9WZnAG6cEeSZe_WBkuFUeQ" name="main" isStatic="true" method="_9atfQG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2CJG6cEeSZe_WBkuFUeQ">
                  <body>main method of the program it has not yet finished because we are going&#xD;
	 * to obtain game dimension from String[] args&#xD;
	 * &#xD;
	 * @param args&#xD;
	 *            is intended to get custom argument from user when running the&#xD;
	 *            program</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WZnAW6cEeSZe_WBkuFUeQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9WaOEG6cEeSZe_WBkuFUeQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_9WaOEW6cEeSZe_WBkuFUeQ" name="Runner" method="_9atfQ26cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_9WaOEm6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_9WaOE26cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_9a2CJW6cEeSZe_WBkuFUeQ">
                  <body>This is the constructor of our runner class and in this method we create&#xD;
	 * an instance of Game Engine</body>
                </ownedComment>
                <ownedParameter xmi:id="_9WaOFG6cEeSZe_WBkuFUeQ" type="_9WWjsG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9WaOFW6cEeSZe_WBkuFUeQ" name="createNewGame" visibility="private" method="_9atfRW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2CJm6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for creating new instance of game</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wa1IG6cEeSZe_WBkuFUeQ" name="createEmptyMap" visibility="private" method="_9auGUG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2CJ26cEeSZe_WBkuFUeQ">
                  <body>Create a new empty map based on the user request for create new user&#xD;
	 * defined map</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wa1IW6cEeSZe_WBkuFUeQ" name="createMap" visibility="private" isStatic="true" method="_9auGUW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2CKG6cEeSZe_WBkuFUeQ">
                  <body>just private method that is called by createNewGame()</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wa1Im6cEeSZe_WBkuFUeQ" name="engineInitializingObserving" visibility="private" method="_9auGUm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pMG6cEeSZe_WBkuFUeQ">
                  <body>Add observers to the engine class which in this case is Runner itself</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9Wa1I26cEeSZe_WBkuFUeQ" name="createMainSurface" visibility="private" method="_9auGVm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pMW6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for painting the game environment</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WbcMG6cEeSZe_WBkuFUeQ" name="createButtons" isStatic="true" method="_9auGV26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pMm6cEeSZe_WBkuFUeQ">
                  <body>This methods is responsible for creating buttons and put them inside the&#xD;
	 * panel that we receive from engine which is received from surface in a&#xD;
	 * sequence of gets.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WbcMW6cEeSZe_WBkuFUeQ" name="work" visibility="private" method="_9autYG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pM26cEeSZe_WBkuFUeQ">
                  <body>Work() intends to handle ongoing play from the beginning of game to the&#xD;
	 * end of the game</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WbcMm6cEeSZe_WBkuFUeQ" name="allowPause" visibility="private" method="_9autYW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pNG6cEeSZe_WBkuFUeQ">
                  <body>allowPause is called in short time boxes just to check if the&#xD;
	 * Pause/Resume button pressed or not</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WbcM26cEeSZe_WBkuFUeQ" name="sleep" visibility="private" method="_9autYm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pNW6cEeSZe_WBkuFUeQ">
                  <body>This method handles sleeps during execution of thread</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WcDQG6cEeSZe_WBkuFUeQ" name="done" visibility="private" method="_9autY26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pNm6cEeSZe_WBkuFUeQ">
                  <body>An unused method to be called when the game is finished (Game Over or&#xD;
	 * Victory)</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WcDQW6cEeSZe_WBkuFUeQ" name="handleMouseActions" visibility="private" method="_9autZG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_9a2pN26cEeSZe_WBkuFUeQ">
                  <body>This method is responsible to react to user request based on mouse clicks&#xD;
	 * such as toggling between Tower and Scenary(path)</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_9WcDQm6cEeSZe_WBkuFUeQ" name="GetTower" isStatic="true" method="_9autZW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9WcDQ26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9WcDRG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_9ZKAEG6cEeSZe_WBkuFUeQ" type="_9WSSQG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_9ZpvUG6cEeSZe_WBkuFUeQ" name="update" method="_9auGU26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_9ZqWYG6cEeSZe_WBkuFUeQ" name="arg0" type="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_9ZqWYW6cEeSZe_WBkuFUeQ" name="arg1" type="_9Zk20G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bBBQG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bBBQW6cEeSZe_WBkuFUeQ _9aSBcG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bBBQW6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bBBQG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bBBQ26cEeSZe_WBkuFUeQ" name="" memberEnd="_9bBBRG6cEeSZe_WBkuFUeQ _9aSohW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bBBRG6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bBBQ26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bBoUG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bBoUW6cEeSZe_WBkuFUeQ _9aTPkG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bBoUW6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bBoUG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bBoU26cEeSZe_WBkuFUeQ" name="" memberEnd="_9bBoVG6cEeSZe_WBkuFUeQ _9aTPkm6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bBoVG6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bBoU26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bCPYW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bCPYm6cEeSZe_WBkuFUeQ _9aTPlG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bCPYm6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bCPYW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bC2cW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bC2cm6cEeSZe_WBkuFUeQ _9aT2pW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bC2cm6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bC2cW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bDdgW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bDdgm6cEeSZe_WBkuFUeQ _9aUdsW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bDdgm6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bDdgW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bEEkG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bEEkW6cEeSZe_WBkuFUeQ _9aYIEG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bEEkW6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bEEkG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bEEk26cEeSZe_WBkuFUeQ" name="" memberEnd="_9bEElG6cEeSZe_WBkuFUeQ _9aYIEm6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bEElG6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bEEk26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bEroW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bErom6cEeSZe_WBkuFUeQ _9aYIFG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bErom6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bEroW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bFSsW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bFSsm6cEeSZe_WBkuFUeQ _9aYvIW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bFSsm6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bFSsW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bFStG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bFStW6cEeSZe_WBkuFUeQ _9aYvI26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bFStW6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bFStG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bF5wW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bF5wm6cEeSZe_WBkuFUeQ _9aZWMW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bF5wm6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bF5wW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bF5xG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bF5xW6cEeSZe_WBkuFUeQ _9aZWM26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bF5xW6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bF5xG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bGg0W6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bGg0m6cEeSZe_WBkuFUeQ _9aZ9QW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bGg0m6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bGg0W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bGg1G6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bGg1W6cEeSZe_WBkuFUeQ _9aZ9Q26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bGg1W6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bGg1G6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bHH4W6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bHH4m6cEeSZe_WBkuFUeQ _9aakUG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bHH4m6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bHH4W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bHu8G6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bHu8W6cEeSZe_WBkuFUeQ _9aakU26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bHu8W6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bHu8G6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bHu826cEeSZe_WBkuFUeQ" name="" memberEnd="_9bHu9G6cEeSZe_WBkuFUeQ _9abLYG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bHu9G6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bHu826cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bIWAW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bIWAm6cEeSZe_WBkuFUeQ _9abLY26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bIWAm6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bIWAW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bIWBG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bIWBW6cEeSZe_WBkuFUeQ _9abycG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bIWBW6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bIWBG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bI9EW6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bI9Em6cEeSZe_WBkuFUeQ _9abyc26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bI9Em6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bI9EW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bI9FG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bJkIG6cEeSZe_WBkuFUeQ _9acZgG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bJkIG6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bI9FG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bJkIm6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bJkI26cEeSZe_WBkuFUeQ _9acZg26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bJkI26cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bJkIm6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bKLMG6cEeSZe_WBkuFUeQ" name="" memberEnd="_9bKLMW6cEeSZe_WBkuFUeQ _9adAkG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bKLMW6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bKLMG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_9bKLM26cEeSZe_WBkuFUeQ" name="" memberEnd="_9bKLNG6cEeSZe_WBkuFUeQ _9adAk26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_9bKLNG6cEeSZe_WBkuFUeQ" name="" type="_9WWjsG6cEeSZe_WBkuFUeQ" association="_9bKLM26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9U4kE26cEeSZe_WBkuFUeQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_9U4kFG6cEeSZe_WBkuFUeQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_9YyzsG6cEeSZe_WBkuFUeQ" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9Y3FIW6cEeSZe_WBkuFUeQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_9Y5hYG6cEeSZe_WBkuFUeQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZAPEG6cEeSZe_WBkuFUeQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_9ZA2IW6cEeSZe_WBkuFUeQ" name="Observer"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_9ZA2I26cEeSZe_WBkuFUeQ" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_9ZG8w26cEeSZe_WBkuFUeQ" name="Iterator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_9U6ZQG6cEeSZe_WBkuFUeQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_9U7AUG6cEeSZe_WBkuFUeQ" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_9Y1P8G6cEeSZe_WBkuFUeQ" name="KeyAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_9Y1P8m6cEeSZe_WBkuFUeQ" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_9ZFHkm6cEeSZe_WBkuFUeQ" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_9ZFuoG6cEeSZe_WBkuFUeQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_9ZFuom6cEeSZe_WBkuFUeQ" name="MouseAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_9ZFupG6cEeSZe_WBkuFUeQ" name="MouseEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_9VExUG6cEeSZe_WBkuFUeQ" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_9Y9y0G6cEeSZe_WBkuFUeQ" name="BufferStrategy"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_9Y2eEG6cEeSZe_WBkuFUeQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9Y2eEm6cEeSZe_WBkuFUeQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZD5cG6cEeSZe_WBkuFUeQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZEggG6cEeSZe_WBkuFUeQ" name="Canvas"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZEggm6cEeSZe_WBkuFUeQ" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZFHkG6cEeSZe_WBkuFUeQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZUYIG6cEeSZe_WBkuFUeQ" name="Image"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_9U-qsG6cEeSZe_WBkuFUeQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZGVsW6cEeSZe_WBkuFUeQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZGVs26cEeSZe_WBkuFUeQ" name="FileReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZG8wW6cEeSZe_WBkuFUeQ" name="IOException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_9VQ-kG6cEeSZe_WBkuFUeQ" name="lang">
        <packagedElement xmi:type="uml:Package" xmi:id="_9VQ-kW6cEeSZe_WBkuFUeQ" name="Math"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZhMcG6cEeSZe_WBkuFUeQ" name="NumberFormatException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9Zk20G6cEeSZe_WBkuFUeQ" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9Zq9cm6cEeSZe_WBkuFUeQ" name="Thread"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9VExUW6cEeSZe_WBkuFUeQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_9VExUm6cEeSZe_WBkuFUeQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_9VJCwG6cEeSZe_WBkuFUeQ" name="filechooser">
          <packagedElement xmi:type="uml:Class" xmi:id="_9ZHj0W6cEeSZe_WBkuFUeQ" name="FileNameExtensionFilter"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_9Y-Z4G6cEeSZe_WBkuFUeQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9Y-Z4m6cEeSZe_WBkuFUeQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZQtwG6cEeSZe_WBkuFUeQ" name="JOptionPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ZnTEG6cEeSZe_WBkuFUeQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9Zn6IG6cEeSZe_WBkuFUeQ" name="JLabel"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_9JqLgG6cEeSZe_WBkuFUeQ">
      <eAnnotations xmi:id="_9JqLgW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_9JqLgm6cEeSZe_WBkuFUeQ" base_Package="_8919EG6cEeSZe_WBkuFUeQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9Vu4oG6cEeSZe_WBkuFUeQ" base_Element="_9VuRkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9YyzsW6cEeSZe_WBkuFUeQ" base_Element="_9YyzsG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y1P8W6cEeSZe_WBkuFUeQ" base_Element="_9Y1P8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y1P826cEeSZe_WBkuFUeQ" base_Element="_9Y1P8m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y2eEW6cEeSZe_WBkuFUeQ" base_Element="_9Y2eEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y3FIG6cEeSZe_WBkuFUeQ" base_Element="_9Y2eEm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y3FIm6cEeSZe_WBkuFUeQ" base_Element="_9Y3FIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y6IcG6cEeSZe_WBkuFUeQ" base_Element="_9Y5hYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y9y0W6cEeSZe_WBkuFUeQ" base_Element="_9Y9y0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y-Z4W6cEeSZe_WBkuFUeQ" base_Element="_9Y-Z4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Y-Z426cEeSZe_WBkuFUeQ" base_Element="_9Y-Z4m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZA2IG6cEeSZe_WBkuFUeQ" base_Element="_9ZAPEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZA2Im6cEeSZe_WBkuFUeQ" base_Element="_9ZA2IW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZBdMG6cEeSZe_WBkuFUeQ" base_Element="_9ZA2I26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZD5cW6cEeSZe_WBkuFUeQ" base_Element="_9ZD5cG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZEggW6cEeSZe_WBkuFUeQ" base_Element="_9ZEggG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZEgg26cEeSZe_WBkuFUeQ" base_Element="_9ZEggm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZFHkW6cEeSZe_WBkuFUeQ" base_Element="_9ZFHkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZFHk26cEeSZe_WBkuFUeQ" base_Element="_9ZFHkm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZFuoW6cEeSZe_WBkuFUeQ" base_Element="_9ZFuoG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZFuo26cEeSZe_WBkuFUeQ" base_Element="_9ZFuom6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZGVsG6cEeSZe_WBkuFUeQ" base_Element="_9ZFupG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZGVsm6cEeSZe_WBkuFUeQ" base_Element="_9ZGVsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZG8wG6cEeSZe_WBkuFUeQ" base_Element="_9ZGVs26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZG8wm6cEeSZe_WBkuFUeQ" base_Element="_9ZG8wW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZHj0G6cEeSZe_WBkuFUeQ" base_Element="_9ZG8w26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZIK4G6cEeSZe_WBkuFUeQ" base_Element="_9ZHj0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZRU0G6cEeSZe_WBkuFUeQ" base_Element="_9ZQtwG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZU_MG6cEeSZe_WBkuFUeQ" base_Element="_9ZUYIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9ZhzgG6cEeSZe_WBkuFUeQ" base_Element="_9ZhMcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Zk20W6cEeSZe_WBkuFUeQ" base_Element="_9Zk20G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9Zld4G6cEeSZe_WBkuFUeQ" base_Element="_9Zk20m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_9Zld4W6cEeSZe_WBkuFUeQ" base_Element="_9Zk20m6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_9Zld4m6cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_9ZnTEW6cEeSZe_WBkuFUeQ" base_Element="_9ZnTEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9Zn6IW6cEeSZe_WBkuFUeQ" base_Element="_9Zn6IG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ZqWYm6cEeSZe_WBkuFUeQ" base_Element="_9ZpvUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_9Zq9cG6cEeSZe_WBkuFUeQ" base_Element="_9ZpvUG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_9Zq9cW6cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_9Zq9c26cEeSZe_WBkuFUeQ" base_Element="_9Zq9cm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ZvO426cEeSZe_WBkuFUeQ" base_Element="_9ZvO4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_9ZvO5G6cEeSZe_WBkuFUeQ" base_Element="_9ZvO4G6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_9ZvO5W6cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aEmEG6cEeSZe_WBkuFUeQ" base_Element="_9aD_AG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aFNIG6cEeSZe_WBkuFUeQ" base_Element="_9aEmEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aF0MW6cEeSZe_WBkuFUeQ" base_Element="_9aF0MG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aF0M26cEeSZe_WBkuFUeQ" base_Element="_9aF0Mm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aGbQm6cEeSZe_WBkuFUeQ" base_Element="_9aGbQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aHCUG6cEeSZe_WBkuFUeQ" base_Element="_9aGbQ26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Array xmi:id="_9aHCU26cEeSZe_WBkuFUeQ" dimensions="2" base_Element="_9aHCUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aHCVG6cEeSZe_WBkuFUeQ" base_Element="_9aHCUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Array xmi:id="_9aHpYm6cEeSZe_WBkuFUeQ" dimensions="2" base_Element="_9aHpYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aHpY26cEeSZe_WBkuFUeQ" base_Element="_9aHpYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aIQcG6cEeSZe_WBkuFUeQ" base_Element="_9aHpZG6cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_9aIQcm6cEeSZe_WBkuFUeQ" name="getPath" isStatic="true" method="_9apN1m6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_9aIQdW6cEeSZe_WBkuFUeQ" type="_9WOA0G6cEeSZe_WBkuFUeQ" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9aI3gG6cEeSZe_WBkuFUeQ" value="*"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_9aIQc26cEeSZe_WBkuFUeQ" name="setPath" isStatic="true" method="_9apN2W6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_9aIQdG6cEeSZe_WBkuFUeQ" name="path" type="_9Y5hYG6cEeSZe_WBkuFUeQ"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_9aI3gW6cEeSZe_WBkuFUeQ" genericsValue="Movement" base_Element="_9aIQdG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aJekG6cEeSZe_WBkuFUeQ" base_Element="_9aI3gm6cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_9aJekm6cEeSZe_WBkuFUeQ" name="getHeight" method="_9ap04G6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_9aKFoG6cEeSZe_WBkuFUeQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_9aJek26cEeSZe_WBkuFUeQ" name="setHeight" method="_9ap04m6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_9aJelG6cEeSZe_WBkuFUeQ" name="newHeight">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_9aJekW6cEeSZe_WBkuFUeQ" base_Property="_9aI3gm6cEeSZe_WBkuFUeQ" siblings="_9azl626cEeSZe_WBkuFUeQ _9a0M8m6cEeSZe_WBkuFUeQ _9a00AG6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aKssW6cEeSZe_WBkuFUeQ" base_Element="_9aKssG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aLTwG6cEeSZe_WBkuFUeQ" base_Element="_9aKssm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aLTwm6cEeSZe_WBkuFUeQ" base_Element="_9aLTwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aL60m6cEeSZe_WBkuFUeQ" base_Element="_9aL60G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aMh4G6cEeSZe_WBkuFUeQ" base_Element="_9aL6026cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aNI8G6cEeSZe_WBkuFUeQ" base_Element="_9aMh4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aNI8m6cEeSZe_WBkuFUeQ" base_Element="_9aNI8W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aNwAG6cEeSZe_WBkuFUeQ" base_Element="_9aNI826cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aNwAm6cEeSZe_WBkuFUeQ" base_Element="_9aNwAW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aOXEW6cEeSZe_WBkuFUeQ" base_Element="_9aOXEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aOXE26cEeSZe_WBkuFUeQ" base_Element="_9aOXEm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aO-IW6cEeSZe_WBkuFUeQ" base_Element="_9aO-IG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aO-I26cEeSZe_WBkuFUeQ" base_Element="_9aO-Im6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aPlMW6cEeSZe_WBkuFUeQ" base_Element="_9aO-JG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aQMQG6cEeSZe_WBkuFUeQ" base_Element="_9aPlMm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aQMQm6cEeSZe_WBkuFUeQ" base_Element="_9aQMQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aQzUW6cEeSZe_WBkuFUeQ" base_Element="_9aQzUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aRaYW6cEeSZe_WBkuFUeQ" base_Element="_9aQzUm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aRaY26cEeSZe_WBkuFUeQ" base_Element="_9aRaYm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aSBc26cEeSZe_WBkuFUeQ" base_Element="_9aSBcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aSohG6cEeSZe_WBkuFUeQ" base_Element="_9aSogG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aSohm6cEeSZe_WBkuFUeQ" base_Element="_9aSohW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aTPkW6cEeSZe_WBkuFUeQ" base_Element="_9aTPkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aTPk26cEeSZe_WBkuFUeQ" base_Element="_9aTPkm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aT2oW6cEeSZe_WBkuFUeQ" base_Element="_9aTPlG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aT2pG6cEeSZe_WBkuFUeQ" base_Element="_9aT2om6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aUdsG6cEeSZe_WBkuFUeQ" base_Element="_9aT2pW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aUdsm6cEeSZe_WBkuFUeQ" base_Element="_9aUdsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aVEwG6cEeSZe_WBkuFUeQ" base_Element="_9aUds26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aVEw26cEeSZe_WBkuFUeQ" base_Element="_9aVEwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aVr0G6cEeSZe_WBkuFUeQ" base_Element="_9aVExG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aVr026cEeSZe_WBkuFUeQ" base_Element="_9aVr0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aWS4W6cEeSZe_WBkuFUeQ" base_Element="_9aVr1G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aWS5G6cEeSZe_WBkuFUeQ" base_Element="_9aWS4m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aW58G6cEeSZe_WBkuFUeQ" base_Element="_9aWS5W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aW5826cEeSZe_WBkuFUeQ" base_Element="_9aW58W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_9aXhAW6cEeSZe_WBkuFUeQ" base_Property="_9aW59G6cEeSZe_WBkuFUeQ" siblings="_9a2CIG6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aXhAm6cEeSZe_WBkuFUeQ" base_Element="_9aW59G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aXhBW6cEeSZe_WBkuFUeQ" base_Element="_9aXhA26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aYIEW6cEeSZe_WBkuFUeQ" base_Element="_9aYIEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aYIE26cEeSZe_WBkuFUeQ" base_Element="_9aYIEm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aYvIG6cEeSZe_WBkuFUeQ" base_Element="_9aYIFG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aYvIm6cEeSZe_WBkuFUeQ" base_Element="_9aYvIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aZWMG6cEeSZe_WBkuFUeQ" base_Element="_9aYvI26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aZWMm6cEeSZe_WBkuFUeQ" base_Element="_9aZWMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aZ9QG6cEeSZe_WBkuFUeQ" base_Element="_9aZWM26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aZ9Qm6cEeSZe_WBkuFUeQ" base_Element="_9aZ9QW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aZ9RW6cEeSZe_WBkuFUeQ" base_Element="_9aZ9Q26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aakUm6cEeSZe_WBkuFUeQ" base_Element="_9aakUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aakVW6cEeSZe_WBkuFUeQ" base_Element="_9aakU26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9abLYm6cEeSZe_WBkuFUeQ" base_Element="_9abLYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9abLZW6cEeSZe_WBkuFUeQ" base_Element="_9abLY26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9abycm6cEeSZe_WBkuFUeQ" base_Element="_9abycG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9abydW6cEeSZe_WBkuFUeQ" base_Element="_9abyc26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9acZgm6cEeSZe_WBkuFUeQ" base_Element="_9acZgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9acZhW6cEeSZe_WBkuFUeQ" base_Element="_9acZg26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9adAkm6cEeSZe_WBkuFUeQ" base_Element="_9adAkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9adnoG6cEeSZe_WBkuFUeQ" base_Element="_9adAk26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aeOsG6cEeSZe_WBkuFUeQ" base_Element="_9adnoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aeOsm6cEeSZe_WBkuFUeQ" base_Element="_9aeOsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aeOtW6cEeSZe_WBkuFUeQ" base_Element="_9aeOs26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ae1wW6cEeSZe_WBkuFUeQ" base_Element="_9ae1wG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ae1xG6cEeSZe_WBkuFUeQ" base_Element="_9ae1wm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9afc0m6cEeSZe_WBkuFUeQ" base_Element="_9afc0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9afc1W6cEeSZe_WBkuFUeQ" base_Element="_9afc026cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9agD4W6cEeSZe_WBkuFUeQ" base_Element="_9agD4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9agD426cEeSZe_WBkuFUeQ" base_Element="_9agD4m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9agq8W6cEeSZe_WBkuFUeQ" base_Element="_9agq8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ahSAG6cEeSZe_WBkuFUeQ" base_Element="_9agq8m6cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_9ahSAW6cEeSZe_WBkuFUeQ" name="getY" method="_9awilG6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_9ahSAm6cEeSZe_WBkuFUeQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ah5EG6cEeSZe_WBkuFUeQ" base_Element="_9ahSA26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ah5Em6cEeSZe_WBkuFUeQ" base_Element="_9ah5EW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aigIG6cEeSZe_WBkuFUeQ" base_Element="_9ah5E26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aigI26cEeSZe_WBkuFUeQ" base_Element="_9aigIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ajHNG6cEeSZe_WBkuFUeQ" base_Element="_9ajHMm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ajuQm6cEeSZe_WBkuFUeQ" base_Element="_9ajuQG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ajuRW6cEeSZe_WBkuFUeQ" base_Element="_9ajuQ26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9akVUm6cEeSZe_WBkuFUeQ" base_Element="_9akVUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ak8YG6cEeSZe_WBkuFUeQ" base_Element="_9akVVG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ak8Y26cEeSZe_WBkuFUeQ" base_Element="_9ak8YW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aljcG6cEeSZe_WBkuFUeQ" base_Element="_9ak8ZG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9aljcm6cEeSZe_WBkuFUeQ" base_Element="_9aljcW6cEeSZe_WBkuFUeQ"/>
  <uml:OpaqueBehavior xmi:id="_9apN1m6cEeSZe_WBkuFUeQ" name="getPath" specification="_9aIQcm6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_9apN126cEeSZe_WBkuFUeQ" type="_9WOA0G6cEeSZe_WBkuFUeQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9apN2G6cEeSZe_WBkuFUeQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return Path;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_9apN2W6cEeSZe_WBkuFUeQ" name="setPath" specification="_9aIQc26cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_9apN2m6cEeSZe_WBkuFUeQ" name="path" type="_9Y5hYG6cEeSZe_WBkuFUeQ"/>
    <language>java</language>
    <body>Path = path;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_9ap04G6cEeSZe_WBkuFUeQ" name="getHeight" specification="_9aJekm6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_9ap04W6cEeSZe_WBkuFUeQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.Height;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_9ap04m6cEeSZe_WBkuFUeQ" name="setHeight" specification="_9aJek26cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_9ap0426cEeSZe_WBkuFUeQ" name="newHeight">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>this.Height = newHeight;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_9awilG6cEeSZe_WBkuFUeQ" name="getY" specification="_9ahSAW6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_9awilW6cEeSZe_WBkuFUeQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return (int) this.y;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_9a0M8G6cEeSZe_WBkuFUeQ" base_Property="_9azl626cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9a0M8W6cEeSZe_WBkuFUeQ" base_Element="_9azl626cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_9a0M826cEeSZe_WBkuFUeQ" base_Property="_9a0M8m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9a0M9G6cEeSZe_WBkuFUeQ" base_Element="_9a0M8m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_9a00AW6cEeSZe_WBkuFUeQ" base_Property="_9a00AG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9a00Am6cEeSZe_WBkuFUeQ" base_Element="_9a00AG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_9a2CIW6cEeSZe_WBkuFUeQ" base_Property="_9a2CIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9a2CIm6cEeSZe_WBkuFUeQ" base_Element="_9a2CIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9a-lAm6cEeSZe_WBkuFUeQ" base_Element="_9a-lAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9a_MEG6cEeSZe_WBkuFUeQ" base_Element="_9a-lA26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9a_ME26cEeSZe_WBkuFUeQ" base_Element="_9a_MEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9a_zIm6cEeSZe_WBkuFUeQ" base_Element="_9a_zIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9a_zJW6cEeSZe_WBkuFUeQ" base_Element="_9a_zI26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bAaMm6cEeSZe_WBkuFUeQ" base_Element="_9bAaMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bAaNW6cEeSZe_WBkuFUeQ" base_Element="_9bAaM26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bBBQm6cEeSZe_WBkuFUeQ" base_Element="_9bBBQG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bBBRW6cEeSZe_WBkuFUeQ" base_Element="_9bBBQ26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bBoUm6cEeSZe_WBkuFUeQ" base_Element="_9bBoUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bCPYG6cEeSZe_WBkuFUeQ" base_Element="_9bBoU26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bC2cG6cEeSZe_WBkuFUeQ" base_Element="_9bCPYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bDdgG6cEeSZe_WBkuFUeQ" base_Element="_9bC2cW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bDdg26cEeSZe_WBkuFUeQ" base_Element="_9bDdgW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bEEkm6cEeSZe_WBkuFUeQ" base_Element="_9bEEkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bEroG6cEeSZe_WBkuFUeQ" base_Element="_9bEEk26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bFSsG6cEeSZe_WBkuFUeQ" base_Element="_9bEroW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bFSs26cEeSZe_WBkuFUeQ" base_Element="_9bFSsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bF5wG6cEeSZe_WBkuFUeQ" base_Element="_9bFStG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bF5w26cEeSZe_WBkuFUeQ" base_Element="_9bF5wW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bGg0G6cEeSZe_WBkuFUeQ" base_Element="_9bF5xG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bGg026cEeSZe_WBkuFUeQ" base_Element="_9bGg0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bHH4G6cEeSZe_WBkuFUeQ" base_Element="_9bGg1G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bHH426cEeSZe_WBkuFUeQ" base_Element="_9bHH4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bHu8m6cEeSZe_WBkuFUeQ" base_Element="_9bHu8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bIWAG6cEeSZe_WBkuFUeQ" base_Element="_9bHu826cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bIWA26cEeSZe_WBkuFUeQ" base_Element="_9bIWAW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bI9EG6cEeSZe_WBkuFUeQ" base_Element="_9bIWBG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bI9E26cEeSZe_WBkuFUeQ" base_Element="_9bI9EW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bJkIW6cEeSZe_WBkuFUeQ" base_Element="_9bI9FG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bJkJG6cEeSZe_WBkuFUeQ" base_Element="_9bJkIm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bKLMm6cEeSZe_WBkuFUeQ" base_Element="_9bKLMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bKyQG6cEeSZe_WBkuFUeQ" base_Element="_9bKLM26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bKyQ26cEeSZe_WBkuFUeQ" base_Element="_9bKyQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bLZUG6cEeSZe_WBkuFUeQ" base_Element="_9bKyRG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bLZU26cEeSZe_WBkuFUeQ" base_Element="_9bLZUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bMAYG6cEeSZe_WBkuFUeQ" base_Element="_9bLZVG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bMAY26cEeSZe_WBkuFUeQ" base_Element="_9bMAYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bMncG6cEeSZe_WBkuFUeQ" base_Element="_9bMAZG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bMnc26cEeSZe_WBkuFUeQ" base_Element="_9bMncW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_9bNOgG6cEeSZe_WBkuFUeQ" base_Element="_9bMndG6cEeSZe_WBkuFUeQ"/>
</xmi:XMI>
