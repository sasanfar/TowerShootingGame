<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_n05NYG6cEeSZe_WBkuFUeQ" name="ca_concordia_advanceprog_runner2">
    <eAnnotations xmi:id="_n822kG6cEeSZe_WBkuFUeQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_n822kW6cEeSZe_WBkuFUeQ" source="codegen">
        <details xmi:id="_n822km6cEeSZe_WBkuFUeQ" key="codegenDirectory" value="/ca.concordia.advanceprog.runner/src"/>
        <details xmi:id="_ofb_MG6cEeSZe_WBkuFUeQ" key="AssociatedSourceCode" value="/ca.concordia.advanceprog.runner/src/TestSuite.java;2504054059/1;/ca.concordia.advanceprog.runner/src/Tests/CritterUnitTests.java;1615053276/1;/ca.concordia.advanceprog.runner/src/Tests/EngineTest.java;791026238/1;/ca.concordia.advanceprog.runner/src/Tests/MapUnitTests.java;3184550476/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/util/Utility.java;2447615272/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/HighLevelCritter.java;436681763/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/LowLevelCritter.java;2317785255/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/MediumLevelCritter.java;3921663185/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/engine/ButtonHandler.java;555693658/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/engine/Engine.java;1609698736/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/TowerType.java;1070661429/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Cell.java;3616077033/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Map.java;571131677/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/MapGenerator.java;2624886656/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Movement.java;2405399563/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Status.java;1957996985/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Surface.java;2831536314/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Tower.java;3619510530/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/TowerStrategy.java;1581648924/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/runner/Runner.java;241997172/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/Critter.java;1257379271/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_oMDJIm6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_oMDJI26cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_oMDJJG6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_oMDwMG6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_oMDwMW6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_oMDwMm6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_oMDwM26cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_oMDwNG6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_oMDwNW6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_oMCiEG6cEeSZe_WBkuFUeQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_oMCiEW6cEeSZe_WBkuFUeQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_oMCiEm6cEeSZe_WBkuFUeQ" name="runner"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_oMDJIG6cEeSZe_WBkuFUeQ" name="runners">
          <packagedElement xmi:type="uml:Package" xmi:id="_oMDJIW6cEeSZe_WBkuFUeQ" name="Suite">
            <packagedElement xmi:type="uml:Interface" xmi:id="_oRXG8G6cEeSZe_WBkuFUeQ" name="SuiteClasses"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_oRWf4G6cEeSZe_WBkuFUeQ" name="Suite"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_oRXG8m6cEeSZe_WBkuFUeQ" name="Assert"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oRXuAW6cEeSZe_WBkuFUeQ" name="Before"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oRYVEW6cEeSZe_WBkuFUeQ" name="BeforeClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oRY8IW6cEeSZe_WBkuFUeQ" name="Test"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oMEXQG6cEeSZe_WBkuFUeQ" name="Tests">
      <packagedElement xmi:type="uml:Class" xmi:id="_oNU7gG6cEeSZe_WBkuFUeQ" name="CritterUnitTests">
        <ownedComment xmi:id="_oT0lFG6cEeSZe_WBkuFUeQ">
          <body>*</body>
        </ownedComment>
        <ownedAttribute xmi:id="_oS9CYG6cEeSZe_WBkuFUeQ" name="runner" visibility="package" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUD1oG6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oS9pcG6cEeSZe_WBkuFUeQ" name="mp" visibility="private" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUEcsG6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oS9pcm6cEeSZe_WBkuFUeQ" name="critter1" visibility="private" type="_oOfZIG6cEeSZe_WBkuFUeQ" association="_oUEcs26cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oS-QgG6cEeSZe_WBkuFUeQ" name="critter2" visibility="package" type="_oOfZIG6cEeSZe_WBkuFUeQ" association="_oUFDwW6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oS-Qgm6cEeSZe_WBkuFUeQ" name="a" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_oS-QhG6cEeSZe_WBkuFUeQ" name="tc1" visibility="private" type="_oOJa4G6cEeSZe_WBkuFUeQ" association="_oUFDxG6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oT1MIG6cEeSZe_WBkuFUeQ" name="tc2" visibility="private" type="_oOJa4G6cEeSZe_WBkuFUeQ" association="_oUZz4G6cEeSZe_WBkuFUeQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTktcG6cEeSZe_WBkuFUeQ" name="setUp" specification="_oNWwsG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>mp = new Map(15, 15);&#xD;
		critter1 = Critter.createCritter(mp, 0, 0, 1);&#xD;
		&#xD;
		//critter2 = Critter.createCritter(mp, 0, 0, 1);&#xD;
		tc1 = new Tower(1, 1, 1, 100, 200);&#xD;
		tc2 = new Tower(10, 10, 1, 100, 200);&#xD;
		runner.TOWERS.add(tc1);&#xD;
		runner.TOWERS.add(tc2);&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTktcW6cEeSZe_WBkuFUeQ" name="critterNotMoveBack" specification="_oNX-0G6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertFalse(critter1.proceedToMove(0, 0));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTlUgG6cEeSZe_WBkuFUeQ" name="checkCritterDontHaveMovementForStart" specification="_oNYl4W6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertFalse(critter1.isDown() || critter1.isUp() || critter1.isLeft()&#xD;
				|| critter1.isRight());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTlUgW6cEeSZe_WBkuFUeQ" name="checkCritterWithinTowerRangeGetsShot" specification="_oNZM8G6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>critter1 = Critter.createCritter(mp, 0, 0, 1);&#xD;
		a = critter1.getExistingLife();&#xD;
		System.out.println(a);&#xD;
		mp.Data[0][1] = Map.TOWER;&#xD;
		assertNotEquals(a, 100);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTlUgm6cEeSZe_WBkuFUeQ" name="checkTower" specification="_oNZM9G6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(Map.TOWER, mp.Data[1][1]);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTlUg26cEeSZe_WBkuFUeQ" name="critterIsInRange" specification="_oNZ0A26cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(true, tc1.checkIfIsinTheAreaOfTower(mp,&#xD;
				((int) critter1.getX()) * 20, ((int) critter1.getY()) * 20));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTlUhG6cEeSZe_WBkuFUeQ" name="critterIsNotInRange" specification="_oNabEm6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(false, tc2.checkIfIsinTheAreaOfTower(mp,&#xD;
				((int) critter1.getX()) * 20, ((int) critter1.getY()) * 20));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTlUhW6cEeSZe_WBkuFUeQ" name="improveTowerLevelCheck" specification="_oNbCIG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>tc1.improveLevel();&#xD;
		assertEquals(tc1.CurrentAmount, 150);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_oNVikG6cEeSZe_WBkuFUeQ" name="setUpBeforeClass" isStatic="true" raisedException="_oSfvYG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNWwsG6cEeSZe_WBkuFUeQ" name="setUp" method="_oTktcG6cEeSZe_WBkuFUeQ" raisedException="_oSfvYG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNX-0G6cEeSZe_WBkuFUeQ" name="critterNotMoveBack" method="_oTktcW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNYl4W6cEeSZe_WBkuFUeQ" name="checkCritterDontHaveMovementForStart" method="_oTlUgG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNZM8G6cEeSZe_WBkuFUeQ" name="checkCritterWithinTowerRangeGetsShot" method="_oTlUgW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNZM9G6cEeSZe_WBkuFUeQ" name="checkTower" method="_oTlUgm6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNZ0A26cEeSZe_WBkuFUeQ" name="critterIsInRange" method="_oTlUg26cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNabEm6cEeSZe_WBkuFUeQ" name="critterIsNotInRange" method="_oTlUhG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNbCIG6cEeSZe_WBkuFUeQ" name="improveTowerLevelCheck" method="_oTlUhW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_oNdeYG6cEeSZe_WBkuFUeQ" name="EngineTest">
        <ownedAttribute xmi:id="_oS-3km6cEeSZe_WBkuFUeQ" name="engine" visibility="private" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUFq0W6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oS_eoW6cEeSZe_WBkuFUeQ" name="MG" visibility="package" type="_oN6xYG6cEeSZe_WBkuFUeQ" association="_oUFq1G6cEeSZe_WBkuFUeQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_oS_eom6cEeSZe_WBkuFUeQ" value="new MapGenerator(15, 15)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_oS_epG6cEeSZe_WBkuFUeQ" name="map" visibility="package" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUGR4W6cEeSZe_WBkuFUeQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_oS_epW6cEeSZe_WBkuFUeQ" value="new Map(15,15)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_oTAFsW6cEeSZe_WBkuFUeQ" name="tower" visibility="package" type="_oOJa4G6cEeSZe_WBkuFUeQ" association="_oUGR5G6cEeSZe_WBkuFUeQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTAFsm6cEeSZe_WBkuFUeQ" value="new Tower(3, 3, 1, 100, 200)"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTl7kG6cEeSZe_WBkuFUeQ" name="setUp" specification="_oNesgG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>map.setMapGenerator(MG);&#xD;
		engine = Engine.initialEngine(map,true);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTl7kW6cEeSZe_WBkuFUeQ" name="initialMoney" specification="_oNfTkG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(Engine.MONEY, 1000);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTl7km6cEeSZe_WBkuFUeQ" name="checkMapAssingment" specification="_oNf6oG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertArrayEquals(Engine.MAP.Data, map.Data);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTl7k26cEeSZe_WBkuFUeQ" name="checkInitWave" specification="_oNf6pG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(engine.gameLevelandNumberofCritters,1);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_oNeFcG6cEeSZe_WBkuFUeQ" name="setUpBeforeClass" isStatic="true" raisedException="_oSfvYG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNesgG6cEeSZe_WBkuFUeQ" name="setUp" method="_oTl7kG6cEeSZe_WBkuFUeQ" raisedException="_oSfvYG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNfTkG6cEeSZe_WBkuFUeQ" name="initialMoney" method="_oTl7kW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNf6oG6cEeSZe_WBkuFUeQ" name="checkMapAssingment" method="_oTl7km6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNf6pG6cEeSZe_WBkuFUeQ" name="checkInitWave" method="_oTl7k26cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNghs26cEeSZe_WBkuFUeQ" name="moneyDeposit"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_oNi98G6cEeSZe_WBkuFUeQ" name="MapUnitTests">
        <ownedComment xmi:id="_oT1zMG6cEeSZe_WBkuFUeQ">
          <body>*</body>
        </ownedComment>
        <ownedAttribute xmi:id="_oTAswG6cEeSZe_WBkuFUeQ" name="m1" visibility="package" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUG48m6cEeSZe_WBkuFUeQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTAswW6cEeSZe_WBkuFUeQ" value="new Map(15, 15)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_oTAsw26cEeSZe_WBkuFUeQ" name="mg1" visibility="package" type="_oN6xYG6cEeSZe_WBkuFUeQ" association="_oUHgAW6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oTBT0W6cEeSZe_WBkuFUeQ" name="m2" visibility="package" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUHgBG6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oT1zMW6cEeSZe_WBkuFUeQ" name="mg2" visibility="package" type="_oN6xYG6cEeSZe_WBkuFUeQ" association="_oUZz426cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_oT1zNG6cEeSZe_WBkuFUeQ" name="m3" visibility="package" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUaa8W6cEeSZe_WBkuFUeQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTl7lG6cEeSZe_WBkuFUeQ" name="setUp" specification="_oNkMEW6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>mg1 = m1.MapGenerator;&#xD;
		m2 = new Map(15, 15, m1.MapGenerator);&#xD;
		mg1.SaveMap(&quot;test.mp&quot;);&#xD;
		mg2 = new MapGenerator(&quot;test.mp&quot;, 15, 15);&#xD;
		m3 = new Map(15, 15, mg2);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTmioG6cEeSZe_WBkuFUeQ" name="MapConstructor" specification="_oNkzIG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertArrayEquals(m1.Data, m2.Data);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTmioW6cEeSZe_WBkuFUeQ" name="EntryPoint" specification="_oNlaMm6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(0, m1.Data[0][0]);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTmiom6cEeSZe_WBkuFUeQ" name="DataPathCorrelation" specification="_oNlaNm6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>if (m1.MapGenerator.getPath().get(0) == Movement.Down)&#xD;
			assertEquals(0, m1.Data[1][0]);&#xD;
		else&#xD;
			// Path.get(0) == Movement.Right&#xD;
			assertEquals(0, m1.Data[0][1]);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTmio26cEeSZe_WBkuFUeQ" name="PathCopyCheck" specification="_oNmBQ26cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>for (int i = 0; i &lt;= 10; i++)&#xD;
			assertEquals(m1.MapGenerator.getPath().get(i), m2.MapGenerator&#xD;
					.getPath().get(i));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTmipG6cEeSZe_WBkuFUeQ" name="SaveLoadCheck" specification="_oNmoUm6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertArrayEquals(m1.Data, m3.Data);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_oNjlAG6cEeSZe_WBkuFUeQ" name="setUpBeforeClass" isStatic="true" raisedException="_oSfvYG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNkMEW6cEeSZe_WBkuFUeQ" name="setUp" method="_oTl7lG6cEeSZe_WBkuFUeQ" raisedException="_oSfvYG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNkzIG6cEeSZe_WBkuFUeQ" name="MapConstructor" method="_oTmioG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNlaMm6cEeSZe_WBkuFUeQ" name="EntryPoint" method="_oTmioW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNlaNm6cEeSZe_WBkuFUeQ" name="DataPathCorrelation" method="_oTmiom6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNmBQ26cEeSZe_WBkuFUeQ" name="PathCopyCheck" method="_oTmio26cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_oNmoUm6cEeSZe_WBkuFUeQ" name="SaveLoadCheck" method="_oTmipG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUD1oG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUD1oW6cEeSZe_WBkuFUeQ _oS9CYG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUD1oW6cEeSZe_WBkuFUeQ" name="" type="_oNU7gG6cEeSZe_WBkuFUeQ" association="_oUD1oG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUEcsG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUEcsW6cEeSZe_WBkuFUeQ _oS9pcG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUEcsW6cEeSZe_WBkuFUeQ" name="" type="_oNU7gG6cEeSZe_WBkuFUeQ" association="_oUEcsG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUEcs26cEeSZe_WBkuFUeQ" name="" memberEnd="_oUEctG6cEeSZe_WBkuFUeQ _oS9pcm6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUEctG6cEeSZe_WBkuFUeQ" name="" type="_oNU7gG6cEeSZe_WBkuFUeQ" association="_oUEcs26cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUFDwW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUFDwm6cEeSZe_WBkuFUeQ _oS-QgG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUFDwm6cEeSZe_WBkuFUeQ" name="" type="_oNU7gG6cEeSZe_WBkuFUeQ" association="_oUFDwW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUFDxG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUFDxW6cEeSZe_WBkuFUeQ _oS-QhG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUFDxW6cEeSZe_WBkuFUeQ" name="" type="_oNU7gG6cEeSZe_WBkuFUeQ" association="_oUFDxG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUFq0W6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUFq0m6cEeSZe_WBkuFUeQ _oS-3km6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUFq0m6cEeSZe_WBkuFUeQ" name="" type="_oNdeYG6cEeSZe_WBkuFUeQ" association="_oUFq0W6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUFq1G6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUFq1W6cEeSZe_WBkuFUeQ _oS_eoW6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUFq1W6cEeSZe_WBkuFUeQ" name="" type="_oNdeYG6cEeSZe_WBkuFUeQ" association="_oUFq1G6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUGR4W6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUGR4m6cEeSZe_WBkuFUeQ _oS_epG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUGR4m6cEeSZe_WBkuFUeQ" name="" type="_oNdeYG6cEeSZe_WBkuFUeQ" association="_oUGR4W6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUGR5G6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUG48G6cEeSZe_WBkuFUeQ _oTAFsW6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUG48G6cEeSZe_WBkuFUeQ" name="" type="_oNdeYG6cEeSZe_WBkuFUeQ" association="_oUGR5G6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUG48m6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUG4826cEeSZe_WBkuFUeQ _oTAswG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUG4826cEeSZe_WBkuFUeQ" name="" type="_oNi98G6cEeSZe_WBkuFUeQ" association="_oUG48m6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUHgAW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUHgAm6cEeSZe_WBkuFUeQ _oTAsw26cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUHgAm6cEeSZe_WBkuFUeQ" name="" type="_oNi98G6cEeSZe_WBkuFUeQ" association="_oUHgAW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUHgBG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUHgBW6cEeSZe_WBkuFUeQ _oTBT0W6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUHgBW6cEeSZe_WBkuFUeQ" name="" type="_oNi98G6cEeSZe_WBkuFUeQ" association="_oUHgBG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUZz4G6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUZz4W6cEeSZe_WBkuFUeQ _oT1MIG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUZz4W6cEeSZe_WBkuFUeQ" name="" type="_oNU7gG6cEeSZe_WBkuFUeQ" association="_oUZz4G6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUZz426cEeSZe_WBkuFUeQ" name="" memberEnd="_oUZz5G6cEeSZe_WBkuFUeQ _oT1zMW6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUZz5G6cEeSZe_WBkuFUeQ" name="" type="_oNi98G6cEeSZe_WBkuFUeQ" association="_oUZz426cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_oUaa8W6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUaa8m6cEeSZe_WBkuFUeQ _oT1zNG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_oUaa8m6cEeSZe_WBkuFUeQ" name="" type="_oNi98G6cEeSZe_WBkuFUeQ" association="_oUaa8W6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oMEXQW6cEeSZe_WBkuFUeQ" name="ca">
      <packagedElement xmi:type="uml:Package" xmi:id="_oME-UG6cEeSZe_WBkuFUeQ" name="concordia">
        <packagedElement xmi:type="uml:Package" xmi:id="_oME-UW6cEeSZe_WBkuFUeQ" name="advanceprog">
          <packagedElement xmi:type="uml:Package" xmi:id="_oME-Um6cEeSZe_WBkuFUeQ" name="elements">
            <packagedElement xmi:type="uml:Class" xmi:id="_oNodhG6cEeSZe_WBkuFUeQ" name="HighLevelCritter">
              <ownedComment xmi:id="_oT2aQm6cEeSZe_WBkuFUeQ">
                <body>Representation of Critters which is created in level 5&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oRdNkG6cEeSZe_WBkuFUeQ" general="_oOfZIG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnJtG6cEeSZe_WBkuFUeQ" name="HighLevelCritter" specification="_oRcmgW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnJtW6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTnJtm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnJt26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnJuG6cEeSZe_WBkuFUeQ" type="_oNodhG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(200);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oRcmgW6cEeSZe_WBkuFUeQ" name="HighLevelCritter" method="_oTnJtG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oRcmhW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oRcmhm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oRcmgm6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oRcmg26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRcmhG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRcmh26cEeSZe_WBkuFUeQ" type="_oNodhG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oNproG6cEeSZe_WBkuFUeQ" name="LowLevelCritter">
              <ownedComment xmi:id="_oT2aQ26cEeSZe_WBkuFUeQ">
                <body>Representation of Critters which is created in level 1&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oRd0om6cEeSZe_WBkuFUeQ" general="_oOfZIG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnJuW6cEeSZe_WBkuFUeQ" name="LowLevelCritter" specification="_oRdNkW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnJum6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTnJu26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnJvG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnJvW6cEeSZe_WBkuFUeQ" type="_oNproG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(100);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oRdNkW6cEeSZe_WBkuFUeQ" name="LowLevelCritter" method="_oTnJuW6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oRdNlW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oRd0oG6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oRdNkm6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oRdNk26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRdNlG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRd0oW6cEeSZe_WBkuFUeQ" type="_oNproG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oNq5wG6cEeSZe_WBkuFUeQ" name="MediumLevelCritter">
              <generalization xmi:id="_oRebs26cEeSZe_WBkuFUeQ" general="_oOfZIG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnJvm6cEeSZe_WBkuFUeQ" name="MediumLevelCritter" specification="_oRd0o26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnJv26cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTnJwG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnJwW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnJwm6cEeSZe_WBkuFUeQ" type="_oNq5wG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(150);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oRd0o26cEeSZe_WBkuFUeQ" name="MediumLevelCritter" method="_oTnJvm6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oRebsG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oRebsW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oRd0pG6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oRd0pW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRd0pm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRebsm6cEeSZe_WBkuFUeQ" type="_oNq5wG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oOfZIG6cEeSZe_WBkuFUeQ" name="Critter">
              <ownedComment xmi:id="_oT6rtG6cEeSZe_WBkuFUeQ">
                <body>Critter is the main moving element in the game that each critter has x and y&#xD;
which describes the current location or soon to be moved location&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oS4w8G6cEeSZe_WBkuFUeQ" general="_oRjUMW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTd_wG6cEeSZe_WBkuFUeQ" name="x" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTem0W6cEeSZe_WBkuFUeQ" name="y" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTfN4W6cEeSZe_WBkuFUeQ" name="map" visibility="private" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUZM0W6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTfN426cEeSZe_WBkuFUeQ" name="ang" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTf08W6cEeSZe_WBkuFUeQ" name="lastCell" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTf08m6cEeSZe_WBkuFUeQ" value="&quot;0,0&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTf09G6cEeSZe_WBkuFUeQ" name="currentPathIndex" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTf09W6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTgcAW6cEeSZe_WBkuFUeQ" name="existingLife" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTgcAm6cEeSZe_WBkuFUeQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTgcA26cEeSZe_WBkuFUeQ" name="toReduceTheMoney">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTgcBG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTgcBW6cEeSZe_WBkuFUeQ" name="flaggedToStopReduce" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTgcBm6cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oThDEW6cEeSZe_WBkuFUeQ" name="calcuatedX" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oThDEm6cEeSZe_WBkuFUeQ" value="0.0f"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oThDFG6cEeSZe_WBkuFUeQ" name="calcuatedy" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oThqIG6cEeSZe_WBkuFUeQ" value="0.0f"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oThqIm6cEeSZe_WBkuFUeQ" name="left">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oThqI26cEeSZe_WBkuFUeQ" name="right" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTiRMW6cEeSZe_WBkuFUeQ" name="up">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTiRMm6cEeSZe_WBkuFUeQ" name="down" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTiRNG6cEeSZe_WBkuFUeQ" name="stop" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTi4QG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTi4Qm6cEeSZe_WBkuFUeQ" name="centerX">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTi4RG6cEeSZe_WBkuFUeQ" name="centerY">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTxhwm6cEeSZe_WBkuFUeQ" name="Critter" specification="_oSXMgG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTxhw26cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTxhxG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTxhxW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTxhxm6cEeSZe_WBkuFUeQ" type="_oOfZIG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.map = map;&#xD;
		this.x = x;&#xD;
		this.y = y;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyI0G6cEeSZe_WBkuFUeQ" name="createCritter" specification="_oSXzkm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTyI0W6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTyI0m6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyI026cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyI1G6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyI1W6cEeSZe_WBkuFUeQ" type="_oOfZIG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>if (level == 1)&#xD;
			return new LowLevelCritter(map, x, y);&#xD;
&#xD;
		if (level > 1 &amp;&amp; level &lt;= 4)&#xD;
			return new MediumLevelCritter(map, x, y);&#xD;
&#xD;
		if (level >= 5)&#xD;
			return new HighLevelCritter(map, x, y);&#xD;
&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyI1m6cEeSZe_WBkuFUeQ" name="move" specification="_oOhOUG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTyI126cEeSZe_WBkuFUeQ" name="dx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyI2G6cEeSZe_WBkuFUeQ" name="dy">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyI2W6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>float nx = x + dx;&#xD;
		float ny = y + dy;&#xD;
		x = nx;&#xD;
		y = ny;&#xD;
		ang = (float) (Math.atan2(dx, dy) - (Math.PI / 2));&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyI2m6cEeSZe_WBkuFUeQ" name="determineMovement" specification="_oOh1Y26cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>if (stop)&#xD;
			return;&#xD;
		String currentPosition = Map.tryMapXYtoCellNumber((int) calcuatedX,&#xD;
				(int) calcuatedy);&#xD;
&#xD;
		if (!lastCell.equals(currentPosition)) {&#xD;
			if (proceedToMove((int) calcuatedX, (int) calcuatedy)) {&#xD;
				currentPathIndex += 1;&#xD;
				lastCell = currentPosition;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		MapGenerator mapp = map.MapGenerator;&#xD;
&#xD;
		if (((int) y) + 0.5 == mapp.getEndPoint() + 0.5&#xD;
				&amp;&amp; ((int) x) == mapp.getWidth() - 1) {&#xD;
			Engine.setGameOver();&#xD;
			stop();&#xD;
			return;&#xD;
		}&#xD;
		if (currentPathIndex &lt; MapGenerator.getPath().size()) {&#xD;
			Movement movement = MapGenerator.getPath().get(currentPathIndex);&#xD;
			if (movement == Movement.Left) {&#xD;
				setRight(false);&#xD;
				setLeft(true);&#xD;
				setDown(false);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Right) {&#xD;
				setRight(true);&#xD;
				setLeft(false);&#xD;
				setDown(false);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Down) {&#xD;
				setRight(false);&#xD;
				setLeft(false);&#xD;
				setDown(true);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Up) {&#xD;
				setRight(false);&#xD;
				setLeft(false);&#xD;
				setDown(false);&#xD;
				setUp(true);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyI226cEeSZe_WBkuFUeQ" name="stop" specification="_oOiccG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>stop = true;&#xD;
		setUp(false);&#xD;
		setDown(false);&#xD;
		setLeft(false);&#xD;
		setRight(false);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyI3G6cEeSZe_WBkuFUeQ" name="moving" specification="_oSYaoG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTyI3W6cEeSZe_WBkuFUeQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyI3m6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>float dx = 0;&#xD;
		float dy = 0;&#xD;
&#xD;
		determineMovement();&#xD;
		if (isLeft()) {&#xD;
			dx -= 1;&#xD;
		}&#xD;
		if (isRight()) {&#xD;
			dx += 1;&#xD;
		}&#xD;
		if (isUp()) {&#xD;
			dy -= 1;&#xD;
		}&#xD;
		if (isDown()) {&#xD;
			dy += 1;&#xD;
		}&#xD;
&#xD;
		if ((dx != 0) || (dy != 0)) {&#xD;
			move(dx * delta * 0.003f, dy * delta * 0.003f);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyv4G6cEeSZe_WBkuFUeQ" name="paint" specification="_oS3i0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTyv4W6cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>if (!Engine.IS_CREATE_CRITTER)&#xD;
			return;&#xD;
		int xp = (int) (Map.TILE_SIZE * x);&#xD;
		int yp = (int) (Map.TILE_SIZE * y);&#xD;
		graphic.setColor(Color.green);&#xD;
		if (getExistingLife() &lt;= 0) {&#xD;
			this.existingLife = 0;&#xD;
			graphic.setColor(Color.red);&#xD;
			if (flaggedToStopReduce) {&#xD;
				flaggedToStopReduce = false;&#xD;
				toReduceTheMoney = true;&#xD;
			}&#xD;
&#xD;
			stop();&#xD;
		} else {&#xD;
			for (Tower tower : Runner.TOWERS) {&#xD;
&#xD;
				Tower currentTower = tower.checkIfIsinTheAreaOfTower(map, xp,&#xD;
						yp);&#xD;
				if (currentTower != null) {&#xD;
&#xD;
					setChanged();&#xD;
					notifyObservers(currentTower);&#xD;
				} else&#xD;
					tower.crittersInRange.remove(this);&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		calcuatedX = xp;&#xD;
		calcuatedy = yp;&#xD;
&#xD;
		graphic.rotate(ang, xp, yp);&#xD;
&#xD;
		graphic.drawString(Float.toString(getExistingLife()), (xp + 15),&#xD;
				(int) (yp + 5));&#xD;
		graphic.drawOval((int) (xp - 10), (int) (yp - 10), 20, 20);&#xD;
&#xD;
		graphic.rotate(-ang, xp, yp);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyv4m6cEeSZe_WBkuFUeQ" name="proceedToMove" specification="_oOiccW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTyv426cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyv5G6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyv5W6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (int i = 0; i &lt; 400; i = i + 20)&#xD;
			for (int j = 0; j &lt; 400; j = j + 20) {&#xD;
				if (x == (i + (i + 20)) / 2)&#xD;
					if (y == (j + (j + 20)) / 2)&#xD;
						return true;&#xD;
			}&#xD;
		return false;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyv5m6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_oS4J4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTyv526cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTyv6G6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyv6W6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTyv6m6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyv626cEeSZe_WBkuFUeQ" name="isRight" specification="_oOjDgm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTyv7G6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return right;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTyv7W6cEeSZe_WBkuFUeQ" name="setRight" specification="_oOjqkG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTyv7m6cEeSZe_WBkuFUeQ" name="right">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.right = right;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTzW8G6cEeSZe_WBkuFUeQ" name="isDown" specification="_oOkRoG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTzW8W6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return down;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTzW8m6cEeSZe_WBkuFUeQ" name="setDown" specification="_oOkRom6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTzW826cEeSZe_WBkuFUeQ" name="down">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.down = down;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTzW9G6cEeSZe_WBkuFUeQ" name="setExistingLife" specification="_oOk4sG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTzW9W6cEeSZe_WBkuFUeQ" name="existingLife">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <language>java</language>
                <body>this.existingLife = existingLife;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTzW9m6cEeSZe_WBkuFUeQ" name="getX" specification="_oOk4sm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTzW926cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return (int) this.x;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oOhOUG6cEeSZe_WBkuFUeQ" name="move" method="_oTyI1m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6rtm6cEeSZe_WBkuFUeQ">
                  <body>Will move the critter toward the path based on dx and dy&#xD;
	 * &#xD;
	 * @param dx&#xD;
	 * @param dy&#xD;
	 * @return If the movement is performed correctly</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOh1YG6cEeSZe_WBkuFUeQ" name="dx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOh1YW6cEeSZe_WBkuFUeQ" name="dy">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOh1Ym6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOh1Y26cEeSZe_WBkuFUeQ" name="determineMovement" method="_oTyI2m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6rt26cEeSZe_WBkuFUeQ">
                  <body>In this method the left,right,up and down would be updated based on the&#xD;
	 * next valid movement</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOiccG6cEeSZe_WBkuFUeQ" name="stop" visibility="private" method="_oTyI226cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7SwG6cEeSZe_WBkuFUeQ">
                  <body>Will stop any movement of current critter</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOiccW6cEeSZe_WBkuFUeQ" name="proceedToMove" isStatic="true" method="_oTyv4m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7Sw26cEeSZe_WBkuFUeQ">
                  <body>This method is to make sure the next movement would be in the area of the&#xD;
	 * our map with the preferred dimension&#xD;
	 * &#xD;
	 * @param x&#xD;
	 * @param y&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOiccm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOjDgG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOjDgW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOjDgm6cEeSZe_WBkuFUeQ" name="isRight" method="_oTyv626cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7SxW6cEeSZe_WBkuFUeQ">
                  <body>checks for the right&#xD;
	 * &#xD;
	 * @return right variable</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOjDg26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOjqkG6cEeSZe_WBkuFUeQ" name="setRight" method="_oTyv7W6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7Sxm6cEeSZe_WBkuFUeQ">
                  <body>setter for the right variable&#xD;
	 * &#xD;
	 * @param right</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOjqkW6cEeSZe_WBkuFUeQ" name="right">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOkRoG6cEeSZe_WBkuFUeQ" name="isDown" method="_oTzW8G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7Sx26cEeSZe_WBkuFUeQ">
                  <body>checks for the down&#xD;
	 * &#xD;
	 * @return down variable</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOkRoW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOkRom6cEeSZe_WBkuFUeQ" name="setDown" method="_oTzW8m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7SyG6cEeSZe_WBkuFUeQ">
                  <body>setter for the down&#xD;
	 * &#xD;
	 * @param down</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOkRo26cEeSZe_WBkuFUeQ" name="down">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOk4sG6cEeSZe_WBkuFUeQ" name="setExistingLife" method="_oTzW9G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7SyW6cEeSZe_WBkuFUeQ">
                  <body>setter for the existing life and is called by engine when the critter in&#xD;
	 * the area of shooting of towers&#xD;
	 * &#xD;
	 * @param existingLife</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOk4sW6cEeSZe_WBkuFUeQ" name="existingLife">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOk4sm6cEeSZe_WBkuFUeQ" name="getX" method="_oTzW9m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7Sym6cEeSZe_WBkuFUeQ">
                  <body>current position of critter in X-Axis&#xD;
	 * &#xD;
	 * @return x</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOk4s26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oSXMgG6cEeSZe_WBkuFUeQ" name="Critter" visibility="protected" method="_oTxhwm6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oSXMhG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSXzkG6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oT6rtW6cEeSZe_WBkuFUeQ">
                  <body>Create an instance of critter based on map x and y to locate the movement&#xD;
	 * &#xD;
	 * @param map&#xD;
	 * @param x&#xD;
	 * @param y</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSXMgW6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSXMgm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSXMg26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSXzkW6cEeSZe_WBkuFUeQ" type="_oOfZIG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSXzkm6cEeSZe_WBkuFUeQ" name="createCritter" isStatic="true" method="_oTyI0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oSXzk26cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSXzlG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSXzlW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSXzlm6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSXzl26cEeSZe_WBkuFUeQ" type="_oOfZIG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSYaoG6cEeSZe_WBkuFUeQ" name="moving" method="_oTyI3G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7SwW6cEeSZe_WBkuFUeQ">
                  <body>Physically move critter based on delta and those variable with set in&#xD;
	 * determineMovement method&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param map</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSYaoW6cEeSZe_WBkuFUeQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSYaom6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oS3i0G6cEeSZe_WBkuFUeQ" name="paint" method="_oTyv4G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7Swm6cEeSZe_WBkuFUeQ">
                  <body>After the movement has been taken place, the paint method is responsible&#xD;
	 * to show the new position of critter&#xD;
	 * &#xD;
	 * @param graphic</body>
                </ownedComment>
                <ownedParameter xmi:id="_oS3i0W6cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oS4J4G6cEeSZe_WBkuFUeQ" name="drawCircle" method="_oTyv5m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT7SxG6cEeSZe_WBkuFUeQ">
                  <body>This method is used in when we want to show a circle around a tower for&#xD;
	 * the range of shooting&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            is the handle for depicting objects on it</body>
                </ownedComment>
                <ownedParameter xmi:id="_oS4J4W6cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oS4J4m6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oS4J426cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oS4J5G6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUZM0W6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUZM0m6cEeSZe_WBkuFUeQ _oTfN4W6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUZM0m6cEeSZe_WBkuFUeQ" name="" type="_oOfZIG6cEeSZe_WBkuFUeQ" association="_oUZM0W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_oME-U26cEeSZe_WBkuFUeQ" name="runner">
            <packagedElement xmi:type="uml:Class" xmi:id="_oOQvo26cEeSZe_WBkuFUeQ" name="Runner">
              <ownedComment xmi:id="_oT5dlG6cEeSZe_WBkuFUeQ">
                <body>This is the entry class of the game which has main method that Java needs to&#xD;
execute the game. it consist of buttons that are responsible for controlling&#xD;
the game during execution. Although it gets the main panel instance from the&#xD;
surface and depict the menu on top of that.&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oS1GkG6cEeSZe_WBkuFUeQ" general="_oSJxIm6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTRygG6cEeSZe_WBkuFUeQ" name="TOWERS" isStatic="true" type="_oOJa4G6cEeSZe_WBkuFUeQ" isOrdered="true" association="_oUM_kW6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTRygW6cEeSZe_WBkuFUeQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTRygm6cEeSZe_WBkuFUeQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTRyhG6cEeSZe_WBkuFUeQ" name="paused" visibility="private" isStatic="true">
                <eAnnotations xmi:id="_oTRyhW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oTRyhm6cEeSZe_WBkuFUeQ" key="volatile"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTSZkG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTSZkm6cEeSZe_WBkuFUeQ" name="map" visibility="private" isStatic="true" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUNmoG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTSZlG6cEeSZe_WBkuFUeQ" name="engine" visibility="private" isStatic="true" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUNmo26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTTAoW6cEeSZe_WBkuFUeQ" name="startPauseButton" visibility="private" isStatic="true" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUONsW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTTAo26cEeSZe_WBkuFUeQ" name="lock" visibility="private" isStatic="true" type="_oSkA0G6cEeSZe_WBkuFUeQ" association="_oUONtG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTTApG6cEeSZe_WBkuFUeQ" value="new Object()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTTnsW6cEeSZe_WBkuFUeQ" name="gameSpeed" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTTnsm6cEeSZe_WBkuFUeQ" value="10"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTTntG6cEeSZe_WBkuFUeQ" name="mapGenerator" visibility="private" isStatic="true" type="_oN6xYG6cEeSZe_WBkuFUeQ" association="_oUO0wW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTUOwW6cEeSZe_WBkuFUeQ" name="MoneyLabel" isStatic="true" type="_oSxcMG6cEeSZe_WBkuFUeQ" association="_oUPb0W6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTUOw26cEeSZe_WBkuFUeQ" name="X_DIMENSION" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTU10G6cEeSZe_WBkuFUeQ" value="15"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTU10m6cEeSZe_WBkuFUeQ" name="Y_DIMENSION" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTU1026cEeSZe_WBkuFUeQ" value="15"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTU11W6cEeSZe_WBkuFUeQ" name="newGame" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTVc4G6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTVc4m6cEeSZe_WBkuFUeQ" name="newEmptyGame" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTVc426cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTVc5W6cEeSZe_WBkuFUeQ" name="userEditing" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTWD8G6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTWD8m6cEeSZe_WBkuFUeQ" name="StillBuilding" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTWD826cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTWrAG6cEeSZe_WBkuFUeQ" name="SelectedEntry" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTWrAW6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTWrA26cEeSZe_WBkuFUeQ" name="SelectedExit" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTWrBG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTXSEG6cEeSZe_WBkuFUeQ" name="entry" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTXSEW6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTXSFG6cEeSZe_WBkuFUeQ" name="createMap" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTXSFW6cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTX5IW6cEeSZe_WBkuFUeQ" name="Panel" isStatic="true" type="_oRlJYG6cEeSZe_WBkuFUeQ" association="_oUPb1G6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTX5I26cEeSZe_WBkuFUeQ" name="Frame" isStatic="true" type="_oSE4oG6cEeSZe_WBkuFUeQ" association="_oUQC4W6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTYgMW6cEeSZe_WBkuFUeQ" name="Strategy" type="_oRhfAG6cEeSZe_WBkuFUeQ" association="_oUQC5G6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTYgM26cEeSZe_WBkuFUeQ" name="newMapButton" visibility="private" isStatic="true" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUQp8W6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTZHQW6cEeSZe_WBkuFUeQ" name="createUserMap" visibility="private" isStatic="true" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oURRAG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTZHQ26cEeSZe_WBkuFUeQ" name="loadMapButton" visibility="private" isStatic="true" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUR4EG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTZuUW6cEeSZe_WBkuFUeQ" name="saveMapButton" visibility="private" isStatic="true" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUR4E26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTZuU26cEeSZe_WBkuFUeQ" name="acceptChanges" visibility="private" isStatic="true" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUSfIW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTaVYG6cEeSZe_WBkuFUeQ" name="Strategy1" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUTGMW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTaVYW6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Closest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTaVY26cEeSZe_WBkuFUeQ" name="Strategy2" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUTGNG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTaVZG6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Farthest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTa8cG6cEeSZe_WBkuFUeQ" name="Strategy3" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUTtQW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTa8cW6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Sickest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTa8c26cEeSZe_WBkuFUeQ" name="Strategy4" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUTtRG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTa8dG6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Healthiest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTbjgW6cEeSZe_WBkuFUeQ" name="strategyShow" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUUUUW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTbjgm6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTbjhG6cEeSZe_WBkuFUeQ" name="typeShow" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUUUVG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTbjhW6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTcKkW6cEeSZe_WBkuFUeQ" name="currentTowerStatusButton" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUU7YW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTcKkm6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTcKlG6cEeSZe_WBkuFUeQ" name="currentTowerAmount" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUVicG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTcKlW6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTcxoW6cEeSZe_WBkuFUeQ" name="sellButton" visibility="private" type="_oSwOEG6cEeSZe_WBkuFUeQ" association="_oUVic26cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTcxom6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTcxpG6cEeSZe_WBkuFUeQ" name="counter" visibility="private" type="_oS0fgG6cEeSZe_WBkuFUeQ" association="_oUYlwG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTdYsG6cEeSZe_WBkuFUeQ" value="new Thread(new Runnable() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void run() {&#xD;&#xA;&#x9;&#x9;&#x9;while (true) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;work();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;})"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTdYsm6cEeSZe_WBkuFUeQ" name="pauseResume" visibility="private" type="_oSLmUG6cEeSZe_WBkuFUeQ" association="_oUYlw26cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTdYs26cEeSZe_WBkuFUeQ" value="new ActionListener() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void actionPerformed(java.awt.event.ActionEvent e) {&#xD;&#xA;&#x9;&#x9;&#x9;// gameSpeed = (int) (gameSpeed > 0 ? gameSpeed - 0.5 : gameSpeed);&#xD;&#xA;&#x9;&#x9;&#x9;paused = !paused;&#xD;&#xA;&#x9;&#x9;&#x9;startPauseButton.setText(paused ? &quot;Resume&quot; : &quot;Pause&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;synchronized (lock) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;lock.notifyAll();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oT5dlW6cEeSZe_WBkuFUeQ" name="exit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oT6EoW6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_oSvnAG6cEeSZe_WBkuFUeQ" client="_oOQvo26cEeSZe_WBkuFUeQ" supplier="_oRj7QW6cEeSZe_WBkuFUeQ" contract="_oRj7QW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTvskG6cEeSZe_WBkuFUeQ" name="main" specification="_oOTL4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTvskW6cEeSZe_WBkuFUeQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTvskm6cEeSZe_WBkuFUeQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>java.awt.EventQueue.invokeLater(new Runnable() {&#xD;
			@Override&#xD;
			public void run() {&#xD;
				new Runner();&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTvsk26cEeSZe_WBkuFUeQ" name="Runner" specification="_oOTy8G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTvslG6cEeSZe_WBkuFUeQ" type="_oOQvo26cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>createNewGame();&#xD;
		createMainSurface();&#xD;
		engine.setStrategy(Strategy);&#xD;
		createButtons();&#xD;
&#xD;
		startPauseButton.addActionListener(pauseResume);&#xD;
		handleMouseActions();&#xD;
		counter.start();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTvslW6cEeSZe_WBkuFUeQ" name="createNewGame" specification="_oOTy9G6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>String levelToPlay = JOptionPane.showInputDialog(Panel,&#xD;
				&quot;The level you want play:&quot;, &quot;1&quot;);&#xD;
		Engine.gameLevelandNumberofCritters = Integer.parseInt(levelToPlay);&#xD;
		if (createMap) {&#xD;
			createMap();&#xD;
			map.generateMap();&#xD;
			createMap = true;&#xD;
		}&#xD;
		engineInitializingObserving();&#xD;
		if (MoneyLabel != null)&#xD;
			engine.resetMoney();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTvslm6cEeSZe_WBkuFUeQ" name="createEmptyMap" specification="_oOTy9W6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>Engine.IS_CREATE_CRITTER = false;&#xD;
		map = new Map(X_DIMENSION, Y_DIMENSION);&#xD;
		for (int i = 0; i &lt; X_DIMENSION; i++)&#xD;
			for (int j = 0; j &lt; Y_DIMENSION; j++) {&#xD;
				map.Data[i][j] = Map.BLOCKED;&#xD;
			}&#xD;
		&#xD;
		engineInitializingObserving();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTvsl26cEeSZe_WBkuFUeQ" name="createMap" specification="_oOUaAG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>map = new Map(X_DIMENSION, Y_DIMENSION);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTwToG6cEeSZe_WBkuFUeQ" name="engineInitializingObserving" specification="_oOUaAW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>engine = Engine.initialEngine(map,true);&#xD;
		engine.addObserver(this);&#xD;
		engine.setStrategy(Strategy);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTwToW6cEeSZe_WBkuFUeQ" name="update" specification="_oSzRYG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTwTom6cEeSZe_WBkuFUeQ" name="arg0" type="_oRjUMW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTwTo26cEeSZe_WBkuFUeQ" name="arg1" type="_oSkA0G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>MoneyLabel.setText(&quot;Balance: &quot; + Integer.toString(engine.MONEY) + &quot;$&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTwTpG6cEeSZe_WBkuFUeQ" name="createMainSurface" specification="_oOUaAm6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>int WIDTH = map.Width * (Runner.X_DIMENSION + 50);&#xD;
		int HEIGHT = map.Height * (Runner.Y_DIMENSION + 30);&#xD;
&#xD;
		Frame = new JFrame(&quot;Tower Game&quot;);&#xD;
&#xD;
		Frame.setLayout(new BorderLayout());&#xD;
&#xD;
		Panel = new JPanel();&#xD;
		Panel.setPreferredSize(new Dimension(20, 50));&#xD;
		Panel.setBackground(Color.black);&#xD;
		setBackground(Color.black);&#xD;
		Frame.add(Panel, BorderLayout.NORTH);&#xD;
&#xD;
		setBounds(0, 0, 500, 500);&#xD;
		Frame.add(this, BorderLayout.CENTER);&#xD;
		Frame.setSize(WIDTH, HEIGHT);&#xD;
		Frame.setResizable(false);&#xD;
		Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		Frame.setLocationRelativeTo(null);&#xD;
		Frame.setVisible(true);&#xD;
		addKeyListener(new ButtonHandler());&#xD;
		requestFocus();&#xD;
&#xD;
		createBufferStrategy(2);&#xD;
		Strategy = getBufferStrategy();&#xD;
&#xD;
		// handleMouseActions(Frame);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTwTpW6cEeSZe_WBkuFUeQ" name="createButtons" specification="_oOVBEG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>startPauseButton = new JButton(&quot;Pause&quot;);&#xD;
		newMapButton = new JButton(&quot;New Game&quot;);&#xD;
		createUserMap = new JButton(&quot;Create User Map&quot;);&#xD;
		loadMapButton = new JButton(&quot;Load Map&quot;);&#xD;
		saveMapButton = new JButton(&quot;Save Map&quot;);&#xD;
		acceptChanges = new JButton(&quot;Accept MAp&quot;);&#xD;
		MoneyLabel = new JLabel(&quot;Balance: &quot; + Integer.toString(Engine.MONEY)&#xD;
				+ &quot;$&quot;, SwingConstants.RIGHT);&#xD;
		MoneyLabel.setForeground(Color.white);&#xD;
&#xD;
		Panel.add(startPauseButton);&#xD;
		Panel.add(newMapButton);&#xD;
		Panel.add(createUserMap);&#xD;
		Panel.add(loadMapButton);&#xD;
		Panel.add(saveMapButton);&#xD;
		Panel.add(MoneyLabel, BorderLayout.WEST);&#xD;
&#xD;
		Panel.add(acceptChanges);&#xD;
		acceptChanges.setVisible(false);&#xD;
&#xD;
		newMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				newGame = true;&#xD;
			}&#xD;
		});&#xD;
&#xD;
		saveMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				JFileChooser chooser = new JFileChooser();&#xD;
				// chooser.setCurrentDirectory(new java.io.File(&quot;.&quot;));&#xD;
				chooser.setDialogTitle(&quot;select folder&quot;);&#xD;
				chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);&#xD;
				chooser.setAcceptAllFileFilterUsed(false);&#xD;
&#xD;
				int returnVal = chooser.showSaveDialog(Panel);&#xD;
				if (returnVal == JFileChooser.APPROVE_OPTION) {&#xD;
					String str = chooser.getSelectedFile().getName();&#xD;
					try {&#xD;
						Engine.MAP.MapGenerator.SaveMap(str);&#xD;
					} catch (IOException e1) {&#xD;
						e1.printStackTrace();&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
&#xD;
		loadMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
&#xD;
				userEditing = true;&#xD;
				acceptChanges.setVisible(true);&#xD;
				int height, width;&#xD;
				JFileChooser chooser = new JFileChooser();&#xD;
				FileNameExtensionFilter filter = new FileNameExtensionFilter(&#xD;
						&quot;mp Maps&quot;, &quot;mp&quot;);&#xD;
				chooser.setFileFilter(filter);&#xD;
				int returnVal = chooser.showOpenDialog(Panel);&#xD;
				if (returnVal == JFileChooser.APPROVE_OPTION) {&#xD;
					System.out.println(&quot;Loading...&quot;);&#xD;
					String str = chooser.getSelectedFile().getName();&#xD;
					try {&#xD;
						BufferedReader br = new BufferedReader(new FileReader(&#xD;
								str));&#xD;
						try {&#xD;
							String line = br.readLine();&#xD;
							height = Integer.parseInt(line);&#xD;
							// mapGenerator.setHeight(Integer.parseInt(line));&#xD;
							line = br.readLine();&#xD;
							width = Integer.parseInt(line);&#xD;
							// mapGenerator.setWidth (Integer.parseInt(line));&#xD;
							mapGenerator = new MapGenerator(height, width);&#xD;
							SelectedEntry = true;&#xD;
							SelectedExit = true;&#xD;
							line = br.readLine();&#xD;
							int newStart = Integer.parseInt(line);&#xD;
							mapGenerator.setStartingPoint(newStart);&#xD;
							entry = newStart;&#xD;
							Runner.X_DIMENSION = height;&#xD;
							Runner.Y_DIMENSION = width;&#xD;
							line = br.readLine();&#xD;
							int newEnd = Integer.parseInt(line);&#xD;
							mapGenerator.setEndPoint(newEnd);&#xD;
							exit = newEnd;&#xD;
							line = br.readLine();&#xD;
							while (line != null) {&#xD;
								switch (line) {&#xD;
								case &quot;Up&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Up);&#xD;
									break;&#xD;
								case &quot;Down&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Down);&#xD;
									break;&#xD;
								case &quot;Right&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Right);&#xD;
									break;&#xD;
								case &quot;Left&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Left);&#xD;
									break;&#xD;
								default:&#xD;
									break;&#xD;
								}&#xD;
								line = br.readLine();&#xD;
							}&#xD;
						} finally {&#xD;
							br.close();&#xD;
						}&#xD;
						int curI = mapGenerator.getStartinPoint(), curJ = 0;&#xD;
						mapGenerator.Grid[curI][curJ].value = Status.isPath;&#xD;
						for (int i = 0; i &lt; mapGenerator.getPath().size(); i++) {&#xD;
							Movement dir = mapGenerator.getPath().get(i);&#xD;
							switch (dir) {&#xD;
							case Up:&#xD;
								// Go Up&#xD;
								curI--;&#xD;
								break;&#xD;
							case Down:&#xD;
								// Go Down&#xD;
								curI++;&#xD;
								break;&#xD;
							case Left:&#xD;
								// Go Left&#xD;
								curJ--;&#xD;
								break;&#xD;
							case Right:&#xD;
								// Go Right&#xD;
								curJ++;&#xD;
								break;&#xD;
							default:&#xD;
								break;&#xD;
							}&#xD;
							if (curI &lt; mapGenerator.getHeight() &amp;&amp; curI >= 0&#xD;
									&amp;&amp; curJ &lt; mapGenerator.getWidth()&#xD;
									&amp;&amp; curJ >= 0)&#xD;
								mapGenerator.Grid[curI][curJ].value = Status.isPath;&#xD;
						}&#xD;
						for (int i = 0; i &lt; mapGenerator.getHeight(); i++)&#xD;
							for (int j = 0; j &lt; mapGenerator.getWidth(); j++)&#xD;
								if (mapGenerator.Grid[i][j].value != Status.isPath)&#xD;
									mapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
						// Printing&#xD;
						System.out.println(&quot;Map Loaded:&quot;);&#xD;
						for (int i = 0; i &lt; mapGenerator.getHeight(); i++) {&#xD;
							System.out.print(&quot;|&quot;);&#xD;
							for (int j = 0; j &lt; mapGenerator.getWidth(); j++)&#xD;
								if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
									System.out.print(&quot;X|&quot;);&#xD;
								else&#xD;
									System.out.print(&quot; |&quot;);&#xD;
							System.out.println();&#xD;
						}&#xD;
&#xD;
						for (int i = 0; i &lt; mapGenerator.getPath().size(); i++)&#xD;
							System.out.print(mapGenerator.getPath().get(i)&#xD;
									+ &quot; &quot;);&#xD;
						System.out.println(&quot;&quot;);&#xD;
						// mapGenerator.LoadMap(str);&#xD;
						map.setMapGenerator(mapGenerator);&#xD;
						// Engine.MAP_VALIDATION = new MapValidation(map);&#xD;
&#xD;
						Engine.critters = null;&#xD;
						StillBuilding = true;&#xD;
						// Window w = SwingUtilities&#xD;
						// .getWindowAncestor(engine.Panel);&#xD;
						// w.setVisible(false);&#xD;
&#xD;
						// new Runner();&#xD;
&#xD;
					} catch (IOException e1) {&#xD;
						e1.printStackTrace();&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
&#xD;
		createUserMap.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				String X_Y = JOptionPane.showInputDialog(Panel,&#xD;
						&quot;Put in your dimension:&quot;, &quot;15,15&quot;);&#xD;
				newEmptyGame = true;&#xD;
				String[] parts = X_Y.split(&quot;,&quot;);&#xD;
				int x = Integer.parseInt(parts[1]);&#xD;
				int y = Integer.parseInt(parts[0]);&#xD;
				// TODO Auto-generated method stub&#xD;
				X_DIMENSION = x;&#xD;
				Y_DIMENSION = y;&#xD;
				userEditing = true;&#xD;
				acceptChanges.setVisible(true);&#xD;
				StillBuilding = true;&#xD;
				SelectedEntry = false; // 1st selection&#xD;
				SelectedExit = false; // 2nd selection&#xD;
			}&#xD;
		});&#xD;
&#xD;
		acceptChanges.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				// TODO Auto-generated method stub&#xD;
				if (SelectedEntry &amp;&amp; SelectedExit) {&#xD;
					if (map.UserDefinedMapValidation(entry, exit, map.Height,&#xD;
							map.Width)) {&#xD;
						// show appropriate message&#xD;
						userEditing = false;&#xD;
						StillBuilding = false;&#xD;
						acceptChanges.setVisible(false);&#xD;
						createMap = false;&#xD;
						Engine.IS_CREATE_CRITTER = true;&#xD;
					} else {&#xD;
						StillBuilding = true;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTwTpm6cEeSZe_WBkuFUeQ" name="work" specification="_oOVBEW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>allowPause();&#xD;
		if (newGame) {&#xD;
			createNewGame();&#xD;
			newGame = false;&#xD;
		}&#xD;
		if (newEmptyGame) {&#xD;
			createEmptyMap();&#xD;
			newEmptyGame = false;&#xD;
		}&#xD;
		engine.playing();&#xD;
		sleep();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTwTp26cEeSZe_WBkuFUeQ" name="allowPause" specification="_oOVBEm6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>synchronized (lock) {&#xD;
			while (paused) {&#xD;
				try {&#xD;
					lock.wait();&#xD;
				} catch (InterruptedException e) {&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTw6sG6cEeSZe_WBkuFUeQ" name="sleep" specification="_oOVBE26cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>try {&#xD;
			Thread.sleep(gameSpeed);&#xD;
		} catch (InterruptedException e) {&#xD;
&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTw6sW6cEeSZe_WBkuFUeQ" name="done" specification="_oOVoIG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>startPauseButton.setText(&quot;Start&quot;);&#xD;
		paused = true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTw6sm6cEeSZe_WBkuFUeQ" name="handleMouseActions" specification="_oOVoIW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>addMouseListener(new MouseAdapter() {&#xD;
			private Color background;&#xD;
&#xD;
			@Override&#xD;
			public void mousePressed(MouseEvent e) {&#xD;
				if (userEditing) {&#xD;
					String clickedPoint = Map.tryMapXYtoCellNumber(&#xD;
							e.getX() - 100, e.getY() - 100);&#xD;
					String[] parts = clickedPoint.split(&quot;,&quot;);&#xD;
					int x, y;&#xD;
&#xD;
					try {&#xD;
						x = Integer.parseInt(parts[1]);&#xD;
						y = Integer.parseInt(parts[0]);&#xD;
					} catch (Exception e2) {&#xD;
						return;&#xD;
					}&#xD;
&#xD;
					if (StillBuilding &amp;&amp; !SelectedEntry &amp;&amp; !SelectedExit) {&#xD;
						// select entry point;&#xD;
						if (y == 0) {&#xD;
							entry = x;&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
							SelectedEntry = true;&#xD;
						} else {&#xD;
							// show message to select from the first column&#xD;
							System.out.println(&quot;Select from the 1st column!&quot;);&#xD;
						}&#xD;
					} else if (StillBuilding &amp;&amp; SelectedEntry &amp;&amp; !SelectedExit) {&#xD;
						// select exit point;&#xD;
						if (y == map.Width - 1) {&#xD;
							exit = x;&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
							SelectedExit = true;&#xD;
						} else {&#xD;
							// show message to select from the last column&#xD;
							System.out.println(&quot;Select from the last column!&quot;);&#xD;
						}&#xD;
					} else if (StillBuilding &amp;&amp; SelectedEntry &amp;&amp; SelectedExit) {&#xD;
						if (map.Data[x][y] == Map.BLOCKED)&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
						else {&#xD;
							if (x != entry || x != exit)&#xD;
								map.Data[x][y] = Map.BLOCKED;&#xD;
							// else if (x == entry &amp;&amp; y == 0) {&#xD;
							// SelectedEntry = false;&#xD;
							// System.out.println(&quot;Select new entry point&quot;);&#xD;
							// } else if (x == exit &amp;&amp; y == map.Width - 1) {&#xD;
							// SelectedExit = false;&#xD;
							// System.out.println(&quot;Select new exit point&quot;);&#xD;
							// }&#xD;
						}&#xD;
					}&#xD;
&#xD;
				} else {&#xD;
					String clickedPoint = Map.tryMapXYtoCellNumber(&#xD;
							e.getX() - 100, e.getY() - 100);&#xD;
					String[] parts = clickedPoint.split(&quot;,&quot;);&#xD;
					int x = Integer.parseInt(parts[1]);&#xD;
					int y = Integer.parseInt(parts[0]);&#xD;
					if (map.Data[x][y] == Map.BLOCKED) {&#xD;
						if (engine.checkBalance()) {&#xD;
							JButton regularTypeButton = new JButton(&quot;Regular&quot;);&#xD;
							JButton massTypeButton = new JButton(&#xD;
									&quot;Mass Shooting&quot;);&#xD;
							JButton riffleTypeButton = new JButton(&#xD;
									&quot;Riffle Shooting&quot;);&#xD;
&#xD;
							final JFrame parent = new JFrame();&#xD;
&#xD;
							currentTowerAmount.setEnabled(false);&#xD;
&#xD;
							strategyShow.setEnabled(false);&#xD;
&#xD;
							parent.add(regularTypeButton);&#xD;
							parent.add(massTypeButton);&#xD;
							parent.add(riffleTypeButton);&#xD;
&#xD;
							parent.getContentPane().setLayout(&#xD;
									new GridLayout(3, 3));&#xD;
&#xD;
							parent.pack();&#xD;
							parent.setLocationRelativeTo(null);&#xD;
							parent.setVisible(true);&#xD;
&#xD;
							parent.repaint();&#xD;
							final Tower newTower = new Tower(x, y, 1, 100, 200);&#xD;
&#xD;
							regularTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Regular;&#xD;
&#xD;
											parent.setVisible(false);&#xD;
&#xD;
										}&#xD;
									});&#xD;
&#xD;
							massTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Mass;&#xD;
											engine.withDraw(200);&#xD;
											parent.setVisible(false);&#xD;
&#xD;
										}&#xD;
									});&#xD;
&#xD;
							riffleTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Riffle;&#xD;
											engine.withDraw(100);&#xD;
											parent.setVisible(false);&#xD;
										}&#xD;
									});&#xD;
&#xD;
							TOWERS.add(newTower);&#xD;
							for (Critter critter : Engine.critters) {&#xD;
								critter.addObserver(newTower);&#xD;
							}&#xD;
							map.Data[x][y] = Map.TOWER;&#xD;
							engine.withDraw(100);&#xD;
						} else&#xD;
							JOptionPane.showMessageDialog(null,&#xD;
									&quot;No More Money!&quot;);&#xD;
					} else if (map.Data[x][y] == Map.TOWER) {&#xD;
						if (e.isAltDown()) {&#xD;
							showCharacteristics(x, y);&#xD;
						} else {&#xD;
&#xD;
							int amountToDeposit = GetTower(x, y).CurrentAmount / 2;&#xD;
							map.Data[x][y] = Map.BLOCKED;&#xD;
							engine.deposit(amountToDeposit);&#xD;
							Iterator&lt;Tower> i = TOWERS.iterator();&#xD;
							while (i.hasNext()) {&#xD;
								Tower tower = i.next();&#xD;
								if (tower.x == x &amp;&amp; tower.y == y)&#xD;
									i.remove();&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
&#xD;
			private void showCharacteristics(int x, int y) {&#xD;
				final Tower tower = GetTower(x, y);&#xD;
				final JFrame parent = new JFrame();&#xD;
&#xD;
				final JPanel informationPanel = new JPanel();&#xD;
				final JPanel strategyPanel = new JPanel();&#xD;
				final JPanel actionPanel = new JPanel();&#xD;
&#xD;
				currentTowerAmount.setEnabled(false);&#xD;
&#xD;
				strategyShow.setEnabled(false);&#xD;
				typeShow.setEnabled(false);&#xD;
&#xD;
				informationPanel.add(typeShow);&#xD;
&#xD;
				informationPanel.add(currentTowerAmount);&#xD;
&#xD;
				parent.add(informationPanel, BorderLayout.NORTH);&#xD;
&#xD;
				actionPanel.add(currentTowerStatusButton);&#xD;
				actionPanel.add(sellButton);&#xD;
				parent.add(actionPanel, BorderLayout.CENTER);&#xD;
&#xD;
				strategyPanel.add(Strategy1);&#xD;
				strategyPanel.add(Strategy2);&#xD;
				strategyPanel.add(Strategy3);&#xD;
				strategyPanel.add(Strategy4);&#xD;
				strategyPanel.add(strategyShow);&#xD;
				parent.add(strategyPanel, BorderLayout.SOUTH);&#xD;
&#xD;
				updateValues(tower);&#xD;
&#xD;
				parent.getContentPane().setLayout(new GridLayout(3, 3));&#xD;
&#xD;
				parent.pack();&#xD;
				parent.setLocationRelativeTo(null);&#xD;
				parent.setVisible(true);&#xD;
&#xD;
				parent.repaint();&#xD;
&#xD;
				currentTowerStatusButton&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								if (tower.improveLevel()) {&#xD;
									engine.withDraw(50);&#xD;
									updateValues(tower);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
				sellButton&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								map.Data[tower.x][tower.y] = Map.BLOCKED;&#xD;
								engine.deposit(tower.CurrentAmount / 2);&#xD;
								parent.setVisible(false);&#xD;
							}&#xD;
						});&#xD;
				Strategy1&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Closest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy2&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Farthest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy3&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Sickest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy4&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Healthiest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
			}&#xD;
&#xD;
			private void updateValues(Tower tower) {&#xD;
				currentTowerStatusButton&#xD;
						.setText(&quot;Increase the power of tower with 50$ (current is: [&quot;&#xD;
								+ tower.Level + &quot;])&quot;);&#xD;
&#xD;
				sellButton.setText(&quot;Sell this tower ($&quot;&#xD;
						+ (tower.CurrentAmount / 2) + &quot;)&quot;);&#xD;
&#xD;
				currentTowerAmount&#xD;
						.setText(&quot;Amount you paid for this tower so far is: &quot;&#xD;
								+ tower.CurrentAmount);&#xD;
&#xD;
				// if (tower.Level &lt; 5)&#xD;
				// currentShooting.setText(&quot;Current Shooting rate is:  &quot;&#xD;
				// + tower.Shooting + &quot;  Update to  &quot; + (tower.Shooting&#xD;
				// +50));&#xD;
				// else&#xD;
				// currentShooting.setText(&quot;Current Shoothin rate is: &quot;&#xD;
				// + tower.Shooting + &quot; Cannot Update.&quot;);&#xD;
&#xD;
				strategyShow.setText(&quot;Strategy: &quot; + tower.Strategy.toString());&#xD;
				typeShow.setText(&quot;Type of Tower: &quot; + tower.Type.toString());&#xD;
&#xD;
			}&#xD;
&#xD;
			@Override&#xD;
			public void mouseReleased(MouseEvent e) {&#xD;
				setBackground(background);&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTw6s26cEeSZe_WBkuFUeQ" name="GetTower" specification="_oOVoIm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTw6tG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTw6tW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTw6tm6cEeSZe_WBkuFUeQ" type="_oOJa4G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Iterator&lt;Tower> i = TOWERS.iterator();&#xD;
		while (i.hasNext()) {&#xD;
			Tower tower = i.next();&#xD;
			if (tower.x == x &amp;&amp; tower.y == y)&#xD;
				return tower;&#xD;
		}&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oOTL4G6cEeSZe_WBkuFUeQ" name="main" isStatic="true" method="_oTvskG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6Eom6cEeSZe_WBkuFUeQ">
                  <body>main method of the program it has not yet finished because we are going&#xD;
	 * to obtain game dimension from String[] args&#xD;
	 * &#xD;
	 * @param args&#xD;
	 *            is intended to get custom argument from user when running the&#xD;
	 *            program</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOTL4W6cEeSZe_WBkuFUeQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOTL4m6cEeSZe_WBkuFUeQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOTy8G6cEeSZe_WBkuFUeQ" name="Runner" method="_oTvsk26cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oOTy8W6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oOTy8m6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oT6Eo26cEeSZe_WBkuFUeQ">
                  <body>This is the constructor of our runner class and in this method we create&#xD;
	 * an instance of Game Engine</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOTy826cEeSZe_WBkuFUeQ" type="_oOQvo26cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOTy9G6cEeSZe_WBkuFUeQ" name="createNewGame" visibility="private" method="_oTvslW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6EpG6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for creating new instance of game</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOTy9W6cEeSZe_WBkuFUeQ" name="createEmptyMap" visibility="private" method="_oTvslm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6EpW6cEeSZe_WBkuFUeQ">
                  <body>Create a new empty map based on the user request for create new user&#xD;
	 * defined map</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOUaAG6cEeSZe_WBkuFUeQ" name="createMap" visibility="private" isStatic="true" method="_oTvsl26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6Epm6cEeSZe_WBkuFUeQ">
                  <body>just private method that is called by createNewGame()</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOUaAW6cEeSZe_WBkuFUeQ" name="engineInitializingObserving" visibility="private" method="_oTwToG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6Ep26cEeSZe_WBkuFUeQ">
                  <body>Add observers to the engine class which in this case is Runner itself</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOUaAm6cEeSZe_WBkuFUeQ" name="createMainSurface" visibility="private" method="_oTwTpG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6EqG6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for painting the game environment</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOVBEG6cEeSZe_WBkuFUeQ" name="createButtons" isStatic="true" method="_oTwTpW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6EqW6cEeSZe_WBkuFUeQ">
                  <body>This methods is responsible for creating buttons and put them inside the&#xD;
	 * panel that we receive from engine which is received from surface in a&#xD;
	 * sequence of gets.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOVBEW6cEeSZe_WBkuFUeQ" name="work" visibility="private" method="_oTwTpm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6Eqm6cEeSZe_WBkuFUeQ">
                  <body>Work() intends to handle ongoing play from the beginning of game to the&#xD;
	 * end of the game</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOVBEm6cEeSZe_WBkuFUeQ" name="allowPause" visibility="private" method="_oTwTp26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6rsG6cEeSZe_WBkuFUeQ">
                  <body>allowPause is called in short time boxes just to check if the&#xD;
	 * Pause/Resume button pressed or not</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOVBE26cEeSZe_WBkuFUeQ" name="sleep" visibility="private" method="_oTw6sG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6rsW6cEeSZe_WBkuFUeQ">
                  <body>This method handles sleeps during execution of thread</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOVoIG6cEeSZe_WBkuFUeQ" name="done" visibility="private" method="_oTw6sW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6rsm6cEeSZe_WBkuFUeQ">
                  <body>An unused method to be called when the game is finished (Game Over or&#xD;
	 * Victory)</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOVoIW6cEeSZe_WBkuFUeQ" name="handleMouseActions" visibility="private" method="_oTw6sm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT6rs26cEeSZe_WBkuFUeQ">
                  <body>This method is responsible to react to user request based on mouse clicks&#xD;
	 * such as toggling between Tower and Scenary(path)</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oOVoIm6cEeSZe_WBkuFUeQ" name="GetTower" isStatic="true" method="_oTw6s26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oOVoI26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOVoJG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSP3wG6cEeSZe_WBkuFUeQ" type="_oOJa4G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSzRYG6cEeSZe_WBkuFUeQ" name="update" method="_oTwToW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oSzRYW6cEeSZe_WBkuFUeQ" name="arg0" type="_oRjUMW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSz4cG6cEeSZe_WBkuFUeQ" name="arg1" type="_oSkA0G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUM_kW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUM_km6cEeSZe_WBkuFUeQ _oTRygG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUM_km6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUM_kW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUNmoG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUNmoW6cEeSZe_WBkuFUeQ _oTSZkm6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUNmoW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUNmoG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUNmo26cEeSZe_WBkuFUeQ" name="" memberEnd="_oUNmpG6cEeSZe_WBkuFUeQ _oTSZlG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUNmpG6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUNmo26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUONsW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUONsm6cEeSZe_WBkuFUeQ _oTTAoW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUONsm6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUONsW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUONtG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUONtW6cEeSZe_WBkuFUeQ _oTTAo26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUONtW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUONtG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUO0wW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUO0wm6cEeSZe_WBkuFUeQ _oTTntG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUO0wm6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUO0wW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUPb0W6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUPb0m6cEeSZe_WBkuFUeQ _oTUOwW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUPb0m6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUPb0W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUPb1G6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUPb1W6cEeSZe_WBkuFUeQ _oTX5IW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUPb1W6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUPb1G6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUQC4W6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUQC4m6cEeSZe_WBkuFUeQ _oTX5I26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUQC4m6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUQC4W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUQC5G6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUQC5W6cEeSZe_WBkuFUeQ _oTYgMW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUQC5W6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUQC5G6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUQp8W6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUQp8m6cEeSZe_WBkuFUeQ _oTYgM26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUQp8m6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUQp8W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oURRAG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oURRAW6cEeSZe_WBkuFUeQ _oTZHQW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oURRAW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oURRAG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUR4EG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUR4EW6cEeSZe_WBkuFUeQ _oTZHQ26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUR4EW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUR4EG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUR4E26cEeSZe_WBkuFUeQ" name="" memberEnd="_oUR4FG6cEeSZe_WBkuFUeQ _oTZuUW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUR4FG6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUR4E26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUSfIW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUSfIm6cEeSZe_WBkuFUeQ _oTZuU26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUSfIm6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUSfIW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUTGMW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUTGMm6cEeSZe_WBkuFUeQ _oTaVYG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUTGMm6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUTGMW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUTGNG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUTGNW6cEeSZe_WBkuFUeQ _oTaVY26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUTGNW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUTGNG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUTtQW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUTtQm6cEeSZe_WBkuFUeQ _oTa8cG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUTtQm6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUTtQW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUTtRG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUTtRW6cEeSZe_WBkuFUeQ _oTa8c26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUTtRW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUTtRG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUUUUW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUUUUm6cEeSZe_WBkuFUeQ _oTbjgW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUUUUm6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUUUUW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUUUVG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUUUVW6cEeSZe_WBkuFUeQ _oTbjhG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUUUVW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUUUVG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUU7YW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUU7Ym6cEeSZe_WBkuFUeQ _oTcKkW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUU7Ym6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUU7YW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUVicG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUVicW6cEeSZe_WBkuFUeQ _oTcKlG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUVicW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUVicG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUVic26cEeSZe_WBkuFUeQ" name="" memberEnd="_oUVidG6cEeSZe_WBkuFUeQ _oTcxoW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUVidG6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUVic26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUYlwG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUYlwW6cEeSZe_WBkuFUeQ _oTcxpG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUYlwW6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUYlwG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUYlw26cEeSZe_WBkuFUeQ" name="" memberEnd="_oUYlxG6cEeSZe_WBkuFUeQ _oTdYsm6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUYlxG6cEeSZe_WBkuFUeQ" name="" type="_oOQvo26cEeSZe_WBkuFUeQ" association="_oUYlw26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_oME-VG6cEeSZe_WBkuFUeQ" name="ui">
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_oNzcoG6cEeSZe_WBkuFUeQ" name="TowerType">
              <ownedLiteral xmi:id="_oN0DsW6cEeSZe_WBkuFUeQ" name="Regular"/>
              <ownedLiteral xmi:id="_oN0Dsm6cEeSZe_WBkuFUeQ" name="Mass"/>
              <ownedLiteral xmi:id="_oN0Ds26cEeSZe_WBkuFUeQ" name="Riffle"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oN0DtG6cEeSZe_WBkuFUeQ" name="Cell">
              <ownedComment xmi:id="_oT3BV26cEeSZe_WBkuFUeQ">
                <body>The MapGenerator class is using to make cells of the map based on this&#xD;
structure. It is kind of DataClass that holds the status of cell</body>
              </ownedComment>
              <ownedAttribute xmi:id="_oTE-MG6cEeSZe_WBkuFUeQ" name="value" type="_oOFwhG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTo-5W6cEeSZe_WBkuFUeQ" name="Cell" specification="_oN0qwG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTo-5m6cEeSZe_WBkuFUeQ" type="_oN0DtG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>value = Status.notDecided;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oN0qwG6cEeSZe_WBkuFUeQ" name="Cell" method="_oTo-5W6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oN0qwW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oN0qwm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oN0qw26cEeSZe_WBkuFUeQ" type="_oN0DtG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oN1R0G6cEeSZe_WBkuFUeQ" name="Map">
              <ownedComment xmi:id="_oT3BWG6cEeSZe_WBkuFUeQ">
                <body>The map is the holder of data that shows which cell of that two dimensional&#xD;
array is block, path or tower</body>
              </ownedComment>
              <ownedAttribute xmi:id="_oTFlQG6cEeSZe_WBkuFUeQ" name="MapGenerator" type="_oN6xYG6cEeSZe_WBkuFUeQ" association="_oUKjUW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTFlQm6cEeSZe_WBkuFUeQ" name="CLEAR" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTFlQ26cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTGMUG6cEeSZe_WBkuFUeQ" name="BLOCKED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTGMUW6cEeSZe_WBkuFUeQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTGMUm6cEeSZe_WBkuFUeQ" name="TOWER" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTGMU26cEeSZe_WBkuFUeQ" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTGMVG6cEeSZe_WBkuFUeQ" name="Width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTGzYW6cEeSZe_WBkuFUeQ" name="Height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTGzY26cEeSZe_WBkuFUeQ" name="TILE_SIZE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTGzZG6cEeSZe_WBkuFUeQ" value="20"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTHacG6cEeSZe_WBkuFUeQ" name="StartColumnIndex">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTHacm6cEeSZe_WBkuFUeQ" name="StartRowIndex">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTHadG6cEeSZe_WBkuFUeQ" name="Data">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTIBgG6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTpl8G6cEeSZe_WBkuFUeQ" name="Map" specification="_oN144G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTpl8W6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTpl8m6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTpl826cEeSZe_WBkuFUeQ" type="_oN1R0G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Width = width;&#xD;
		Height = height;&#xD;
		Data = new int[Width][Height];&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
		MapGenerator = new MapGenerator(Height, Width);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTpl9G6cEeSZe_WBkuFUeQ" name="setMapGenerator" specification="_oRrQAG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTpl9W6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_oN6xYG6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>this.MapGenerator = mapGenerator;&#xD;
&#xD;
		this.Width = mapGenerator.getWidth();&#xD;
		this.Height = mapGenerator.getHeight();&#xD;
&#xD;
		Data = new int[Width][Height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTpl9m6cEeSZe_WBkuFUeQ" name="generateMap" specification="_oN2f9G6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>while (MapGenerator.getPath().size() &lt; 50)&#xD;
			MapGenerator.RandomGenerate(Height, Width);&#xD;
&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTpl926cEeSZe_WBkuFUeQ" name="Map" specification="_oRr3EG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTpl-G6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTpl-W6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTpl-m6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_oN6xYG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTpl-26cEeSZe_WBkuFUeQ" type="_oN1R0G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.MapGenerator = mapGenerator;&#xD;
		Data = new int[width][height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; width; i++)&#xD;
			for (int j = 0; j &lt; height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
&#xD;
		Width = width;&#xD;
		Height = height;&#xD;
&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTpl_G6cEeSZe_WBkuFUeQ" name="Map" specification="_oRseIG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTpl_W6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_oN6xYG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTpl_m6cEeSZe_WBkuFUeQ" type="_oN1R0G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>MapGenerator = mapGenerator;&#xD;
&#xD;
		Width = mapGenerator.getWidth();&#xD;
		Height = mapGenerator.getHeight();&#xD;
&#xD;
		Data = new int[Width][Height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTqNAG6cEeSZe_WBkuFUeQ" name="paint" specification="_oSnrMG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTqNAW6cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>for (int x = 0; x &lt; Runner.X_DIMENSION; x++) {&#xD;
			for (int y = 0; y &lt; Runner.Y_DIMENSION; y++) {&#xD;
&#xD;
				// so if the cell is blocks, draw a light grey block&#xD;
				// otherwise use a dark gray&#xD;
				graphic.setColor(Color.darkGray);&#xD;
				if (Data[y][x] == BLOCKED) {&#xD;
					graphic.setColor(Color.white);&#xD;
				}&#xD;
				if (Data[y][x] == TOWER) {&#xD;
					graphic.setColor(Color.blue);&#xD;
				}&#xD;
				// draw the rectangle with a dark outline&#xD;
				graphic.fillRect(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE,&#xD;
						TILE_SIZE);&#xD;
				graphic.setColor(graphic.getColor().darker());&#xD;
				graphic.drawRect(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE,&#xD;
						TILE_SIZE);&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (int x = 0; x &lt; Width; x++) {&#xD;
			for (int y = 0; y &lt; Height; y++) {&#xD;
&#xD;
				if (Data[y][x] == TOWER) {&#xD;
					graphic.setColor(Color.blue);&#xD;
&#xD;
					for (int i = 0; i &lt; Runner.TOWERS.size(); i++)&#xD;
						if (Runner.TOWERS.get(i).x == y&#xD;
								&amp;&amp; Runner.TOWERS.get(i).y == x) {&#xD;
							Tower tower = Runner.TOWERS.get(i);&#xD;
							drawCircle(graphic, x * TILE_SIZE, y * TILE_SIZE,&#xD;
									tower.Range * 20);&#xD;
						}&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		graphic.setColor(Color.orange);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTqNAm6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_oSoSQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTqNA26cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTqNBG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTqNBW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTqNBm6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTqNB26cEeSZe_WBkuFUeQ" name="isBlocked" specification="_oN3uEG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTqNCG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTqNCW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTqNCm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (isNotMap(x, y))&#xD;
			return true;&#xD;
		else&#xD;
			return Data[(int) y][(int) x] == BLOCKED;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTqNC26cEeSZe_WBkuFUeQ" name="isNotMap" specification="_oN3uFG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTqNDG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTqNDW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTqNDm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (x &lt; 0 || x > Width || y &lt; 0 || y > Height)&#xD;
			return true;&#xD;
		else&#xD;
			return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTqND26cEeSZe_WBkuFUeQ" name="tryMapXYtoCellNumber" specification="_oN4VIm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTqNEG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTqNEW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTqNEm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>for (int i = 0; i &lt; 400; i = i + 20)&#xD;
			for (int j = 0; j &lt; 400; j = j + 20) {&#xD;
				if (x >= i &amp;&amp; x &lt;= i + 20)&#xD;
					if (y >= j &amp;&amp; y &lt;= j + 20)&#xD;
						return ((i / 20) + &quot;,&quot; + (j / 20));&#xD;
			}&#xD;
		return &quot;&quot;;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTq0EG6cEeSZe_WBkuFUeQ" name="UserDefinedMapValidation" specification="_oN48MG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTq0EW6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTq0Em6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTq0E26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTq0FG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTq0FW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this.MapGenerator.getPath() != null) {&#xD;
			// this.MapGenerator.setPath(null);&#xD;
			this.MapGenerator.setPath(new ArrayList&lt;Movement>());&#xD;
			System.out.println(&quot;Map Editing...&quot;);&#xD;
			for (int i = 0; i &lt; height; i++)&#xD;
				for (int j = 0; j &lt; width; j++)&#xD;
					if (this.Data[i][j] == Map.CLEAR)&#xD;
						this.MapGenerator.Grid[i][j].value = Status.notDecided;&#xD;
					else&#xD;
						this.MapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
			MapGenerator validity = this.MapGenerator.mapEditing(entry, exit,&#xD;
					height, width);&#xD;
			if (validity == null)&#xD;
				return false;&#xD;
			return true;&#xD;
		} else {&#xD;
			System.out.println(&quot;Manually Generating...&quot;);&#xD;
			this.MapGenerator = new MapGenerator(height, width);&#xD;
			for (int i = 0; i &lt; height; i++)&#xD;
				for (int j = 0; j &lt; width; j++)&#xD;
					if (this.Data[i][j] == Map.CLEAR)&#xD;
						this.MapGenerator.Grid[i][j].value = Status.notDecided;&#xD;
					else&#xD;
						this.MapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
			MapGenerator validity = this.MapGenerator.ManualGenerate(entry,&#xD;
					exit, height, width);&#xD;
			if (validity == null)&#xD;
				return false;&#xD;
&#xD;
			else {&#xD;
				// complete map;&#xD;
			}&#xD;
			return true;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oN144G6cEeSZe_WBkuFUeQ" name="Map" method="_oTpl8G6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oN2f8W6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oN2f8m6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oT3BWW6cEeSZe_WBkuFUeQ">
                  <body>Create a new map with some default contents&#xD;
	 * &#xD;
	 * @param width&#xD;
	 * @param height</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN144W6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN2f8G6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN2f826cEeSZe_WBkuFUeQ" type="_oN1R0G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oN2f9G6cEeSZe_WBkuFUeQ" name="generateMap" method="_oTpl9m6cEeSZe_WBkuFUeQ"/>
              <ownedOperation xmi:id="_oN3uEG6cEeSZe_WBkuFUeQ" name="isBlocked" method="_oTqNB26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BXW6cEeSZe_WBkuFUeQ">
                  <body>Check if a particular location on the map is blocked. Note that the x and&#xD;
	 * y parameters are floating point numbers meaning that we can be checking&#xD;
	 * partially across a grid cell.&#xD;
	 * &#xD;
	 * @param x&#xD;
	 *            The x position to check for blocking&#xD;
	 * @param y&#xD;
	 *            The y position to check for blocking&#xD;
	 * @return True if the location is blocked</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN3uEW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN3uEm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN3uE26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN3uFG6cEeSZe_WBkuFUeQ" name="isNotMap" method="_oTqNC26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BXm6cEeSZe_WBkuFUeQ">
                  <body>This method will tell the caller if it is in the area of map&#xD;
	 * &#xD;
	 * @param x&#xD;
	 *            is the position in the x-Axis&#xD;
	 * @param y&#xD;
	 *            is the position in the y-Axis</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN3uFW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN4VIG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN4VIW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN4VIm6cEeSZe_WBkuFUeQ" name="tryMapXYtoCellNumber" isStatic="true" method="_oTqND26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3oYG6cEeSZe_WBkuFUeQ">
                  <body>This is very useful method that map the point (x,y) to the corresponding&#xD;
	 * cell in the array of [15][15] or any user preference when wanted to&#xD;
	 * create the map&#xD;
	 * &#xD;
	 * @param is&#xD;
	 *            the value x in the x-Axis&#xD;
	 * @param is&#xD;
	 *            the value of y-Axis</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN4VI26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN4VJG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN4VJW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN48MG6cEeSZe_WBkuFUeQ" name="UserDefinedMapValidation" method="_oTq0EG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3oYW6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for checking if the user created map is valid&#xD;
	 * or not by checking the start point, end point and the path from start to&#xD;
	 * end&#xD;
	 * &#xD;
	 * @param entry&#xD;
	 * @param exit&#xD;
	 * @param height&#xD;
	 * @param width&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN48MW6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN48Mm6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN48M26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN48NG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN48NW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRrQAG6cEeSZe_WBkuFUeQ" name="setMapGenerator" method="_oTpl9G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oRrQAW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_oN6xYG6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRr3EG6cEeSZe_WBkuFUeQ" name="Map" method="_oTpl926cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oRr3FG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oRr3FW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oT3BWm6cEeSZe_WBkuFUeQ">
                  <body>This constructor is used by Load button&#xD;
	 * &#xD;
	 * @param width&#xD;
	 *            is the width map&#xD;
	 * &#xD;
	 * @param height&#xD;
	 *            is the height of the map&#xD;
	 * &#xD;
	 * @param mapGenerator&#xD;
	 *            to generate the path based on the loaded file</body>
                </ownedComment>
                <ownedParameter xmi:id="_oRr3EW6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRr3Em6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRr3E26cEeSZe_WBkuFUeQ" name="mapGenerator" type="_oN6xYG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oRr3Fm6cEeSZe_WBkuFUeQ" type="_oN1R0G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRseIG6cEeSZe_WBkuFUeQ" name="Map" method="_oTpl_G6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oRseIm6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oRseI26cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oRseIW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_oN6xYG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oRseJG6cEeSZe_WBkuFUeQ" type="_oN1R0G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSnrMG6cEeSZe_WBkuFUeQ" name="paint" method="_oTqNAG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BW26cEeSZe_WBkuFUeQ">
                  <body>Render the map to the graphics context provided. The rendering is just&#xD;
	 * simple fill rectangles&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            The graphics context on which to draw the map</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSnrMW6cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSoSQG6cEeSZe_WBkuFUeQ" name="drawCircle" method="_oTqNAm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BXG6cEeSZe_WBkuFUeQ">
                  <body>This method is used in when we want to show a circle around a tower for&#xD;
	 * the range of shooting&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            is the handle for depicting objects on it</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSoSQW6cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSoSQm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSoSQ26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSoSRG6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oN6xYG6cEeSZe_WBkuFUeQ" name="MapGenerator">
              <ownedComment xmi:id="_oT3oYm6cEeSZe_WBkuFUeQ">
                <body>Creates a randomized map and a path from the starting point to the end point&#xD;
in it.&#xD;
&#xD;
@author Sasan&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_oTIBg26cEeSZe_WBkuFUeQ" name="Grid" isStatic="true" type="_oN0DtG6cEeSZe_WBkuFUeQ" association="_oUKjVG6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTIokG6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTIok26cEeSZe_WBkuFUeQ" name="Path" isStatic="true" type="_oOFJcG6cEeSZe_WBkuFUeQ" isOrdered="true">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTJPoG6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTJ2sW6cEeSZe_WBkuFUeQ" name="Height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oT3oY26cEeSZe_WBkuFUeQ" name="Width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oT3oZm6cEeSZe_WBkuFUeQ" name="StartingPoint">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oT4Pcm6cEeSZe_WBkuFUeQ" name="EndPoint">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTrbJG6cEeSZe_WBkuFUeQ" name="MapGenerator" specification="_oN7_gG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTrbJW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTrbJm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTrbJ26cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Grid = new Cell[height][width];&#xD;
		Path = new ArrayList&lt;Movement>();&#xD;
		Height = height;&#xD;
		Width = width;&#xD;
		StartingPoint = 0;&#xD;
		EndPoint = 0;&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j] = new Cell();&#xD;
&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j].value = Status.notDecided;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTrbKG6cEeSZe_WBkuFUeQ" name="getStartinPoint" specification="_oN8mkG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTrbKW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.StartingPoint;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTsCMG6cEeSZe_WBkuFUeQ" name="getEndPoint" specification="_oN8mkm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTsCMW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.EndPoint;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTsCMm6cEeSZe_WBkuFUeQ" name="getWidth" specification="_oN8mlG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTsCM26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.Width;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTsCNG6cEeSZe_WBkuFUeQ" name="MapGenerator" specification="_oN9NoW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTsCNW6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTsCNm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTsCN26cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTsCOG6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Grid = new Cell[height][width];&#xD;
		Path = new ArrayList&lt;Movement>();&#xD;
		StartingPoint = 0;&#xD;
		EndPoint = 0;&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j] = new Cell();&#xD;
&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j].value = Status.notDecided;&#xD;
		LoadMap(file);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTsCOW6cEeSZe_WBkuFUeQ" name="SaveMap" specification="_oN90sm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTsCOm6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>File statText = new File(file);&#xD;
		FileOutputStream is = new FileOutputStream(statText);&#xD;
		OutputStreamWriter osw = new OutputStreamWriter(is);&#xD;
		Writer writer = new BufferedWriter(osw);&#xD;
		writer.write(Height + &quot;\r\n&quot;);&#xD;
		writer.write(Width + &quot;\r\n&quot;);&#xD;
		writer.write(this.StartingPoint + &quot;\r\n&quot;);&#xD;
		writer.write(this.EndPoint + &quot;\r\n&quot;);&#xD;
		for (int i = 0; i &lt; MapGenerator.Path.size(); i++)&#xD;
			writer.write(MapGenerator.Path.get(i).toString() + &quot;\r\n&quot;);&#xD;
		writer.close();&#xD;
		System.out.println(&quot;File saved!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTsCO26cEeSZe_WBkuFUeQ" name="LoadMap" specification="_oN-bwG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTsCPG6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTsCPW6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>System.out.println(&quot;Loading...&quot;);&#xD;
		BufferedReader br = new BufferedReader(new FileReader(file));&#xD;
		try {&#xD;
			String line = br.readLine();&#xD;
			this.Height = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.Width = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.StartingPoint = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.EndPoint = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			while (line != null) {&#xD;
				switch (line) {&#xD;
				case &quot;Up&quot;:&#xD;
					this.Path.add(Movement.Up);&#xD;
					break;&#xD;
				case &quot;Down&quot;:&#xD;
					this.Path.add(Movement.Down);&#xD;
					break;&#xD;
				case &quot;Right&quot;:&#xD;
					this.Path.add(Movement.Right);&#xD;
					break;&#xD;
				case &quot;Left&quot;:&#xD;
					this.Path.add(Movement.Left);&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
				line = br.readLine();&#xD;
			}&#xD;
		} finally {&#xD;
			br.close();&#xD;
		}&#xD;
		int curI = this.StartingPoint, curJ = 0;&#xD;
		this.Grid[curI][curJ].value = Status.isPath;&#xD;
		for (int i = 0; i &lt; this.Path.size(); i++) {&#xD;
			Movement dir = this.Path.get(i);&#xD;
			switch (dir) {&#xD;
			case Up:&#xD;
				// Go Up&#xD;
				curI--;&#xD;
				break;&#xD;
			case Down:&#xD;
				// Go Down&#xD;
				curI++;&#xD;
				break;&#xD;
			case Left:&#xD;
				// Go Left&#xD;
				curJ--;&#xD;
				break;&#xD;
			case Right:&#xD;
				// Go Right&#xD;
				curJ++;&#xD;
				break;&#xD;
			default:&#xD;
				break;&#xD;
			}&#xD;
			if (curI &lt; Height &amp;&amp; curI >= 0 &amp;&amp; curJ &lt; Width &amp;&amp; curJ >= 0)&#xD;
				this.Grid[curI][curJ].value = Status.isPath;&#xD;
		}&#xD;
		for (int i = 0; i &lt; Height; i++)&#xD;
			for (int j = 0; j &lt; Width; j++)&#xD;
				if (this.Grid[i][j].value != Status.isPath)&#xD;
					this.Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Loaded:&quot;);&#xD;
		for (int i = 0; i &lt; Height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; Width; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; this.Path.size(); i++)&#xD;
			System.out.print(this.Path.get(i) + &quot; &quot;);&#xD;
&#xD;
		return this;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTspQG6cEeSZe_WBkuFUeQ" name="Deadend" specification="_oN_C0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTspQW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspQm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspQ26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>try {&#xD;
			if ((i >= 0 &amp;&amp; i &lt;= Height - 2 &amp;&amp; Grid[i + 1][j].value == Status.notDecided)&#xD;
					|| (i >= 1 &amp;&amp; i &lt; Height &amp;&amp; Grid[i - 1][j].value == Status.notDecided)&#xD;
					|| (j >= 0 &amp;&amp; j &lt;= Width - 2 &amp;&amp; Grid[i][j + 1].value == Status.notDecided)&#xD;
					|| (j >= 1 &amp;&amp; j &lt; Width &amp;&amp; Grid[i][j - 1].value == Status.notDecided))&#xD;
				return false;&#xD;
		} catch (Exception e) {&#xD;
			return false;&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTspRG6cEeSZe_WBkuFUeQ" name="DestinationCellAdjIsZero" specification="_oSCcYG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTspRW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspRm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspR26cEeSZe_WBkuFUeQ" name="Dir" type="_oOFJcG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTspSG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>int adj = 0;&#xD;
		switch (Dir) {&#xD;
		case Up:&#xD;
			if (i > 0 &amp;&amp; j > 0 &amp;&amp; Grid[i - 1][j - 1].value == Status.isPath) // left&#xD;
																				// of&#xD;
																				// destination&#xD;
																				// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i - 1][j + 1].value == Status.isPath) // right of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 1 &amp;&amp; Grid[i - 2][j].value == Status.isPath) // top of&#xD;
																// destination&#xD;
																// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Down:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j > 0&#xD;
					&amp;&amp; Grid[i + 1][j - 1].value == Status.isPath) // left of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i &lt; Height - 1 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i + 1][j + 1].value == Status.isPath) // right of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i &lt; Height - 2 &amp;&amp; Grid[i + 2][j].value == Status.isPath) // bottom&#xD;
																			// of&#xD;
																			// destination&#xD;
																			// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Left:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j > 0&#xD;
					&amp;&amp; Grid[i + 1][j - 1].value == Status.isPath) // bottom of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j > 0 &amp;&amp; Grid[i - 1][j - 1].value == Status.isPath) // top&#xD;
																				// of&#xD;
																				// destination&#xD;
																				// cell&#xD;
				adj++;&#xD;
			if (j > 1 &amp;&amp; Grid[i][j - 2].value == Status.isPath) // left of&#xD;
																// destination&#xD;
																// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Right:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i + 1][j + 1].value == Status.isPath) // bottom of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i - 1][j + 1].value == Status.isPath) // top of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (j &lt; Width - 2 &amp;&amp; Grid[i][j + 2].value == Status.isPath) // right&#xD;
																		// of&#xD;
																		// destination&#xD;
																		// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		default:&#xD;
			break;&#xD;
		}&#xD;
		if (adj == 0)&#xD;
			return true;&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTspSW6cEeSZe_WBkuFUeQ" name="MoveIsPossible" specification="_oSCcZW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTspSm6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspS26cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspTG6cEeSZe_WBkuFUeQ" name="Dir" type="_oOFJcG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTspTW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>try {&#xD;
			if (((i > 0 &amp;&amp; Grid[i - 1][j].value == Status.notDecided &amp;&amp; Dir == Movement.Up)&#xD;
					|| (i &lt; Height - 1&#xD;
							&amp;&amp; Grid[i + 1][j].value == Status.notDecided &amp;&amp; Dir == Movement.Down)&#xD;
					|| (j > 0 &amp;&amp; Grid[i][j - 1].value == Status.notDecided &amp;&amp; Dir == Movement.Left) || (j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i][j + 1].value == Status.notDecided &amp;&amp; Dir == Movement.Right))&#xD;
			// &amp;&amp; DestinationCellAdjIsZero(i, j, Dir)&#xD;
			)&#xD;
				return true;&#xD;
		} catch (Exception e) {&#xD;
			return false;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTspTm6cEeSZe_WBkuFUeQ" name="RandomGenerate" specification="_oN_p4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTspT26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspUG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspUW6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>// Initializing&#xD;
		Random rnd = new Random();&#xD;
		int in = 0;&#xD;
		int out = rnd.nextInt(height);&#xD;
		StartingPoint = in;&#xD;
		EndPoint = out;&#xD;
		Runner.entry = StartingPoint;&#xD;
		Runner.exit = EndPoint;&#xD;
		// int in = scn.nextInt(height);&#xD;
		// int out = scn.nextInt(height);&#xD;
&#xD;
		int cur_i = 0, cur_j = 0, Dir;&#xD;
		Movement Direction = null;&#xD;
&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// Random Generation&#xD;
		while (!(cur_i == out &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				Dir = rnd.nextInt(4);&#xD;
				switch (Dir) {&#xD;
				case 0:&#xD;
					Direction = Movement.Up;&#xD;
					break;&#xD;
				case 1:&#xD;
					Direction = Movement.Down;&#xD;
					break;&#xD;
				case 2:&#xD;
					Direction = Movement.Left;&#xD;
					break;&#xD;
				case 3:&#xD;
					Direction = Movement.Right;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
				if (MoveIsPossible(cur_i, cur_j, Direction)) {&#xD;
					// Update(cur_i, cur_j, Direction);&#xD;
					switch (Direction) {&#xD;
					case Up:&#xD;
						// Go Up&#xD;
						cur_i--;&#xD;
						break;&#xD;
					case Down:&#xD;
						// Go Down&#xD;
						cur_i++;&#xD;
						break;&#xD;
					case Left:&#xD;
						// Go Left&#xD;
						cur_j--;&#xD;
						break;&#xD;
					case Right:&#xD;
						// Go Right&#xD;
						cur_j++;&#xD;
						break;&#xD;
					default:&#xD;
						break;&#xD;
					}&#xD;
					Grid[cur_i][cur_j].value = Status.isPath;&#xD;
					Path.add(Direction);&#xD;
				}&#xD;
			} else {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = Path.get(Path.size() - 1);&#xD;
				if (LastMove == null)&#xD;
					RandomGenerate(height, width);&#xD;
				Path.remove(Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTspUm6cEeSZe_WBkuFUeQ" name="ManualGenerate" specification="_oOAQ8G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTspU26cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspVG6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspVW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspVm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTspV26cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>StartingPoint = entry;&#xD;
		EndPoint = exit;&#xD;
		int cur_i = entry;&#xD;
		int cur_j = 0;&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// DFS&#xD;
		while (!(cur_i == exit &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				if (MoveIsPossible(cur_i, cur_j, Movement.Right)) {&#xD;
					cur_j++;&#xD;
					Path.add(Movement.Right);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Up)) {&#xD;
					cur_i--;&#xD;
					Path.add(Movement.Up);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Down)) {&#xD;
					cur_i++;&#xD;
					Path.add(Movement.Down);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Left)) {&#xD;
					cur_j--;&#xD;
					Path.add(Movement.Left);&#xD;
				}&#xD;
				Grid[cur_i][cur_j].value = Status.isPath;&#xD;
			} else if (!Path.isEmpty()) {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = Path.get(Path.size() - 1);&#xD;
				Path.remove(Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			if (Path.isEmpty() &amp;&amp; Deadend(cur_i, cur_j)) {&#xD;
				System.out&#xD;
						.println(&quot;There isn't a path between entry point and end point!&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTtQUG6cEeSZe_WBkuFUeQ" name="mapEditing" specification="_oOA4AW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTtQUW6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTtQUm6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTtQU26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTtQVG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTtQVW6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>StartingPoint = entry;&#xD;
		EndPoint = exit;&#xD;
		int cur_i = entry;&#xD;
		int cur_j = 0;&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// DFS&#xD;
		while (!(cur_i == exit &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				if (MoveIsPossible(cur_i, cur_j, Movement.Right)) {&#xD;
					cur_j++;&#xD;
					this.Path.add(Movement.Right);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Up)) {&#xD;
					cur_i--;&#xD;
					this.Path.add(Movement.Up);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Down)) {&#xD;
					cur_i++;&#xD;
					this.Path.add(Movement.Down);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Left)) {&#xD;
					cur_j--;&#xD;
					this.Path.add(Movement.Left);&#xD;
				}&#xD;
				Grid[cur_i][cur_j].value = Status.isPath;&#xD;
			} else if (!this.Path.isEmpty()) {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = this.Path.get(this.Path.size() - 1);&#xD;
				this.Path.remove(this.Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			if (this.Path.isEmpty() &amp;&amp; Deadend(cur_i, cur_j)) {&#xD;
				System.out&#xD;
						.println(&quot;There isn't a path between entry point and end point!&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTtQVm6cEeSZe_WBkuFUeQ" name="setWidth" specification="_oOBfEW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTtQV26cEeSZe_WBkuFUeQ" name="newWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.Width = newWidth;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTtQWG6cEeSZe_WBkuFUeQ" name="setStartingPoint" specification="_oOBfE26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTtQWW6cEeSZe_WBkuFUeQ" name="newStart">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.StartingPoint = newStart;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTtQWm6cEeSZe_WBkuFUeQ" name="setEndPoint" specification="_oOCGIW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTtQW26cEeSZe_WBkuFUeQ" name="newEnd">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.EndPoint = newEnd;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oN7_gG6cEeSZe_WBkuFUeQ" name="MapGenerator" method="_oTrbJG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oN7_g26cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oN7_hG6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oN7_gW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN7_gm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN7_hW6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oN8mkG6cEeSZe_WBkuFUeQ" name="getStartinPoint" method="_oTrbKG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42gG6cEeSZe_WBkuFUeQ">
                  <body>getter of StartingPoint&#xD;
	 * &#xD;
	 * @return Starting Point</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN8mkW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN8mkm6cEeSZe_WBkuFUeQ" name="getEndPoint" method="_oTsCMG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42gW6cEeSZe_WBkuFUeQ">
                  <body>getter of EndPoint&#xD;
	 * &#xD;
	 * @return EndPoint</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN8mk26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN8mlG6cEeSZe_WBkuFUeQ" name="getWidth" method="_oTsCMm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42gm6cEeSZe_WBkuFUeQ">
                  <body>get the Width of&#xD;
	 * &#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN9NoG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN9NoW6cEeSZe_WBkuFUeQ" name="MapGenerator" method="_oTsCNG6cEeSZe_WBkuFUeQ" raisedException="_oSpgYG6cEeSZe_WBkuFUeQ _oSM0c26cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oN9NpW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oN90sG6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oT42g26cEeSZe_WBkuFUeQ">
                  <body>After loading map based on the file path in will fill it with new cell&#xD;
	 * for the path&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @throws NumberFormatException&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN9Nom6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN9No26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN9NpG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN90sW6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oN90sm6cEeSZe_WBkuFUeQ" name="SaveMap" method="_oTsCOW6cEeSZe_WBkuFUeQ" raisedException="_oSM0c26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42hG6cEeSZe_WBkuFUeQ">
                  <body>Save map with based on the given path&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN90s26cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN-bwG6cEeSZe_WBkuFUeQ" name="LoadMap" method="_oTsCO26cEeSZe_WBkuFUeQ" raisedException="_oSpgYG6cEeSZe_WBkuFUeQ _oSM0c26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42hW6cEeSZe_WBkuFUeQ">
                  <body>This method will read the file to create a new map based on the inputs&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @return&#xD;
	 * @throws NumberFormatException&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN-bwW6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSB1UG6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oN_C0G6cEeSZe_WBkuFUeQ" name="Deadend" method="_oTspQG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42hm6cEeSZe_WBkuFUeQ">
                  <body>will check if the path has reached a dead-end&#xD;
	 * &#xD;
	 * @param i&#xD;
	 * @param j&#xD;
	 * @return true if it has found any dead-end</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN_C0W6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN_C0m6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN_C026cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN_p4G6cEeSZe_WBkuFUeQ" name="RandomGenerate" method="_oTspTm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42iW6cEeSZe_WBkuFUeQ">
                  <body>Generating a new map based on random numbers that starts with point(0,0)&#xD;
	 * and finished with the right edge.&#xD;
	 * &#xD;
	 * @return MapGenerator the generated map</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN_p4W6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oN_p4m6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSDDc26cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOAQ8G6cEeSZe_WBkuFUeQ" name="ManualGenerate" method="_oTspUm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42im6cEeSZe_WBkuFUeQ">
                  <body>Checks user defined map for validation&#xD;
	 * &#xD;
	 * @param entry&#xD;
	 * @param exit&#xD;
	 * @param height&#xD;
	 * @param width&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOAQ8W6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOAQ8m6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOAQ826cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOA4AG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSDDdG6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOA4AW6cEeSZe_WBkuFUeQ" name="mapEditing" method="_oTtQUG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oOA4Am6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOA4A26cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOA4BG6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOBfEG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSDDdW6cEeSZe_WBkuFUeQ" type="_oN6xYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOBfEW6cEeSZe_WBkuFUeQ" name="setWidth" method="_oTtQVm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oOBfEm6cEeSZe_WBkuFUeQ" name="newWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOBfE26cEeSZe_WBkuFUeQ" name="setStartingPoint" method="_oTtQWG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oOCGIG6cEeSZe_WBkuFUeQ" name="newStart">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOCGIW6cEeSZe_WBkuFUeQ" name="setEndPoint" method="_oTtQWm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oOCGIm6cEeSZe_WBkuFUeQ" name="newEnd">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oSCcYG6cEeSZe_WBkuFUeQ" name="DestinationCellAdjIsZero" method="_oTspRG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42h26cEeSZe_WBkuFUeQ">
                  <body>Deprecate method that we used to search the path for adjacency with&#xD;
	 * another path when we are going to make the map based on user creation of&#xD;
	 * map&#xD;
	 * &#xD;
	 * @param i&#xD;
	 * @param j&#xD;
	 * @param Dir&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSCcYW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSCcYm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSCcY26cEeSZe_WBkuFUeQ" name="Dir" type="_oOFJcG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSCcZG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oSCcZW6cEeSZe_WBkuFUeQ" name="MoveIsPossible" method="_oTspSW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT42iG6cEeSZe_WBkuFUeQ">
                  <body>Check the new movement is possible or not&#xD;
	 * &#xD;
	 * @param i&#xD;
	 *            is the value on the X-Axis&#xD;
	 * @param j&#xD;
	 *            is the value on Y-Axis&#xD;
	 * @param Dir&#xD;
	 *            the next movement&#xD;
	 * @return true if it's possible and false if it's not possible</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSCcZm6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSDDcG6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSDDcW6cEeSZe_WBkuFUeQ" name="Dir" type="_oOFJcG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSDDcm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_oOFJcG6cEeSZe_WBkuFUeQ" name="Movement">
              <ownedComment xmi:id="_oT5dkG6cEeSZe_WBkuFUeQ">
                <body>Enum indicating the next movement that should be performed by the engine and&#xD;
critter&#xD;
&#xD;
@author Sasan&#xD;
 *</body>
              </ownedComment>
              <ownedLiteral xmi:id="_oOFwgG6cEeSZe_WBkuFUeQ" name="Up"/>
              <ownedLiteral xmi:id="_oOFwgW6cEeSZe_WBkuFUeQ" name="Down"/>
              <ownedLiteral xmi:id="_oOFwgm6cEeSZe_WBkuFUeQ" name="Right"/>
              <ownedLiteral xmi:id="_oOFwg26cEeSZe_WBkuFUeQ" name="Left"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_oOFwhG6cEeSZe_WBkuFUeQ" name="Status">
              <ownedComment xmi:id="_oT5dkW6cEeSZe_WBkuFUeQ">
                <body>possible values of each cell in the map&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <ownedLiteral xmi:id="_oOGXkG6cEeSZe_WBkuFUeQ" name="isPath"/>
              <ownedLiteral xmi:id="_oOGXkW6cEeSZe_WBkuFUeQ" name="isBlock"/>
              <ownedLiteral xmi:id="_oOGXkm6cEeSZe_WBkuFUeQ" name="notDecided"/>
              <ownedLiteral xmi:id="_oOGXk26cEeSZe_WBkuFUeQ" name="isTower"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oOGXlG6cEeSZe_WBkuFUeQ" name="Surface">
              <ownedComment xmi:id="_oT5dkm6cEeSZe_WBkuFUeQ">
                <body>This is the main element of the game, Surface tends to hold and draw each and&#xD;
every UI elements we have in the game It should be complete over the time&#xD;
Creation of Surface is the common thing between all games and you can find&#xD;
many similar things like this which actually this one is also influenced by a&#xD;
piece of code I found somewhere else.&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_oTLr4G6cEeSZe_WBkuFUeQ" name="Strategy" type="_oRhfAG6cEeSZe_WBkuFUeQ" association="_oULKYW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTLr4m6cEeSZe_WBkuFUeQ" name="prevRow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTMS8W6cEeSZe_WBkuFUeQ" name="prevCol" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTMS826cEeSZe_WBkuFUeQ" name="RowChanged">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTMS9G6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTM6AW6cEeSZe_WBkuFUeQ" name="PreviousRowLeftBlock">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTM6Am6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTM6BG6cEeSZe_WBkuFUeQ" name="PreviousRowRightBlock">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTNhEG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTNhEm6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oULKZG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTNhFG6cEeSZe_WBkuFUeQ" name="Panel" type="_oRlJYG6cEeSZe_WBkuFUeQ" association="_oULxcW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTOIIW6cEeSZe_WBkuFUeQ" name="Frame" isStatic="true" type="_oSE4oG6cEeSZe_WBkuFUeQ" association="_oUMYgG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTt3YG6cEeSZe_WBkuFUeQ" name="Surface" specification="_oSFfsG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTt3YW6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTt3Ym6cEeSZe_WBkuFUeQ" name="engine" type="_oNsu8G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTt3Y26cEeSZe_WBkuFUeQ" type="_oOGXlG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.map = map;&#xD;
		Strategy = engine.getStrategy();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTuecG6cEeSZe_WBkuFUeQ" name="refreshSurface" specification="_oSrVkG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTuecW6cEeSZe_WBkuFUeQ" name="g" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>g.setColor(Color.black);&#xD;
		g.fillRect(0, 0, 500, 500);&#xD;
&#xD;
		g.translate(100, 100);&#xD;
		map.paint(g);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSFfsG6cEeSZe_WBkuFUeQ" name="Surface" method="_oTt3YG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oSFfs26cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSFftG6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSFfsW6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSFfsm6cEeSZe_WBkuFUeQ" name="engine" type="_oNsu8G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSGGwG6cEeSZe_WBkuFUeQ" type="_oOGXlG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSrVkG6cEeSZe_WBkuFUeQ" name="refreshSurface" method="_oTuecG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oSrVkW6cEeSZe_WBkuFUeQ" name="g" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oOJa4G6cEeSZe_WBkuFUeQ" name="Tower">
              <ownedComment xmi:id="_oT5dk26cEeSZe_WBkuFUeQ">
                <body>Holds information about the tower such as Level and current paid amount for&#xD;
this tower&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_oTOII26cEeSZe_WBkuFUeQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTOvMW6cEeSZe_WBkuFUeQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTOvM26cEeSZe_WBkuFUeQ" name="Level">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTPWQW6cEeSZe_WBkuFUeQ" name="CurrentAmount">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTPWQ26cEeSZe_WBkuFUeQ" name="Range">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTPWRG6cEeSZe_WBkuFUeQ" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTP9UW6cEeSZe_WBkuFUeQ" name="Type" type="_oNzcoG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTP9U26cEeSZe_WBkuFUeQ" name="Strategy" type="_oOQIkG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTQkYW6cEeSZe_WBkuFUeQ" name="Shooting">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTQkY26cEeSZe_WBkuFUeQ" name="crittersInRange" type="_oOfZIG6cEeSZe_WBkuFUeQ" isOrdered="true" association="_oUMYg26cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTQkZG6cEeSZe_WBkuFUeQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTQkZW6cEeSZe_WBkuFUeQ" value="new ArrayList&lt;Critter>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTRLcW6cEeSZe_WBkuFUeQ" name="lastTimeSpan" type="_oRiGEm6cEeSZe_WBkuFUeQ"/>
              <interfaceRealization xmi:id="_oSr8oG6cEeSZe_WBkuFUeQ" client="_oOJa4G6cEeSZe_WBkuFUeQ" supplier="_oRj7QW6cEeSZe_WBkuFUeQ" contract="_oRj7QW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTuecm6cEeSZe_WBkuFUeQ" name="Tower" specification="_oOKpAG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTuec26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTuedG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTuedW6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTuedm6cEeSZe_WBkuFUeQ" name="currentAmount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTued26cEeSZe_WBkuFUeQ" name="shooting">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTueeG6cEeSZe_WBkuFUeQ" type="_oOJa4G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.x = x;&#xD;
		this.y = y;&#xD;
		this.Level = level;&#xD;
		this.CurrentAmount = currentAmount;&#xD;
		this.Type = TowerType.Regular;&#xD;
		this.Strategy = TowerStrategy.Closest;&#xD;
		this.Shooting = shooting;&#xD;
		this.lastTimeSpan = new Date();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTueeW6cEeSZe_WBkuFUeQ" name="improveLevel" specification="_oOL3IG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTueem6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this.Level &lt; 5) {&#xD;
			this.Shooting -= 50;&#xD;
			this.Level++;&#xD;
			this.CurrentAmount += 50;&#xD;
			if (this.Level >= 3 &amp;&amp; this.Level &lt;= 4)&#xD;
				this.Range++;&#xD;
			else if (this.Level == 5) {&#xD;
				this.Range++;&#xD;
			}&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTuee26cEeSZe_WBkuFUeQ" name="update" specification="_oStKwG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTuefG6cEeSZe_WBkuFUeQ" name="arg0" type="_oRjUMW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTuefW6cEeSZe_WBkuFUeQ" name="arg1" type="_oSkA0G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>Critter critter = (Critter) arg0;&#xD;
		if (!crittersInRange.contains(critter))&#xD;
			crittersInRange.add(critter);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTvFgG6cEeSZe_WBkuFUeQ" name="checkIfIsinTheAreaOfTower" specification="_oSHU4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTvFgW6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTvFgm6cEeSZe_WBkuFUeQ" name="xp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTvFg26cEeSZe_WBkuFUeQ" name="yp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTvFhG6cEeSZe_WBkuFUeQ" type="_oOJa4G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>boolean isIn = false;&#xD;
		for (int x = 0; x &lt; Runner.X_DIMENSION; x++) {&#xD;
			for (int y = 0; y &lt; Runner.Y_DIMENSION; y++) {&#xD;
&#xD;
				if (map.Data[y][x] == Map.TOWER) {&#xD;
					int centerX = x;&#xD;
					int centerY = y;&#xD;
&#xD;
					if (Math.abs((int) centerX - xp / 20)&#xD;
							+ Math.abs((int) centerY - yp / 20) &lt;= Range)&#xD;
						isIn = true;&#xD;
					else&#xD;
						isIn = false;&#xD;
&#xD;
					if (isIn) {&#xD;
						for (int i = 0; i &lt; Runner.TOWERS.size(); i++)&#xD;
							if (Runner.TOWERS.get(i).x == centerY&#xD;
									&amp;&amp; Runner.TOWERS.get(i).y == centerX) {&#xD;
								Tower tower = Runner.TOWERS.get(i);&#xD;
								Engine.graphic.setColor(Color.yellow);&#xD;
								drawCircle(Engine.graphic, tower.y * 20,&#xD;
										tower.x * 20, tower.Range * 20,&#xD;
										tower.Type == Type.Regular ? 1&#xD;
												: tower.Type == Type.Mass ? 10&#xD;
														: 5);&#xD;
								return this;&#xD;
							}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (isIn)&#xD;
			return this;&#xD;
		else&#xD;
			return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTvFhW6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_oStx0W6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTvFhm6cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTvFh26cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTvFiG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTvFiW6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTvFim6cEeSZe_WBkuFUeQ" name="stroke">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// graphic.setStroke(new BasicStroke(stroke));&#xD;
		graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
		// graphic.setStroke(new BasicStroke(1));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oOKpAG6cEeSZe_WBkuFUeQ" name="Tower" method="_oTuecm6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oOLQFG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oOLQFW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oOKpAW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOLQEG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOLQEW6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOLQEm6cEeSZe_WBkuFUeQ" name="currentAmount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOLQE26cEeSZe_WBkuFUeQ" name="shooting">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOLQFm6cEeSZe_WBkuFUeQ" type="_oOJa4G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOL3IG6cEeSZe_WBkuFUeQ" name="improveLevel" method="_oTueeW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oOL3IW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oSHU4G6cEeSZe_WBkuFUeQ" name="checkIfIsinTheAreaOfTower" method="_oTvFgG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oSH78G6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSH78W6cEeSZe_WBkuFUeQ" name="xp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSH78m6cEeSZe_WBkuFUeQ" name="yp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSH7826cEeSZe_WBkuFUeQ" type="_oOJa4G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oStKwG6cEeSZe_WBkuFUeQ" name="update" method="_oTuee26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oStKwW6cEeSZe_WBkuFUeQ" name="arg0" type="_oRjUMW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oStKwm6cEeSZe_WBkuFUeQ" name="arg1" type="_oSkA0G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oStx0W6cEeSZe_WBkuFUeQ" name="drawCircle" method="_oTvFhW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oStx0m6cEeSZe_WBkuFUeQ" name="graphic" type="_oRg38G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oStx026cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oStx1G6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSuY4G6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSuY4W6cEeSZe_WBkuFUeQ" name="stroke">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_oOQIkG6cEeSZe_WBkuFUeQ" name="TowerStrategy">
              <ownedLiteral xmi:id="_oOQIkm6cEeSZe_WBkuFUeQ" name="Closest"/>
              <ownedLiteral xmi:id="_oOQvoG6cEeSZe_WBkuFUeQ" name="Farthest"/>
              <ownedLiteral xmi:id="_oOQvoW6cEeSZe_WBkuFUeQ" name="Sickest"/>
              <ownedLiteral xmi:id="_oOQvom6cEeSZe_WBkuFUeQ" name="Healthiest"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUKjUW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUKjUm6cEeSZe_WBkuFUeQ _oTFlQG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUKjUm6cEeSZe_WBkuFUeQ" name="" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUKjUW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUKjVG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUKjVW6cEeSZe_WBkuFUeQ _oTIBg26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUKjVW6cEeSZe_WBkuFUeQ" name="" type="_oN6xYG6cEeSZe_WBkuFUeQ" association="_oUKjVG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oULKYW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oULKYm6cEeSZe_WBkuFUeQ _oTLr4G6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oULKYm6cEeSZe_WBkuFUeQ" name="" type="_oOGXlG6cEeSZe_WBkuFUeQ" association="_oULKYW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oULKZG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oULKZW6cEeSZe_WBkuFUeQ _oTNhEm6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oULKZW6cEeSZe_WBkuFUeQ" name="" type="_oOGXlG6cEeSZe_WBkuFUeQ" association="_oULKZG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oULxcW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oULxcm6cEeSZe_WBkuFUeQ _oTNhFG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oULxcm6cEeSZe_WBkuFUeQ" name="" type="_oOGXlG6cEeSZe_WBkuFUeQ" association="_oULxcW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUMYgG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUMYgW6cEeSZe_WBkuFUeQ _oTOIIW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUMYgW6cEeSZe_WBkuFUeQ" name="" type="_oOGXlG6cEeSZe_WBkuFUeQ" association="_oUMYgG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUMYg26cEeSZe_WBkuFUeQ" name="" memberEnd="_oUMYhG6cEeSZe_WBkuFUeQ _oTQkY26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUMYhG6cEeSZe_WBkuFUeQ" name="" type="_oOJa4G6cEeSZe_WBkuFUeQ" association="_oUMYg26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_oMHakG6cEeSZe_WBkuFUeQ" name="engine">
            <packagedElement xmi:type="uml:Class" xmi:id="_oNrg0G6cEeSZe_WBkuFUeQ" name="ButtonHandler">
              <ownedComment xmi:id="_oT2aRG6cEeSZe_WBkuFUeQ">
                <body>This class would be used when we want to handle keyboard interactions from&#xD;
the player We may use map it for map creation it extends KeyAdapter</body>
              </ownedComment>
              <generalization xmi:id="_oSiysG6cEeSZe_WBkuFUeQ" general="_oRebtG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnwwG6cEeSZe_WBkuFUeQ" name="ButtonHandler" specification="_oNsH4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnwwW6cEeSZe_WBkuFUeQ" type="_oNrg0G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>System.out.println(&quot; Button handler initialised! &quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnwwm6cEeSZe_WBkuFUeQ" name="keyPressed" specification="_oShkkG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnww26cEeSZe_WBkuFUeQ" name="key" type="_oRfCwW6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>switch (key.getKeyCode()) {&#xD;
		case KeyEvent.VK_UP:&#xD;
			// Critter..get(0).setUp(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_DOWN:&#xD;
			// Critter.critters.get(0).setDown(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_LEFT:&#xD;
			// Critter.critters.get(0).setLeft(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_RIGHT:&#xD;
			// Critter.critters.get(0).setRight(true);&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnwxG6cEeSZe_WBkuFUeQ" name="keyReleased" specification="_oSiLoW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnwxW6cEeSZe_WBkuFUeQ" name="key" type="_oRfCwW6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>switch (key.getKeyCode()) {&#xD;
		case KeyEvent.VK_UP:&#xD;
			// Critter.critters.get(0).setUp(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_DOWN:&#xD;
			// Critter.critters.get(0).setDown(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_LEFT:&#xD;
			// Critter.critters.get(0).setLeft(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_RIGHT:&#xD;
&#xD;
			// Critter.critters.get(0).setRight(false);&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oNsH4G6cEeSZe_WBkuFUeQ" name="ButtonHandler" method="_oTnwwG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oNsH4W6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oNsH4m6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oNsH426cEeSZe_WBkuFUeQ" type="_oNrg0G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oShkkG6cEeSZe_WBkuFUeQ" name="keyPressed" method="_oTnwwm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oSiLoG6cEeSZe_WBkuFUeQ" name="key" type="_oRfCwW6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSiLoW6cEeSZe_WBkuFUeQ" name="keyReleased" method="_oTnwxG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oSiLom6cEeSZe_WBkuFUeQ" name="key" type="_oRfCwW6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oNsu8G6cEeSZe_WBkuFUeQ" name="Engine">
              <ownedComment xmi:id="_oT2aRW6cEeSZe_WBkuFUeQ">
                <body>This class is responsible for the game logic including the movements,&#xD;
creation of critters, accounting of the game and so on. In case of&#xD;
restarting, this class would be initialized again and its noteworthy to know&#xD;
that we make the constructor of this class private and we are going to&#xD;
initialize this class using initialEngine which is a static method returning&#xD;
new instance of class&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oSl2AW6cEeSZe_WBkuFUeQ" general="_oRjUMW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTB64G6cEeSZe_WBkuFUeQ" name="Panel" type="_oRlJYG6cEeSZe_WBkuFUeQ" association="_oUIHEW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTB64m6cEeSZe_WBkuFUeQ" name="MAP" isStatic="true" type="_oN1R0G6cEeSZe_WBkuFUeQ" association="_oUIHFG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTCh8W6cEeSZe_WBkuFUeQ" name="MONEY" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTCh8m6cEeSZe_WBkuFUeQ" value="1000"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTCh9G6cEeSZe_WBkuFUeQ" name="Surface" type="_oOGXlG6cEeSZe_WBkuFUeQ" association="_oUIuIW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTDJAG6cEeSZe_WBkuFUeQ" name="critters" isStatic="true" type="_oOfZIG6cEeSZe_WBkuFUeQ" isOrdered="true" association="_oUIuJG6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTDJAW6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTDJA26cEeSZe_WBkuFUeQ" name="gameLevelandNumberofCritters" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTDJBG6cEeSZe_WBkuFUeQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTDwEW6cEeSZe_WBkuFUeQ" name="IS_CREATE_CRITTER" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oTDwEm6cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oTDwFG6cEeSZe_WBkuFUeQ" name="graphic" isStatic="true" type="_oRg38G6cEeSZe_WBkuFUeQ" association="_oUJVMW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTEXIW6cEeSZe_WBkuFUeQ" name="engine" visibility="private" isStatic="true" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUJ8QG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_oTEXI26cEeSZe_WBkuFUeQ" name="strategy" type="_oRhfAG6cEeSZe_WBkuFUeQ" isReadOnly="true" association="_oUJ8Q26cEeSZe_WBkuFUeQ"/>
              <interfaceRealization xmi:id="_oSiysW6cEeSZe_WBkuFUeQ" client="_oNsu8G6cEeSZe_WBkuFUeQ" supplier="_oRj7QW6cEeSZe_WBkuFUeQ" contract="_oRj7QW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnwxm6cEeSZe_WBkuFUeQ" name="initialEngine" specification="_oRmXgG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnwx26cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oTnwyG6cEeSZe_WBkuFUeQ" name="createNew">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnwyW6cEeSZe_WBkuFUeQ" type="_oNsu8G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>MAP = map;&#xD;
		if (engine == null || createNew)&#xD;
			engine = new Engine();&#xD;
		return engine;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnwym6cEeSZe_WBkuFUeQ" name="Engine" specification="_oNt9EG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnwy26cEeSZe_WBkuFUeQ" type="_oNsu8G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Surface = new Surface(MAP, this);&#xD;
		critters = new ArrayList&lt;Critter>();&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++) {&#xD;
			Critter critter = Critter.createCritter(MAP, MAP.StartColumnIndex,&#xD;
					MAP.StartRowIndex, gameLevelandNumberofCritters);&#xD;
			critters.add(critter);&#xD;
			critter.addObserver(this);&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oToX0G6cEeSZe_WBkuFUeQ" name="update" specification="_oSkA0m6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oToX0W6cEeSZe_WBkuFUeQ" name="critterArg" type="_oRjUMW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oToX0m6cEeSZe_WBkuFUeQ" name="towerArg" type="_oSkA0G6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>Critter critter = (Critter) critterArg;&#xD;
		Tower tower = (Tower) towerArg;&#xD;
		Critter tempCritter = null;&#xD;
&#xD;
		if (tower.Strategy == TowerStrategy.Closest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			int minDX = 1000;&#xD;
			int minDY = 1000;&#xD;
			for (int i = 0; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (Math.abs((tower.crittersInRange.get(i).getX()) - tower.x) &lt; minDX&#xD;
						|| Math.abs((tower.crittersInRange.get(i).getY())&#xD;
								- tower.y) &lt; minDY) {&#xD;
					minDX = Math.abs((tower.crittersInRange.get(i).getX())&#xD;
							- tower.x);&#xD;
					minDY = Math.abs((tower.crittersInRange.get(i).getY())&#xD;
							- tower.y);&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
				}&#xD;
		} else if (tower.Strategy == TowerStrategy.Farthest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			int maxDX = 0;&#xD;
			int maxDY = 0;&#xD;
			for (int i = 0; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (Math.abs(tower.crittersInRange.get(i).getX() - tower.x) > maxDX&#xD;
						|| Math.abs(tower.crittersInRange.get(i).getY()&#xD;
								- tower.y) > maxDY) {&#xD;
					maxDX = Math.abs((tower.crittersInRange.get(i).getX())&#xD;
							- tower.x);&#xD;
					maxDY = Math.abs((tower.crittersInRange.get(i).getY())&#xD;
							- tower.y);&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
				}&#xD;
		} else if (tower.Strategy == TowerStrategy.Healthiest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			tempCritter = tower.crittersInRange.get(0);&#xD;
			for (int i = 1; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (tower.crittersInRange.get(i).getExistingLife() > tempCritter&#xD;
						.getExistingLife())&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
		} else if (tower.Strategy == TowerStrategy.Sickest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			tempCritter = tower.crittersInRange.get(0);&#xD;
			for (int i = 1; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (tower.crittersInRange.get(i).getExistingLife() &lt; tempCritter&#xD;
						.getExistingLife())&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
		}&#xD;
		if (critter == tempCritter) {&#xD;
			Date dateobj = new Date();&#xD;
			if (dateobj.getTime() - tower.lastTimeSpan.getTime() > tower.Shooting) {&#xD;
				int shootingType = 0;&#xD;
				if (tower.Type == TowerType.Regular)&#xD;
					shootingType = 1;&#xD;
				else if (tower.Type == TowerType.Mass)&#xD;
					shootingType = 10;&#xD;
				else {&#xD;
					shootingType = 2;&#xD;
					tower.Shooting = 50;&#xD;
				}&#xD;
				critter.setExistingLife((int) (critter.getExistingLife() - shootingType));&#xD;
				tower.lastTimeSpan = dateobj;&#xD;
			}&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oToX026cEeSZe_WBkuFUeQ" name="resetMoney" specification="_oNukIm6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>MONEY = 1000;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oToX1G6cEeSZe_WBkuFUeQ" name="withDraw" specification="_oNukI26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oToX1W6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (checkBalance())&#xD;
			MONEY -= amount;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oToX1m6cEeSZe_WBkuFUeQ" name="deposit" specification="_oNvLMG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oToX126cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>MONEY += amount;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oToX2G6cEeSZe_WBkuFUeQ" name="checkBalance" specification="_oNvLMm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oToX2W6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (MONEY >= 100)&#xD;
			return true;&#xD;
		else&#xD;
			return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oToX2m6cEeSZe_WBkuFUeQ" name="setStrategy" specification="_oSlO8m6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oToX226cEeSZe_WBkuFUeQ" name="strategy" type="_oRhfAG6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>this.strategy = strategy;&#xD;
		Surface.Strategy = strategy;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTo-4G6cEeSZe_WBkuFUeQ" name="playing" specification="_oNvLNG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>if (Runner.userEditing) {&#xD;
			critters = null;&#xD;
			refreshSurface();&#xD;
			strategy.show();&#xD;
			return;&#xD;
		}&#xD;
		if (critters == null) {&#xD;
			critters = new ArrayList&lt;Critter>();&#xD;
			for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
				if (critters.size() &lt; gameLevelandNumberofCritters) {&#xD;
					Critter critter = Critter.createCritter(MAP,&#xD;
							MAP.StartColumnIndex, MAP.StartRowIndex,&#xD;
							gameLevelandNumberofCritters);&#xD;
					critter.addObserver(this);&#xD;
					critters.add(critter);&#xD;
&#xD;
					for (Tower tower : Runner.TOWERS) {&#xD;
						critter.addObserver(tower);&#xD;
					}&#xD;
				}&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			if (critters.get(i).isToReduceTheMoney()) {&#xD;
				deposit(200);&#xD;
				critters.get(i).setToReduceTheMoney(false);&#xD;
			}&#xD;
&#xD;
		boolean toNewLevel = true;&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			if (critters.get(i).getExistingLife() > 0) {&#xD;
				toNewLevel = false;&#xD;
			}&#xD;
&#xD;
		if (toNewLevel) {&#xD;
			critters = null;&#xD;
			nextLevel();&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		graphic = refreshSurface();&#xD;
&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			critters.get(i).paint(graphic);&#xD;
&#xD;
		strategy.show();&#xD;
		try {&#xD;
			Thread.sleep(4);&#xD;
		} catch (Exception e) {&#xD;
&#xD;
		}&#xD;
&#xD;
		for (int index = 0; index &lt; gameLevelandNumberofCritters; index++)&#xD;
			critters.get(index).moving(5 + index, MAP);&#xD;
&#xD;
		try {&#xD;
			for (int index = 0; index &lt; gameLevelandNumberofCritters; index++) {&#xD;
				critters.get(index).moving(index % 5, MAP);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			// TODO: handle exception&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTo-4W6cEeSZe_WBkuFUeQ" name="refreshSurface" specification="_oNvyQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTo-4m6cEeSZe_WBkuFUeQ" type="_oRg38G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Graphics2D g = (Graphics2D) strategy.getDrawGraphics();&#xD;
		Surface.refreshSurface(g);&#xD;
		strategy.show();&#xD;
		return g;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTo-426cEeSZe_WBkuFUeQ" name="nextLevel" specification="_oNvyQW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>JOptionPane.showMessageDialog(null,&#xD;
				&quot;You Are Victorious! Press start and go to level: &quot;&#xD;
						+ (gameLevelandNumberofCritters + 1));&#xD;
&#xD;
		Engine.IS_CREATE_CRITTER = true;&#xD;
		gameLevelandNumberofCritters++;&#xD;
		deposit(500);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTo-5G6cEeSZe_WBkuFUeQ" name="setGameOver" specification="_oNvyQm6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>JOptionPane.showMessageDialog(null, &quot;Game Over&quot;);&#xD;
		critters = null;&#xD;
		for (Tower tower : Runner.TOWERS) {&#xD;
			MAP.Data[tower.x][tower.y] = Map.BLOCKED;&#xD;
		}&#xD;
		Runner.TOWERS.clear();&#xD;
		Engine.IS_CREATE_CRITTER = true;&#xD;
		gameLevelandNumberofCritters = 1;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oNt9EG6cEeSZe_WBkuFUeQ" name="Engine" visibility="private" method="_oTnwym6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_oNt9EW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oNukIG6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oT2aR26cEeSZe_WBkuFUeQ">
                  <body>private constructor of Engine class that initialize map, map validation,&#xD;
	 * set the default value for money (1000), create surface based on the new&#xD;
	 * map. Here we also create two critter for our game and can be dynamic&#xD;
	 * based on the level of the game. For now we hard coded the creation of&#xD;
	 * these two critters.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oNukIW6cEeSZe_WBkuFUeQ" type="_oNsu8G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oNukIm6cEeSZe_WBkuFUeQ" name="resetMoney" method="_oToX026cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT2aSG6cEeSZe_WBkuFUeQ">
                  <body>this methos is responsible for reseting game settings</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oNukI26cEeSZe_WBkuFUeQ" name="withDraw" method="_oToX1G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT2aSW6cEeSZe_WBkuFUeQ">
                  <body>This is part of accounting system of the our game which will reduce the&#xD;
	 * amount of the user deposited. Then it will refresh the text of label for&#xD;
	 * showing the remaining amount of money&#xD;
	 * &#xD;
	 * @param amount&#xD;
	 *            represents the amount of money should be reduced from the&#xD;
	 *            deposit</body>
                </ownedComment>
                <ownedParameter xmi:id="_oNukJG6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oNvLMG6cEeSZe_WBkuFUeQ" name="deposit" method="_oToX1m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BUG6cEeSZe_WBkuFUeQ">
                  <body>This method will act in opposite of withdraw. it is used full when the&#xD;
	 * player sells the tower for half of the prices it pays for.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oNvLMW6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oNvLMm6cEeSZe_WBkuFUeQ" name="checkBalance" method="_oToX2G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BUW6cEeSZe_WBkuFUeQ">
                  <body>It will be called whenever we want to make sure the player wont exceed&#xD;
	 * the amount it has for buying towers.&#xD;
	 * &#xD;
	 * @return will return true/false to indicate if the user positive balance&#xD;
	 *         or not.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oNvLM26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oNvLNG6cEeSZe_WBkuFUeQ" name="playing" method="_oTo-4G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BU26cEeSZe_WBkuFUeQ">
                  <body>This public method is playing an important role in the game. It has the&#xD;
	 * game logic inside to be called by the thread frequently.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oNvyQG6cEeSZe_WBkuFUeQ" name="refreshSurface" method="_oTo-4W6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BVG6cEeSZe_WBkuFUeQ">
                  <body>depicting latest changes on the screen&#xD;
	 * &#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSl2AG6cEeSZe_WBkuFUeQ" type="_oRg38G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oNvyQW6cEeSZe_WBkuFUeQ" name="nextLevel" method="_oTo-426cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BVW6cEeSZe_WBkuFUeQ">
                  <body>Transition from one level to another</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oNvyQm6cEeSZe_WBkuFUeQ" name="setGameOver" isStatic="true" method="_oTo-5G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BVm6cEeSZe_WBkuFUeQ">
                  <body>This static method is called when the player cannot defend well from&#xD;
	 * critters and one critter reach the end point</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oRmXgG6cEeSZe_WBkuFUeQ" name="initialEngine" isStatic="true" method="_oTnwxm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT2aRm6cEeSZe_WBkuFUeQ">
                  <body>Static method which is responsible for creating an instance of class&#xD;
	 * Engine and is accessible from outside because it's static method</body>
                </ownedComment>
                <ownedParameter xmi:id="_oRmXgW6cEeSZe_WBkuFUeQ" name="map" type="_oN1R0G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oRmXgm6cEeSZe_WBkuFUeQ" name="createNew">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRm-kG6cEeSZe_WBkuFUeQ" type="_oNsu8G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSkA0m6cEeSZe_WBkuFUeQ" name="update" method="_oToX0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oSkA026cEeSZe_WBkuFUeQ" name="critterArg" type="_oRjUMW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_oSkA1G6cEeSZe_WBkuFUeQ" name="towerArg" type="_oSkA0G6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSlO8m6cEeSZe_WBkuFUeQ" name="setStrategy" method="_oToX2m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_oT3BUm6cEeSZe_WBkuFUeQ">
                  <body>It is used to set the private value of strategy for internal usages will&#xD;
	 * assign BufferStrategy to local variable strategy.&#xD;
	 * &#xD;
	 * @param the&#xD;
	 *            value of this parameter should be correspond to the Surface&#xD;
	 *            which itself is extending the canvas</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSlO826cEeSZe_WBkuFUeQ" name="strategy" type="_oRhfAG6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUIHEW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUIHEm6cEeSZe_WBkuFUeQ _oTB64G6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUIHEm6cEeSZe_WBkuFUeQ" name="" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUIHEW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUIHFG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUIHFW6cEeSZe_WBkuFUeQ _oTB64m6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUIHFW6cEeSZe_WBkuFUeQ" name="" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUIHFG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUIuIW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUIuIm6cEeSZe_WBkuFUeQ _oTCh9G6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUIuIm6cEeSZe_WBkuFUeQ" name="" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUIuIW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUIuJG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUIuJW6cEeSZe_WBkuFUeQ _oTDJAG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUIuJW6cEeSZe_WBkuFUeQ" name="" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUIuJG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUJVMW6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUJVMm6cEeSZe_WBkuFUeQ _oTDwFG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUJVMm6cEeSZe_WBkuFUeQ" name="" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUJVMW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUJ8QG6cEeSZe_WBkuFUeQ" name="" memberEnd="_oUJ8QW6cEeSZe_WBkuFUeQ _oTEXIW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUJ8QW6cEeSZe_WBkuFUeQ" name="" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUJ8QG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oUJ8Q26cEeSZe_WBkuFUeQ" name="" memberEnd="_oUJ8RG6cEeSZe_WBkuFUeQ _oTEXI26cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_oUJ8RG6cEeSZe_WBkuFUeQ" name="" type="_oNsu8G6cEeSZe_WBkuFUeQ" association="_oUJ8Q26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_oMLE8m6cEeSZe_WBkuFUeQ" name="util">
            <packagedElement xmi:type="uml:Class" xmi:id="_oNn2cG6cEeSZe_WBkuFUeQ" name="Utility">
              <ownedComment xmi:id="_oT2aQW6cEeSZe_WBkuFUeQ">
                <body>We can put general purpose methods here, such as collection helpers and this&#xD;
randInt that I need for the initial version All Utility methods are most of&#xD;
the time static&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oTnJsG6cEeSZe_WBkuFUeQ" name="randInt" specification="_oNodgG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oTnJsW6cEeSZe_WBkuFUeQ" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnJsm6cEeSZe_WBkuFUeQ" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTnJs26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Random rand = new Random();&#xD;
		int randomNum = rand.nextInt((max - min) + 1) + min;&#xD;
		return randomNum;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oNodgG6cEeSZe_WBkuFUeQ" name="randInt" isStatic="true" method="_oTnJsG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_oNodgW6cEeSZe_WBkuFUeQ" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oNodgm6cEeSZe_WBkuFUeQ" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oNodg26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oMLE8G6cEeSZe_WBkuFUeQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_oMLE8W6cEeSZe_WBkuFUeQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_oRb_cG6cEeSZe_WBkuFUeQ" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oRiGEG6cEeSZe_WBkuFUeQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_oRiGEm6cEeSZe_WBkuFUeQ" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oRitIW6cEeSZe_WBkuFUeQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oRjUMW6cEeSZe_WBkuFUeQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oRj7QW6cEeSZe_WBkuFUeQ" name="Observer"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oSNbgW6cEeSZe_WBkuFUeQ" name="Iterator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oMM6IG6cEeSZe_WBkuFUeQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_oMM6IW6cEeSZe_WBkuFUeQ" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_oRebtG6cEeSZe_WBkuFUeQ" name="KeyAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_oRfCwW6cEeSZe_WBkuFUeQ" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_oSK_Qm6cEeSZe_WBkuFUeQ" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_oSLmUG6cEeSZe_WBkuFUeQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_oSLmUm6cEeSZe_WBkuFUeQ" name="MouseAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_oSMNYW6cEeSZe_WBkuFUeQ" name="MouseEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_oMOIQG6cEeSZe_WBkuFUeQ" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_oRhfAG6cEeSZe_WBkuFUeQ" name="BufferStrategy"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_oRg38G6cEeSZe_WBkuFUeQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oRqB4G6cEeSZe_WBkuFUeQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSJxIG6cEeSZe_WBkuFUeQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSJxIm6cEeSZe_WBkuFUeQ" name="Canvas"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSKYMW6cEeSZe_WBkuFUeQ" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSK_QG6cEeSZe_WBkuFUeQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSWlcG6cEeSZe_WBkuFUeQ" name="Image"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oMWrIG6cEeSZe_WBkuFUeQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_oSMNY26cEeSZe_WBkuFUeQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSM0cW6cEeSZe_WBkuFUeQ" name="FileReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSM0c26cEeSZe_WBkuFUeQ" name="IOException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oMnw4G6cEeSZe_WBkuFUeQ" name="lang">
        <packagedElement xmi:type="uml:Package" xmi:id="_oMnw4W6cEeSZe_WBkuFUeQ" name="Math"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSfvYG6cEeSZe_WBkuFUeQ" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSkA0G6cEeSZe_WBkuFUeQ" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSpgYG6cEeSZe_WBkuFUeQ" name="NumberFormatException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oS0fgG6cEeSZe_WBkuFUeQ" name="Thread"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oMOIQW6cEeSZe_WBkuFUeQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_oMOIQm6cEeSZe_WBkuFUeQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_oMgcIG6cEeSZe_WBkuFUeQ" name="filechooser">
          <packagedElement xmi:type="uml:Class" xmi:id="_oSOCkG6cEeSZe_WBkuFUeQ" name="FileNameExtensionFilter"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_oRkiUW6cEeSZe_WBkuFUeQ" name="JOptionPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oRlJYG6cEeSZe_WBkuFUeQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSE4oG6cEeSZe_WBkuFUeQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSwOEG6cEeSZe_WBkuFUeQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSxcMG6cEeSZe_WBkuFUeQ" name="JLabel"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNTtYG6cEeSZe_WBkuFUeQ" name="TestSuite"/>
    <profileApplication xmi:id="_n84EsG6cEeSZe_WBkuFUeQ">
      <eAnnotations xmi:id="_n84rwG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_n84rwW6cEeSZe_WBkuFUeQ" base_Package="_n05NYG6cEeSZe_WBkuFUeQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNUUcG6cEeSZe_WBkuFUeQ" base_Element="_oNTtYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNUUcW6cEeSZe_WBkuFUeQ" base_Element="_oNTtYG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNUUcm6cEeSZe_WBkuFUeQ" name="RunWith">
      <annotationParameters xmi:id="_oNUUc26cEeSZe_WBkuFUeQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_oT0lEG6cEeSZe_WBkuFUeQ" value="Suite.class"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_oNUUdG6cEeSZe_WBkuFUeQ" name="SuiteClasses">
      <annotationParameters xmi:id="_oNUUdW6cEeSZe_WBkuFUeQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_oT0lEW6cEeSZe_WBkuFUeQ" value="CritterUnitTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_oT0lEm6cEeSZe_WBkuFUeQ" value="EngineTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_oT0lE26cEeSZe_WBkuFUeQ" value="MapUnitTests.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNWJoG6cEeSZe_WBkuFUeQ" base_Element="_oNVikG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNWJoW6cEeSZe_WBkuFUeQ" base_Element="_oNVikG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNWJom6cEeSZe_WBkuFUeQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNWwsW6cEeSZe_WBkuFUeQ" base_Element="_oNWwsG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNXXwG6cEeSZe_WBkuFUeQ" base_Element="_oNWwsG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNXXwW6cEeSZe_WBkuFUeQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNX-0W6cEeSZe_WBkuFUeQ" base_Element="_oNX-0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNX-0m6cEeSZe_WBkuFUeQ" base_Element="_oNX-0G6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNYl4G6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNYl4m6cEeSZe_WBkuFUeQ" base_Element="_oNYl4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNYl426cEeSZe_WBkuFUeQ" base_Element="_oNYl4W6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNYl5G6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNZM8W6cEeSZe_WBkuFUeQ" base_Element="_oNZM8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNZM8m6cEeSZe_WBkuFUeQ" base_Element="_oNZM8G6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNZM826cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNZ0AG6cEeSZe_WBkuFUeQ" base_Element="_oNZM9G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNZ0AW6cEeSZe_WBkuFUeQ" base_Element="_oNZM9G6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNZ0Am6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNZ0BG6cEeSZe_WBkuFUeQ" base_Element="_oNZ0A26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNabEG6cEeSZe_WBkuFUeQ" base_Element="_oNZ0A26cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNabEW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNabE26cEeSZe_WBkuFUeQ" base_Element="_oNabEm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNabFG6cEeSZe_WBkuFUeQ" base_Element="_oNabEm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNabFW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNbCIW6cEeSZe_WBkuFUeQ" base_Element="_oNbCIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNbCIm6cEeSZe_WBkuFUeQ" base_Element="_oNbCIG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNbCI26cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNeFcW6cEeSZe_WBkuFUeQ" base_Element="_oNeFcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNeFcm6cEeSZe_WBkuFUeQ" base_Element="_oNeFcG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNeFc26cEeSZe_WBkuFUeQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNesgW6cEeSZe_WBkuFUeQ" base_Element="_oNesgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNesgm6cEeSZe_WBkuFUeQ" base_Element="_oNesgG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNesg26cEeSZe_WBkuFUeQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNfTkW6cEeSZe_WBkuFUeQ" base_Element="_oNfTkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNfTkm6cEeSZe_WBkuFUeQ" base_Element="_oNfTkG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNfTk26cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNf6oW6cEeSZe_WBkuFUeQ" base_Element="_oNf6oG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNf6om6cEeSZe_WBkuFUeQ" base_Element="_oNf6oG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNf6o26cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNghsG6cEeSZe_WBkuFUeQ" base_Element="_oNf6pG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNghsW6cEeSZe_WBkuFUeQ" base_Element="_oNf6pG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNghsm6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNghtG6cEeSZe_WBkuFUeQ" base_Element="_oNghs26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNhIwG6cEeSZe_WBkuFUeQ" base_Element="_oNghs26cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNhIwW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNjlAW6cEeSZe_WBkuFUeQ" base_Element="_oNjlAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNjlAm6cEeSZe_WBkuFUeQ" base_Element="_oNjlAG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNkMEG6cEeSZe_WBkuFUeQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNkMEm6cEeSZe_WBkuFUeQ" base_Element="_oNkMEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNkME26cEeSZe_WBkuFUeQ" base_Element="_oNkMEW6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNkMFG6cEeSZe_WBkuFUeQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNkzIW6cEeSZe_WBkuFUeQ" base_Element="_oNkzIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNlaMG6cEeSZe_WBkuFUeQ" base_Element="_oNkzIG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNlaMW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNlaM26cEeSZe_WBkuFUeQ" base_Element="_oNlaMm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNlaNG6cEeSZe_WBkuFUeQ" base_Element="_oNlaMm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNlaNW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNmBQG6cEeSZe_WBkuFUeQ" base_Element="_oNlaNm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNmBQW6cEeSZe_WBkuFUeQ" base_Element="_oNlaNm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNmBQm6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNmBRG6cEeSZe_WBkuFUeQ" base_Element="_oNmBQ26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNmoUG6cEeSZe_WBkuFUeQ" base_Element="_oNmBQ26cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNmoUW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNmoU26cEeSZe_WBkuFUeQ" base_Element="_oNmoUm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNmoVG6cEeSZe_WBkuFUeQ" base_Element="_oNmoUm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oNmoVW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oN0DsG6cEeSZe_WBkuFUeQ" base_Element="_oNzcoG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oOQIkW6cEeSZe_WBkuFUeQ" base_Element="_oOQIkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRWf4W6cEeSZe_WBkuFUeQ" base_Element="_oRWf4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRXG8W6cEeSZe_WBkuFUeQ" base_Element="_oRXG8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRXuAG6cEeSZe_WBkuFUeQ" base_Element="_oRXG8m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRYVEG6cEeSZe_WBkuFUeQ" base_Element="_oRXuAW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRY8IG6cEeSZe_WBkuFUeQ" base_Element="_oRYVEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRY8Im6cEeSZe_WBkuFUeQ" base_Element="_oRY8IW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRcmgG6cEeSZe_WBkuFUeQ" base_Element="_oRb_cG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRfCwG6cEeSZe_WBkuFUeQ" base_Element="_oRebtG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRfp0G6cEeSZe_WBkuFUeQ" base_Element="_oRfCwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRg38W6cEeSZe_WBkuFUeQ" base_Element="_oRg38G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRhfAW6cEeSZe_WBkuFUeQ" base_Element="_oRhfAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRiGEW6cEeSZe_WBkuFUeQ" base_Element="_oRiGEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRitIG6cEeSZe_WBkuFUeQ" base_Element="_oRiGEm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRjUMG6cEeSZe_WBkuFUeQ" base_Element="_oRitIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRj7QG6cEeSZe_WBkuFUeQ" base_Element="_oRjUMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRkiUG6cEeSZe_WBkuFUeQ" base_Element="_oRj7QW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRkiUm6cEeSZe_WBkuFUeQ" base_Element="_oRkiUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRlJYW6cEeSZe_WBkuFUeQ" base_Element="_oRlJYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oRqo8G6cEeSZe_WBkuFUeQ" base_Element="_oRqB4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSE4oW6cEeSZe_WBkuFUeQ" base_Element="_oSE4oG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSJxIW6cEeSZe_WBkuFUeQ" base_Element="_oSJxIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSKYMG6cEeSZe_WBkuFUeQ" base_Element="_oSJxIm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSKYMm6cEeSZe_WBkuFUeQ" base_Element="_oSKYMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSK_QW6cEeSZe_WBkuFUeQ" base_Element="_oSK_QG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSK_Q26cEeSZe_WBkuFUeQ" base_Element="_oSK_Qm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSLmUW6cEeSZe_WBkuFUeQ" base_Element="_oSLmUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSMNYG6cEeSZe_WBkuFUeQ" base_Element="_oSLmUm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSMNYm6cEeSZe_WBkuFUeQ" base_Element="_oSMNYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSM0cG6cEeSZe_WBkuFUeQ" base_Element="_oSMNY26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSM0cm6cEeSZe_WBkuFUeQ" base_Element="_oSM0cW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSNbgG6cEeSZe_WBkuFUeQ" base_Element="_oSM0c26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSNbgm6cEeSZe_WBkuFUeQ" base_Element="_oSNbgW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSOCkW6cEeSZe_WBkuFUeQ" base_Element="_oSOCkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSWlcW6cEeSZe_WBkuFUeQ" base_Element="_oSWlcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSgWcG6cEeSZe_WBkuFUeQ" base_Element="_oSfvYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSkA0W6cEeSZe_WBkuFUeQ" base_Element="_oSkA0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oSkn4G6cEeSZe_WBkuFUeQ" base_Element="_oSkA0m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oSlO8G6cEeSZe_WBkuFUeQ" base_Element="_oSkA0m6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oSlO8W6cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oSqHcG6cEeSZe_WBkuFUeQ" base_Element="_oSpgYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oStKw26cEeSZe_WBkuFUeQ" base_Element="_oStKwG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oStKxG6cEeSZe_WBkuFUeQ" base_Element="_oStKwG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oStx0G6cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oSw1IG6cEeSZe_WBkuFUeQ" base_Element="_oSwOEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oSxcMW6cEeSZe_WBkuFUeQ" base_Element="_oSxcMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oSz4cW6cEeSZe_WBkuFUeQ" base_Element="_oSzRYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_oSz4cm6cEeSZe_WBkuFUeQ" base_Element="_oSzRYG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_oSz4c26cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oS0fgW6cEeSZe_WBkuFUeQ" base_Element="_oS0fgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS9CYW6cEeSZe_WBkuFUeQ" base_Element="_oS9CYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS9pcW6cEeSZe_WBkuFUeQ" base_Element="_oS9pcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS9pc26cEeSZe_WBkuFUeQ" base_Element="_oS9pcm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS-QgW6cEeSZe_WBkuFUeQ" base_Element="_oS-QgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS-Qg26cEeSZe_WBkuFUeQ" base_Element="_oS-Qgm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oS-3kG6cEeSZe_WBkuFUeQ" base_Property="_oS-QhG6cEeSZe_WBkuFUeQ" siblings="_oT1MIG6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS-3kW6cEeSZe_WBkuFUeQ" base_Element="_oS-QhG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS_eoG6cEeSZe_WBkuFUeQ" base_Element="_oS-3km6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS_eo26cEeSZe_WBkuFUeQ" base_Element="_oS_eoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTAFsG6cEeSZe_WBkuFUeQ" base_Element="_oS_epG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTAFs26cEeSZe_WBkuFUeQ" base_Element="_oTAFsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTAswm6cEeSZe_WBkuFUeQ" base_Element="_oTAswG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oTAsxG6cEeSZe_WBkuFUeQ" base_Property="_oTAsw26cEeSZe_WBkuFUeQ" siblings="_oT1zMW6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTBT0G6cEeSZe_WBkuFUeQ" base_Element="_oTAsw26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oTBT0m6cEeSZe_WBkuFUeQ" base_Property="_oTBT0W6cEeSZe_WBkuFUeQ" siblings="_oT1zNG6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTBT026cEeSZe_WBkuFUeQ" base_Element="_oTBT0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTB64W6cEeSZe_WBkuFUeQ" base_Element="_oTB64G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTCh8G6cEeSZe_WBkuFUeQ" base_Element="_oTB64m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTCh826cEeSZe_WBkuFUeQ" base_Element="_oTCh8W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTCh9W6cEeSZe_WBkuFUeQ" base_Element="_oTCh9G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTDJAm6cEeSZe_WBkuFUeQ" base_Element="_oTDJAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTDwEG6cEeSZe_WBkuFUeQ" base_Element="_oTDJA26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTDwE26cEeSZe_WBkuFUeQ" base_Element="_oTDwEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTEXIG6cEeSZe_WBkuFUeQ" base_Element="_oTDwFG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTEXIm6cEeSZe_WBkuFUeQ" base_Element="_oTEXIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTE-MW6cEeSZe_WBkuFUeQ" base_Element="_oTE-MG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTFlQW6cEeSZe_WBkuFUeQ" base_Element="_oTFlQG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTGzYG6cEeSZe_WBkuFUeQ" base_Element="_oTGMVG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTGzYm6cEeSZe_WBkuFUeQ" base_Element="_oTGzYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTHacW6cEeSZe_WBkuFUeQ" base_Element="_oTHacG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTHac26cEeSZe_WBkuFUeQ" base_Element="_oTHacm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Array xmi:id="_oTIBgW6cEeSZe_WBkuFUeQ" dimensions="2" base_Element="_oTHadG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTIBgm6cEeSZe_WBkuFUeQ" base_Element="_oTHadG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Array xmi:id="_oTIokW6cEeSZe_WBkuFUeQ" dimensions="2" base_Element="_oTIBg26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTIokm6cEeSZe_WBkuFUeQ" base_Element="_oTIBg26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTIolG6cEeSZe_WBkuFUeQ" base_Element="_oTIok26cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_oTJPoW6cEeSZe_WBkuFUeQ" name="getPath" isStatic="true" method="_oTq0Fm6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_oTJPpG6cEeSZe_WBkuFUeQ" type="_oOFJcG6cEeSZe_WBkuFUeQ" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTJPpW6cEeSZe_WBkuFUeQ" value="*"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_oTJPom6cEeSZe_WBkuFUeQ" name="setPath" isStatic="true" method="_oTq0GW6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_oTJPo26cEeSZe_WBkuFUeQ" name="path" type="_oRitIW6cEeSZe_WBkuFUeQ"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_oTJ2sG6cEeSZe_WBkuFUeQ" genericsValue="Movement" base_Element="_oTJPo26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTKdwG6cEeSZe_WBkuFUeQ" base_Element="_oTJ2sW6cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_oTKdwm6cEeSZe_WBkuFUeQ" name="getHeight" method="_oTrbIG6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_oTLE0m6cEeSZe_WBkuFUeQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_oTLE0G6cEeSZe_WBkuFUeQ" name="setHeight" method="_oTrbIm6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_oTLE0W6cEeSZe_WBkuFUeQ" name="newHeight">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_oTKdwW6cEeSZe_WBkuFUeQ" base_Property="_oTJ2sW6cEeSZe_WBkuFUeQ" siblings="_oT3oY26cEeSZe_WBkuFUeQ _oT3oZm6cEeSZe_WBkuFUeQ _oT4Pcm6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTLr4W6cEeSZe_WBkuFUeQ" base_Element="_oTLr4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTMS8G6cEeSZe_WBkuFUeQ" base_Element="_oTLr4m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTMS8m6cEeSZe_WBkuFUeQ" base_Element="_oTMS8W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTM6AG6cEeSZe_WBkuFUeQ" base_Element="_oTMS826cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTM6A26cEeSZe_WBkuFUeQ" base_Element="_oTM6AW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTNhEW6cEeSZe_WBkuFUeQ" base_Element="_oTM6BG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTNhE26cEeSZe_WBkuFUeQ" base_Element="_oTNhEm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTOIIG6cEeSZe_WBkuFUeQ" base_Element="_oTNhFG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTOIIm6cEeSZe_WBkuFUeQ" base_Element="_oTOIIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTOvMG6cEeSZe_WBkuFUeQ" base_Element="_oTOII26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTOvMm6cEeSZe_WBkuFUeQ" base_Element="_oTOvMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTPWQG6cEeSZe_WBkuFUeQ" base_Element="_oTOvM26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTPWQm6cEeSZe_WBkuFUeQ" base_Element="_oTPWQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTP9UG6cEeSZe_WBkuFUeQ" base_Element="_oTPWQ26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTP9Um6cEeSZe_WBkuFUeQ" base_Element="_oTP9UW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTQkYG6cEeSZe_WBkuFUeQ" base_Element="_oTP9U26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTQkYm6cEeSZe_WBkuFUeQ" base_Element="_oTQkYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTRLcG6cEeSZe_WBkuFUeQ" base_Element="_oTQkY26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTRLcm6cEeSZe_WBkuFUeQ" base_Element="_oTRLcW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTRyg26cEeSZe_WBkuFUeQ" base_Element="_oTRygG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTSZkW6cEeSZe_WBkuFUeQ" base_Element="_oTRyhG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTSZk26cEeSZe_WBkuFUeQ" base_Element="_oTSZkm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTTAoG6cEeSZe_WBkuFUeQ" base_Element="_oTSZlG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTTAom6cEeSZe_WBkuFUeQ" base_Element="_oTTAoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTTnsG6cEeSZe_WBkuFUeQ" base_Element="_oTTAo26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTTns26cEeSZe_WBkuFUeQ" base_Element="_oTTnsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTUOwG6cEeSZe_WBkuFUeQ" base_Element="_oTTntG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTUOwm6cEeSZe_WBkuFUeQ" base_Element="_oTUOwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTU10W6cEeSZe_WBkuFUeQ" base_Element="_oTUOw26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTU11G6cEeSZe_WBkuFUeQ" base_Element="_oTU10m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTVc4W6cEeSZe_WBkuFUeQ" base_Element="_oTU11W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTVc5G6cEeSZe_WBkuFUeQ" base_Element="_oTVc4m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTWD8W6cEeSZe_WBkuFUeQ" base_Element="_oTVc5W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTWD9G6cEeSZe_WBkuFUeQ" base_Element="_oTWD8m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTWrAm6cEeSZe_WBkuFUeQ" base_Element="_oTWrAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTWrBW6cEeSZe_WBkuFUeQ" base_Element="_oTWrA26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oTXSEm6cEeSZe_WBkuFUeQ" base_Property="_oTXSEG6cEeSZe_WBkuFUeQ" siblings="_oT5dlW6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTXSE26cEeSZe_WBkuFUeQ" base_Element="_oTXSEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTX5IG6cEeSZe_WBkuFUeQ" base_Element="_oTXSFG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTX5Im6cEeSZe_WBkuFUeQ" base_Element="_oTX5IW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTYgMG6cEeSZe_WBkuFUeQ" base_Element="_oTX5I26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTYgMm6cEeSZe_WBkuFUeQ" base_Element="_oTYgMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTZHQG6cEeSZe_WBkuFUeQ" base_Element="_oTYgM26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTZHQm6cEeSZe_WBkuFUeQ" base_Element="_oTZHQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTZuUG6cEeSZe_WBkuFUeQ" base_Element="_oTZHQ26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTZuUm6cEeSZe_WBkuFUeQ" base_Element="_oTZuUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTZuVG6cEeSZe_WBkuFUeQ" base_Element="_oTZuU26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTaVYm6cEeSZe_WBkuFUeQ" base_Element="_oTaVYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTaVZW6cEeSZe_WBkuFUeQ" base_Element="_oTaVY26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTa8cm6cEeSZe_WBkuFUeQ" base_Element="_oTa8cG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTbjgG6cEeSZe_WBkuFUeQ" base_Element="_oTa8c26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTbjg26cEeSZe_WBkuFUeQ" base_Element="_oTbjgW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTcKkG6cEeSZe_WBkuFUeQ" base_Element="_oTbjhG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTcKk26cEeSZe_WBkuFUeQ" base_Element="_oTcKkW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTcxoG6cEeSZe_WBkuFUeQ" base_Element="_oTcKlG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTcxo26cEeSZe_WBkuFUeQ" base_Element="_oTcxoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTdYsW6cEeSZe_WBkuFUeQ" base_Element="_oTcxpG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTdYtG6cEeSZe_WBkuFUeQ" base_Element="_oTdYsm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTem0G6cEeSZe_WBkuFUeQ" base_Element="_oTd_wG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTem0m6cEeSZe_WBkuFUeQ" base_Element="_oTem0W6cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_oTem026cEeSZe_WBkuFUeQ" name="getY" method="_oTxhwG6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_oTfN4G6cEeSZe_WBkuFUeQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTfN4m6cEeSZe_WBkuFUeQ" base_Element="_oTfN4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTf08G6cEeSZe_WBkuFUeQ" base_Element="_oTfN426cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTf0826cEeSZe_WBkuFUeQ" base_Element="_oTf08W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTgcAG6cEeSZe_WBkuFUeQ" base_Element="_oTf09G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oThDEG6cEeSZe_WBkuFUeQ" base_Element="_oTgcBW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oThDE26cEeSZe_WBkuFUeQ" base_Element="_oThDEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oThqIW6cEeSZe_WBkuFUeQ" base_Element="_oThDFG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTiRMG6cEeSZe_WBkuFUeQ" base_Element="_oThqI26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTiRM26cEeSZe_WBkuFUeQ" base_Element="_oTiRMm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTi4QW6cEeSZe_WBkuFUeQ" base_Element="_oTiRNG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTi4Q26cEeSZe_WBkuFUeQ" base_Element="_oTi4Qm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTjfUG6cEeSZe_WBkuFUeQ" base_Element="_oTi4RG6cEeSZe_WBkuFUeQ"/>
  <uml:OpaqueBehavior xmi:id="_oTq0Fm6cEeSZe_WBkuFUeQ" name="getPath" specification="_oTJPoW6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_oTq0F26cEeSZe_WBkuFUeQ" type="_oOFJcG6cEeSZe_WBkuFUeQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTq0GG6cEeSZe_WBkuFUeQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return Path;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_oTq0GW6cEeSZe_WBkuFUeQ" name="setPath" specification="_oTJPom6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_oTq0Gm6cEeSZe_WBkuFUeQ" name="path" type="_oRitIW6cEeSZe_WBkuFUeQ"/>
    <language>java</language>
    <body>Path = path;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_oTrbIG6cEeSZe_WBkuFUeQ" name="getHeight" specification="_oTKdwm6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_oTrbIW6cEeSZe_WBkuFUeQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.Height;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_oTrbIm6cEeSZe_WBkuFUeQ" name="setHeight" specification="_oTLE0G6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_oTrbI26cEeSZe_WBkuFUeQ" name="newHeight">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>this.Height = newHeight;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_oTxhwG6cEeSZe_WBkuFUeQ" name="getY" specification="_oTem026cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_oTxhwW6cEeSZe_WBkuFUeQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return (int) this.y;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_oT1MIW6cEeSZe_WBkuFUeQ" base_Property="_oT1MIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT1MIm6cEeSZe_WBkuFUeQ" base_Element="_oT1MIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oT1zMm6cEeSZe_WBkuFUeQ" base_Property="_oT1zMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT1zM26cEeSZe_WBkuFUeQ" base_Element="_oT1zMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oT1zNW6cEeSZe_WBkuFUeQ" base_Property="_oT1zNG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT2aQG6cEeSZe_WBkuFUeQ" base_Element="_oT1zNG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oT3oZG6cEeSZe_WBkuFUeQ" base_Property="_oT3oY26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT3oZW6cEeSZe_WBkuFUeQ" base_Element="_oT3oY26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oT4PcG6cEeSZe_WBkuFUeQ" base_Property="_oT3oZm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT4PcW6cEeSZe_WBkuFUeQ" base_Element="_oT3oZm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oT4Pc26cEeSZe_WBkuFUeQ" base_Property="_oT4Pcm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT4PdG6cEeSZe_WBkuFUeQ" base_Element="_oT4Pcm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_oT5dlm6cEeSZe_WBkuFUeQ" base_Property="_oT5dlW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT6EoG6cEeSZe_WBkuFUeQ" base_Element="_oT5dlW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUD1om6cEeSZe_WBkuFUeQ" base_Element="_oUD1oG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUEcsm6cEeSZe_WBkuFUeQ" base_Element="_oUEcsG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUFDwG6cEeSZe_WBkuFUeQ" base_Element="_oUEcs26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUFDw26cEeSZe_WBkuFUeQ" base_Element="_oUFDwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUFq0G6cEeSZe_WBkuFUeQ" base_Element="_oUFDxG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUFq026cEeSZe_WBkuFUeQ" base_Element="_oUFq0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUGR4G6cEeSZe_WBkuFUeQ" base_Element="_oUFq1G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUGR426cEeSZe_WBkuFUeQ" base_Element="_oUGR4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUG48W6cEeSZe_WBkuFUeQ" base_Element="_oUGR5G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUHgAG6cEeSZe_WBkuFUeQ" base_Element="_oUG48m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUHgA26cEeSZe_WBkuFUeQ" base_Element="_oUHgAW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUIHEG6cEeSZe_WBkuFUeQ" base_Element="_oUHgBG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUIHE26cEeSZe_WBkuFUeQ" base_Element="_oUIHEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUIuIG6cEeSZe_WBkuFUeQ" base_Element="_oUIHFG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUIuI26cEeSZe_WBkuFUeQ" base_Element="_oUIuIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUJVMG6cEeSZe_WBkuFUeQ" base_Element="_oUIuJG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUJVM26cEeSZe_WBkuFUeQ" base_Element="_oUJVMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUJ8Qm6cEeSZe_WBkuFUeQ" base_Element="_oUJ8QG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUKjUG6cEeSZe_WBkuFUeQ" base_Element="_oUJ8Q26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUKjU26cEeSZe_WBkuFUeQ" base_Element="_oUKjUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oULKYG6cEeSZe_WBkuFUeQ" base_Element="_oUKjVG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oULKY26cEeSZe_WBkuFUeQ" base_Element="_oULKYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oULxcG6cEeSZe_WBkuFUeQ" base_Element="_oULKZG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oULxc26cEeSZe_WBkuFUeQ" base_Element="_oULxcW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUMYgm6cEeSZe_WBkuFUeQ" base_Element="_oUMYgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUM_kG6cEeSZe_WBkuFUeQ" base_Element="_oUMYg26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUM_k26cEeSZe_WBkuFUeQ" base_Element="_oUM_kW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUNmom6cEeSZe_WBkuFUeQ" base_Element="_oUNmoG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUONsG6cEeSZe_WBkuFUeQ" base_Element="_oUNmo26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUONs26cEeSZe_WBkuFUeQ" base_Element="_oUONsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUO0wG6cEeSZe_WBkuFUeQ" base_Element="_oUONtG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUPb0G6cEeSZe_WBkuFUeQ" base_Element="_oUO0wW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUPb026cEeSZe_WBkuFUeQ" base_Element="_oUPb0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUQC4G6cEeSZe_WBkuFUeQ" base_Element="_oUPb1G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUQC426cEeSZe_WBkuFUeQ" base_Element="_oUQC4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUQp8G6cEeSZe_WBkuFUeQ" base_Element="_oUQC5G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUQp826cEeSZe_WBkuFUeQ" base_Element="_oUQp8W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oURRAm6cEeSZe_WBkuFUeQ" base_Element="_oURRAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUR4Em6cEeSZe_WBkuFUeQ" base_Element="_oUR4EG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUSfIG6cEeSZe_WBkuFUeQ" base_Element="_oUR4E26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUTGMG6cEeSZe_WBkuFUeQ" base_Element="_oUSfIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUTGM26cEeSZe_WBkuFUeQ" base_Element="_oUTGMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUTtQG6cEeSZe_WBkuFUeQ" base_Element="_oUTGNG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUTtQ26cEeSZe_WBkuFUeQ" base_Element="_oUTtQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUUUUG6cEeSZe_WBkuFUeQ" base_Element="_oUTtRG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUUUU26cEeSZe_WBkuFUeQ" base_Element="_oUUUUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUU7YG6cEeSZe_WBkuFUeQ" base_Element="_oUUUVG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUU7Y26cEeSZe_WBkuFUeQ" base_Element="_oUU7YW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUVicm6cEeSZe_WBkuFUeQ" base_Element="_oUVicG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUX-sG6cEeSZe_WBkuFUeQ" base_Element="_oUVic26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUYlwm6cEeSZe_WBkuFUeQ" base_Element="_oUYlwG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUZM0G6cEeSZe_WBkuFUeQ" base_Element="_oUYlw26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUZM026cEeSZe_WBkuFUeQ" base_Element="_oUZM0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUZz4m6cEeSZe_WBkuFUeQ" base_Element="_oUZz4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUaa8G6cEeSZe_WBkuFUeQ" base_Element="_oUZz426cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_oUaa826cEeSZe_WBkuFUeQ" base_Element="_oUaa8W6cEeSZe_WBkuFUeQ"/>
</xmi:XMI>
