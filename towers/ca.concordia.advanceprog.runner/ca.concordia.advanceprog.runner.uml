<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_RLA2cG6cEeSZe_WBkuFUeQ" name="ca_concordia_advanceprog_runner">
    <eAnnotations xmi:id="_Ra_zMG6cEeSZe_WBkuFUeQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_Ra_zMW6cEeSZe_WBkuFUeQ" source="codegen">
        <details xmi:id="_Ra_zMm6cEeSZe_WBkuFUeQ" key="codegenDirectory" value="/ca.concordia.advanceprog.runner/src"/>
        <details xmi:id="_UMS2IG6cEeSZe_WBkuFUeQ" key="AssociatedSourceCode" value="/ca.concordia.advanceprog.runner/src/TestSuite.java;2504054059/1;/ca.concordia.advanceprog.runner/src/Tests/CritterUnitTests.java;1615053276/1;/ca.concordia.advanceprog.runner/src/Tests/EngineTest.java;791026238/1;/ca.concordia.advanceprog.runner/src/Tests/MapUnitTests.java;3184550476/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/TowerType.java;1070661429/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/HighLevelCritter.java;436681763/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/LowLevelCritter.java;2317785255/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/MediumLevelCritter.java;3921663185/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/engine/ButtonHandler.java;555693658/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/TowerStrategy.java;2251473269/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Status.java;1957996985/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Cell.java;3616077033/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Movement.java;2405399563/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/MapGenerator.java;2624886656/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Map.java;571131677/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/runner/Runner.java;241997172/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Surface.java;2831536314/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/ui/Tower.java;3619510530/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/engine/Engine.java;1609698736/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/elements/Critter.java;1257379271/1;/ca.concordia.advanceprog.runner/src/ca/concordia/advanceprog/util/Utility.java;2447615272/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_SF_Q8G6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_SF_4AG6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_SF_4AW6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_SF_4Am6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_SF_4A26cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_SF_4BG6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_SGAfEG6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_SGAfEW6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_SGBGIG6cEeSZe_WBkuFUeQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_SF6YcG6cEeSZe_WBkuFUeQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_SF7mkG6cEeSZe_WBkuFUeQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_SF8NoG6cEeSZe_WBkuFUeQ" name="runner"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_SF-C0G6cEeSZe_WBkuFUeQ" name="runners">
          <packagedElement xmi:type="uml:Package" xmi:id="_SF-C0W6cEeSZe_WBkuFUeQ" name="Suite">
            <packagedElement xmi:type="uml:Interface" xmi:id="_SUMsEW6cEeSZe_WBkuFUeQ" name="SuiteClasses"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_SUKP0G6cEeSZe_WBkuFUeQ" name="Suite"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_SUPvYG6cEeSZe_WBkuFUeQ" name="Assert"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SUSysG6cEeSZe_WBkuFUeQ" name="Before"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SUUn4W6cEeSZe_WBkuFUeQ" name="BeforeClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SUXrMG6cEeSZe_WBkuFUeQ" name="Test"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SGBtMG6cEeSZe_WBkuFUeQ" name="Tests">
      <packagedElement xmi:type="uml:Class" xmi:id="_SJJ5sG6cEeSZe_WBkuFUeQ" name="CritterUnitTests">
        <ownedComment xmi:id="_SYnSA26cEeSZe_WBkuFUeQ">
          <body>*</body>
        </ownedComment>
        <ownedAttribute xmi:id="_SXKggG6cEeSZe_WBkuFUeQ" name="runner" visibility="package" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_SZD98G6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SXLuoW6cEeSZe_WBkuFUeQ" name="mp" visibility="private" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_SZFzIW6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SXM8wW6cEeSZe_WBkuFUeQ" name="critter1" visibility="private" type="_SUaHcW6cEeSZe_WBkuFUeQ" association="_SZI2cG6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SXOK4G6cEeSZe_WBkuFUeQ" name="critter2" visibility="package" type="_SUaHcW6cEeSZe_WBkuFUeQ" association="_SZLSsW6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SXOx8W6cEeSZe_WBkuFUeQ" name="a" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SXQAEW6cEeSZe_WBkuFUeQ" name="tc1" visibility="private" type="_SU4okW6cEeSZe_WBkuFUeQ" association="_SZOWAW6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SYn5EG6cEeSZe_WBkuFUeQ" name="tc2" visibility="private" type="_SU4okW6cEeSZe_WBkuFUeQ" association="_SZnXkW6cEeSZe_WBkuFUeQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYAOAG6cEeSZe_WBkuFUeQ" name="setUp" specification="_SJTDoG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>mp = new Map(15, 15);&#xD;
		critter1 = Critter.createCritter(mp, 0, 0, 1);&#xD;
		&#xD;
		//critter2 = Critter.createCritter(mp, 0, 0, 1);&#xD;
		tc1 = new Tower(1, 1, 1, 100, 200);&#xD;
		tc2 = new Tower(10, 10, 1, 100, 200);&#xD;
		runner.TOWERS.add(tc1);&#xD;
		runner.TOWERS.add(tc2);&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYBcIG6cEeSZe_WBkuFUeQ" name="critterNotMoveBack" specification="_SJWG8G6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertFalse(critter1.proceedToMove(0, 0));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYCDMG6cEeSZe_WBkuFUeQ" name="checkCritterDontHaveMovementForStart" specification="_SJXVEm6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertFalse(critter1.isDown() || critter1.isUp() || critter1.isLeft()&#xD;
				|| critter1.isRight());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYCDMW6cEeSZe_WBkuFUeQ" name="checkCritterWithinTowerRangeGetsShot" specification="_SJZKQm6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>critter1 = Critter.createCritter(mp, 0, 0, 1);&#xD;
		a = critter1.getExistingLife();&#xD;
		System.out.println(a);&#xD;
		mp.Data[0][1] = Map.TOWER;&#xD;
		assertNotEquals(a, 100);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYDRUG6cEeSZe_WBkuFUeQ" name="checkTower" specification="_SJa_cG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(Map.TOWER, mp.Data[1][1]);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYDRUW6cEeSZe_WBkuFUeQ" name="critterIsInRange" specification="_SJc0oG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(true, tc1.checkIfIsinTheAreaOfTower(mp,&#xD;
				((int) critter1.getX()) * 20, ((int) critter1.getY()) * 20));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYD4YG6cEeSZe_WBkuFUeQ" name="critterIsNotInRange" specification="_SJep0G6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(false, tc2.checkIfIsinTheAreaOfTower(mp,&#xD;
				((int) critter1.getX()) * 20, ((int) critter1.getY()) * 20));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYEfcG6cEeSZe_WBkuFUeQ" name="improveTowerLevelCheck" specification="_SJgfAW6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>tc1.improveLevel();&#xD;
		assertEquals(tc1.CurrentAmount, 150);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_SJOyMG6cEeSZe_WBkuFUeQ" name="setUpBeforeClass" isStatic="true" raisedException="_SWIlwW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJTDoG6cEeSZe_WBkuFUeQ" name="setUp" method="_SYAOAG6cEeSZe_WBkuFUeQ" raisedException="_SWIlwW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJWG8G6cEeSZe_WBkuFUeQ" name="critterNotMoveBack" method="_SYBcIG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJXVEm6cEeSZe_WBkuFUeQ" name="checkCritterDontHaveMovementForStart" method="_SYCDMG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJZKQm6cEeSZe_WBkuFUeQ" name="checkCritterWithinTowerRangeGetsShot" method="_SYCDMW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJa_cG6cEeSZe_WBkuFUeQ" name="checkTower" method="_SYDRUG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJc0oG6cEeSZe_WBkuFUeQ" name="critterIsInRange" method="_SYDRUW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJep0G6cEeSZe_WBkuFUeQ" name="critterIsNotInRange" method="_SYD4YG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJgfAW6cEeSZe_WBkuFUeQ" name="improveTowerLevelCheck" method="_SYEfcG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_SJyL0G6cEeSZe_WBkuFUeQ" name="EngineTest">
        <ownedAttribute xmi:id="_SXZKAG6cEeSZe_WBkuFUeQ" name="engine" visibility="private" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_SZSAYG6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SXaYIG6cEeSZe_WBkuFUeQ" name="MG" visibility="package" type="_SU2zYG6cEeSZe_WBkuFUeQ" association="_SZUcoW6cEeSZe_WBkuFUeQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_SXa_MG6cEeSZe_WBkuFUeQ" value="new MapGenerator(15, 15)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SXcNUG6cEeSZe_WBkuFUeQ" name="map" visibility="package" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_SZYHAG6cEeSZe_WBkuFUeQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_SXc0YG6cEeSZe_WBkuFUeQ" value="new Map(15,15)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SXeCgG6cEeSZe_WBkuFUeQ" name="tower" visibility="package" type="_SU4okW6cEeSZe_WBkuFUeQ" association="_SZbxYG6cEeSZe_WBkuFUeQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_SXepkG6cEeSZe_WBkuFUeQ" value="new Tower(3, 3, 1, 100, 200)"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYIw4G6cEeSZe_WBkuFUeQ" name="setUp" specification="_SJ4ScG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>map.setMapGenerator(MG);&#xD;
		engine = Engine.initialEngine(map,true);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYJX8G6cEeSZe_WBkuFUeQ" name="initialMoney" specification="_SJ6usG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(Engine.MONEY, 1000);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYJ_AG6cEeSZe_WBkuFUeQ" name="checkMapAssingment" specification="_SJ8j4G6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertArrayEquals(Engine.MAP.Data, map.Data);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYKmEG6cEeSZe_WBkuFUeQ" name="checkInitWave" specification="_SJ9yAG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(engine.gameLevelandNumberofCritters,1);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_SJ12MG6cEeSZe_WBkuFUeQ" name="setUpBeforeClass" isStatic="true" raisedException="_SWIlwW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJ4ScG6cEeSZe_WBkuFUeQ" name="setUp" method="_SYIw4G6cEeSZe_WBkuFUeQ" raisedException="_SWIlwW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJ6usG6cEeSZe_WBkuFUeQ" name="initialMoney" method="_SYJX8G6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJ8j4G6cEeSZe_WBkuFUeQ" name="checkMapAssingment" method="_SYJ_AG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJ9yAG6cEeSZe_WBkuFUeQ" name="checkInitWave" method="_SYKmEG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SJ_AIm6cEeSZe_WBkuFUeQ" name="moneyDeposit"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_SKOQsG6cEeSZe_WBkuFUeQ" name="MapUnitTests">
        <ownedComment xmi:id="_SYt_sG6cEeSZe_WBkuFUeQ">
          <body>*</body>
        </ownedComment>
        <ownedAttribute xmi:id="_SXjiEG6cEeSZe_WBkuFUeQ" name="m1" visibility="package" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_SZeNoG6cEeSZe_WBkuFUeQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_SXkJIG6cEeSZe_WBkuFUeQ" value="new Map(15, 15)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_SXl-UG6cEeSZe_WBkuFUeQ" name="mg1" visibility="package" type="_SU2zYG6cEeSZe_WBkuFUeQ" association="_SZh4AG6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SXoakG6cEeSZe_WBkuFUeQ" name="m2" visibility="package" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_SZkUQW6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SYvN0G6cEeSZe_WBkuFUeQ" name="mg2" visibility="package" type="_SU2zYG6cEeSZe_WBkuFUeQ" association="_SZyWsW6cEeSZe_WBkuFUeQ"/>
        <ownedAttribute xmi:id="_SYwb8G6cEeSZe_WBkuFUeQ" name="m3" visibility="package" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_SZ0y8W6cEeSZe_WBkuFUeQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYO3gG6cEeSZe_WBkuFUeQ" name="setUp" specification="_SKTwQG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>mg1 = m1.MapGenerator;&#xD;
		m2 = new Map(15, 15, m1.MapGenerator);&#xD;
		mg1.SaveMap(&quot;test.mp&quot;);&#xD;
		mg2 = new MapGenerator(&quot;test.mp&quot;, 15, 15);&#xD;
		m3 = new Map(15, 15, mg2);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYPekG6cEeSZe_WBkuFUeQ" name="MapConstructor" specification="_SKVlcG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertArrayEquals(m1.Data, m2.Data);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYQFoG6cEeSZe_WBkuFUeQ" name="EntryPoint" specification="_SKWzkm6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertEquals(0, m1.Data[0][0]);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYQssG6cEeSZe_WBkuFUeQ" name="DataPathCorrelation" specification="_SKYBsm6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>if (m1.MapGenerator.getPath().get(0) == Movement.Down)&#xD;
			assertEquals(0, m1.Data[1][0]);&#xD;
		else&#xD;
			// Path.get(0) == Movement.Right&#xD;
			assertEquals(0, m1.Data[0][1]);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYQssW6cEeSZe_WBkuFUeQ" name="PathCopyCheck" specification="_SKZP0m6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>for (int i = 0; i &lt;= 10; i++)&#xD;
			assertEquals(m1.MapGenerator.getPath().get(i), m2.MapGenerator&#xD;
					.getPath().get(i));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYRTwG6cEeSZe_WBkuFUeQ" name="SaveLoadCheck" specification="_SKbsEG6cEeSZe_WBkuFUeQ">
          <language>java</language>
          <body>assertArrayEquals(m1.Data, m3.Data);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_SKRUAG6cEeSZe_WBkuFUeQ" name="setUpBeforeClass" isStatic="true" raisedException="_SWIlwW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SKTwQG6cEeSZe_WBkuFUeQ" name="setUp" method="_SYO3gG6cEeSZe_WBkuFUeQ" raisedException="_SWIlwW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SKVlcG6cEeSZe_WBkuFUeQ" name="MapConstructor" method="_SYPekG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SKWzkm6cEeSZe_WBkuFUeQ" name="EntryPoint" method="_SYQFoG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SKYBsm6cEeSZe_WBkuFUeQ" name="DataPathCorrelation" method="_SYQssG6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SKZP0m6cEeSZe_WBkuFUeQ" name="PathCopyCheck" method="_SYQssW6cEeSZe_WBkuFUeQ"/>
        <ownedOperation xmi:id="_SKbsEG6cEeSZe_WBkuFUeQ" name="SaveLoadCheck" method="_SYRTwG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZD98G6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZD98W6cEeSZe_WBkuFUeQ _SXKggG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZD98W6cEeSZe_WBkuFUeQ" name="" type="_SJJ5sG6cEeSZe_WBkuFUeQ" association="_SZD98G6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZFzIW6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZFzIm6cEeSZe_WBkuFUeQ _SXLuoW6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZFzIm6cEeSZe_WBkuFUeQ" name="" type="_SJJ5sG6cEeSZe_WBkuFUeQ" association="_SZFzIW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZI2cG6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZI2cW6cEeSZe_WBkuFUeQ _SXM8wW6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZI2cW6cEeSZe_WBkuFUeQ" name="" type="_SJJ5sG6cEeSZe_WBkuFUeQ" association="_SZI2cG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZLSsW6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZLSsm6cEeSZe_WBkuFUeQ _SXOK4G6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZLSsm6cEeSZe_WBkuFUeQ" name="" type="_SJJ5sG6cEeSZe_WBkuFUeQ" association="_SZLSsW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZOWAW6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZOWAm6cEeSZe_WBkuFUeQ _SXQAEW6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZOWAm6cEeSZe_WBkuFUeQ" name="" type="_SJJ5sG6cEeSZe_WBkuFUeQ" association="_SZOWAW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZSAYG6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZSAYW6cEeSZe_WBkuFUeQ _SXZKAG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZSAYW6cEeSZe_WBkuFUeQ" name="" type="_SJyL0G6cEeSZe_WBkuFUeQ" association="_SZSAYG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZUcoW6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZUcom6cEeSZe_WBkuFUeQ _SXaYIG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZUcom6cEeSZe_WBkuFUeQ" name="" type="_SJyL0G6cEeSZe_WBkuFUeQ" association="_SZUcoW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZYHAG6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZYHAW6cEeSZe_WBkuFUeQ _SXcNUG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZYHAW6cEeSZe_WBkuFUeQ" name="" type="_SJyL0G6cEeSZe_WBkuFUeQ" association="_SZYHAG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZbxYG6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZbxYW6cEeSZe_WBkuFUeQ _SXeCgG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZbxYW6cEeSZe_WBkuFUeQ" name="" type="_SJyL0G6cEeSZe_WBkuFUeQ" association="_SZbxYG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZeNoG6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZeNoW6cEeSZe_WBkuFUeQ _SXjiEG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZeNoW6cEeSZe_WBkuFUeQ" name="" type="_SKOQsG6cEeSZe_WBkuFUeQ" association="_SZeNoG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZh4AG6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZh4AW6cEeSZe_WBkuFUeQ _SXl-UG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZh4AW6cEeSZe_WBkuFUeQ" name="" type="_SKOQsG6cEeSZe_WBkuFUeQ" association="_SZh4AG6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZkUQW6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZkUQm6cEeSZe_WBkuFUeQ _SXoakG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZkUQm6cEeSZe_WBkuFUeQ" name="" type="_SKOQsG6cEeSZe_WBkuFUeQ" association="_SZkUQW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZnXkW6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZnXkm6cEeSZe_WBkuFUeQ _SYn5EG6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZnXkm6cEeSZe_WBkuFUeQ" name="" type="_SJJ5sG6cEeSZe_WBkuFUeQ" association="_SZnXkW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZyWsW6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZyWsm6cEeSZe_WBkuFUeQ _SYvN0G6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZyWsm6cEeSZe_WBkuFUeQ" name="" type="_SKOQsG6cEeSZe_WBkuFUeQ" association="_SZyWsW6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_SZ0y8W6cEeSZe_WBkuFUeQ" name="" memberEnd="_SZ0y8m6cEeSZe_WBkuFUeQ _SYwb8G6cEeSZe_WBkuFUeQ">
        <ownedEnd xmi:id="_SZ0y8m6cEeSZe_WBkuFUeQ" name="" type="_SKOQsG6cEeSZe_WBkuFUeQ" association="_SZ0y8W6cEeSZe_WBkuFUeQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SGIa4G6cEeSZe_WBkuFUeQ" name="ca">
      <packagedElement xmi:type="uml:Package" xmi:id="_SGJB8G6cEeSZe_WBkuFUeQ" name="concordia">
        <packagedElement xmi:type="uml:Package" xmi:id="_SGJB8W6cEeSZe_WBkuFUeQ" name="advanceprog">
          <packagedElement xmi:type="uml:Package" xmi:id="_SGJpAG6cEeSZe_WBkuFUeQ" name="elements">
            <packagedElement xmi:type="uml:Class" xmi:id="_SKqVkG6cEeSZe_WBkuFUeQ" name="HighLevelCritter">
              <ownedComment xmi:id="_SY0GUG6cEeSZe_WBkuFUeQ">
                <body>Representation of Critters which is created in level 5&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SWsmcG6cEeSZe_WBkuFUeQ" general="_SUaHcW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYUXEG6cEeSZe_WBkuFUeQ" name="HighLevelCritter" specification="_SWpjIG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SYU-IG6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_SYU-IW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYU-Im6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYU-I26cEeSZe_WBkuFUeQ" type="_SKqVkG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(200);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SWpjIG6cEeSZe_WBkuFUeQ" name="HighLevelCritter" method="_SYUXEG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_SWqxQW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SWqxQm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SWqKMG6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_SWqKMW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SWqxQG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SWrYUG6cEeSZe_WBkuFUeQ" type="_SKqVkG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKv1IG6cEeSZe_WBkuFUeQ" name="LowLevelCritter">
              <ownedComment xmi:id="_SY1UcG6cEeSZe_WBkuFUeQ">
                <body>Representation of Critters which is created in level 1&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SWzUIG6cEeSZe_WBkuFUeQ" general="_SUaHcW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYWMQG6cEeSZe_WBkuFUeQ" name="LowLevelCritter" specification="_SWw34G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SYWMQW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_SYWMQm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYWMQ26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYWMRG6cEeSZe_WBkuFUeQ" type="_SKv1IG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(100);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SWw34G6cEeSZe_WBkuFUeQ" name="LowLevelCritter" method="_SYWMQG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_SWyGAG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SWyGAW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SWw34W6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_SWxe8G6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SWxe8W6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SWyGAm6cEeSZe_WBkuFUeQ" type="_SKv1IG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SK3J4G6cEeSZe_WBkuFUeQ" name="MediumLevelCritter">
              <generalization xmi:id="_SW4MoG6cEeSZe_WBkuFUeQ" general="_SUaHcW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYYBcG6cEeSZe_WBkuFUeQ" name="MediumLevelCritter" specification="_SW2XcG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SYYBcW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_SYYBcm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYYBc26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYYBdG6cEeSZe_WBkuFUeQ" type="_SK3J4G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>super(map, x, y);&#xD;
		setExistingLife(150);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SW2XcG6cEeSZe_WBkuFUeQ" name="MediumLevelCritter" method="_SYYBcG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_SW2-gW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SW2-gm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SW2XcW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_SW2Xcm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SW2-gG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SW2-g26cEeSZe_WBkuFUeQ" type="_SK3J4G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SUaHcW6cEeSZe_WBkuFUeQ" name="Critter">
              <ownedComment xmi:id="_UBHg5G6cEeSZe_WBkuFUeQ">
                <body>Critter is the main moving element in the game that each critter has x and y&#xD;
which describes the current location or soon to be moved location&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UAa9U26cEeSZe_WBkuFUeQ" general="_TuHsYW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_UA9I0G6cEeSZe_WBkuFUeQ" name="x" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UA9v4W6cEeSZe_WBkuFUeQ" name="y" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UA-W8W6cEeSZe_WBkuFUeQ" name="map" visibility="private" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_UBJ9IG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_UA-W826cEeSZe_WBkuFUeQ" name="ang" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UA--AW6cEeSZe_WBkuFUeQ" name="lastCell" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UA--Am6cEeSZe_WBkuFUeQ" value="&quot;0,0&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UA_lEW6cEeSZe_WBkuFUeQ" name="currentPathIndex" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UA_lEm6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBAMIW6cEeSZe_WBkuFUeQ" name="existingLife" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UBAMIm6cEeSZe_WBkuFUeQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBAMI26cEeSZe_WBkuFUeQ" name="toReduceTheMoney">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UBAMJG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBAzMG6cEeSZe_WBkuFUeQ" name="flaggedToStopReduce" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UBAzMW6cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBAzM26cEeSZe_WBkuFUeQ" name="calcuatedX" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UBBaQG6cEeSZe_WBkuFUeQ" value="0.0f"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBBaQm6cEeSZe_WBkuFUeQ" name="calcuatedy" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UBBaQ26cEeSZe_WBkuFUeQ" value="0.0f"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBCBUW6cEeSZe_WBkuFUeQ" name="left">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBCBUm6cEeSZe_WBkuFUeQ" name="right" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBCBVG6cEeSZe_WBkuFUeQ" name="up">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBCoYG6cEeSZe_WBkuFUeQ" name="down" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBCoYm6cEeSZe_WBkuFUeQ" name="stop" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UBCoY26cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBDPcW6cEeSZe_WBkuFUeQ" name="centerX">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UBDPc26cEeSZe_WBkuFUeQ" name="centerY">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBEdkm6cEeSZe_WBkuFUeQ" name="Critter" specification="_UAi5IG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBEdk26cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_UBEdlG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBEdlW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBEdlm6cEeSZe_WBkuFUeQ" type="_SUaHcW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.map = map;&#xD;
		this.x = x;&#xD;
		this.y = y;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBEdl26cEeSZe_WBkuFUeQ" name="createCritter" specification="_UAkHQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBEdmG6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_UBEdmW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBEdmm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBEdm26cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBEdnG6cEeSZe_WBkuFUeQ" type="_SUaHcW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>if (level == 1)&#xD;
			return new LowLevelCritter(map, x, y);&#xD;
&#xD;
		if (level > 1 &amp;&amp; level &lt;= 4)&#xD;
			return new MediumLevelCritter(map, x, y);&#xD;
&#xD;
		if (level >= 5)&#xD;
			return new HighLevelCritter(map, x, y);&#xD;
&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBFEoG6cEeSZe_WBkuFUeQ" name="move" specification="_UAkuUW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBFEoW6cEeSZe_WBkuFUeQ" name="dx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBFEom6cEeSZe_WBkuFUeQ" name="dy">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBFEo26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>float nx = x + dx;&#xD;
		float ny = y + dy;&#xD;
		x = nx;&#xD;
		y = ny;&#xD;
		ang = (float) (Math.atan2(dx, dy) - (Math.PI / 2));&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBFEpG6cEeSZe_WBkuFUeQ" name="determineMovement" specification="_UAaWQG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>if (stop)&#xD;
			return;&#xD;
		String currentPosition = Map.tryMapXYtoCellNumber((int) calcuatedX,&#xD;
				(int) calcuatedy);&#xD;
&#xD;
		if (!lastCell.equals(currentPosition)) {&#xD;
			if (proceedToMove((int) calcuatedX, (int) calcuatedy)) {&#xD;
				currentPathIndex += 1;&#xD;
				lastCell = currentPosition;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		MapGenerator mapp = map.MapGenerator;&#xD;
&#xD;
		if (((int) y) + 0.5 == mapp.getEndPoint() + 0.5&#xD;
				&amp;&amp; ((int) x) == mapp.getWidth() - 1) {&#xD;
			Engine.setGameOver();&#xD;
			stop();&#xD;
			return;&#xD;
		}&#xD;
		if (currentPathIndex &lt; MapGenerator.getPath().size()) {&#xD;
			Movement movement = MapGenerator.getPath().get(currentPathIndex);&#xD;
			if (movement == Movement.Left) {&#xD;
				setRight(false);&#xD;
				setLeft(true);&#xD;
				setDown(false);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Right) {&#xD;
				setRight(true);&#xD;
				setLeft(false);&#xD;
				setDown(false);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Down) {&#xD;
				setRight(false);&#xD;
				setLeft(false);&#xD;
				setDown(true);&#xD;
				setUp(false);&#xD;
			}&#xD;
&#xD;
			if (movement == Movement.Up) {&#xD;
				setRight(false);&#xD;
				setLeft(false);&#xD;
				setDown(false);&#xD;
				setUp(true);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBFEpW6cEeSZe_WBkuFUeQ" name="stop" specification="_UAaWQW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>stop = true;&#xD;
		setUp(false);&#xD;
		setDown(false);&#xD;
		setLeft(false);&#xD;
		setRight(false);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBFrsG6cEeSZe_WBkuFUeQ" name="moving" specification="_UAlVYW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBFrsW6cEeSZe_WBkuFUeQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBFrsm6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>float dx = 0;&#xD;
		float dy = 0;&#xD;
&#xD;
		determineMovement();&#xD;
		if (isLeft()) {&#xD;
			dx -= 1;&#xD;
		}&#xD;
		if (isRight()) {&#xD;
			dx += 1;&#xD;
		}&#xD;
		if (isUp()) {&#xD;
			dy -= 1;&#xD;
		}&#xD;
		if (isDown()) {&#xD;
			dy += 1;&#xD;
		}&#xD;
&#xD;
		if ((dx != 0) || (dy != 0)) {&#xD;
			move(dx * delta * 0.003f, dy * delta * 0.003f);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBFrs26cEeSZe_WBkuFUeQ" name="paint" specification="_UAaWQm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBFrtG6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>if (!Engine.IS_CREATE_CRITTER)&#xD;
			return;&#xD;
		int xp = (int) (Map.TILE_SIZE * x);&#xD;
		int yp = (int) (Map.TILE_SIZE * y);&#xD;
		graphic.setColor(Color.green);&#xD;
		if (getExistingLife() &lt;= 0) {&#xD;
			this.existingLife = 0;&#xD;
			graphic.setColor(Color.red);&#xD;
			if (flaggedToStopReduce) {&#xD;
				flaggedToStopReduce = false;&#xD;
				toReduceTheMoney = true;&#xD;
			}&#xD;
&#xD;
			stop();&#xD;
		} else {&#xD;
			for (Tower tower : Runner.TOWERS) {&#xD;
&#xD;
				Tower currentTower = tower.checkIfIsinTheAreaOfTower(map, xp,&#xD;
						yp);&#xD;
				if (currentTower != null) {&#xD;
&#xD;
					setChanged();&#xD;
					notifyObservers(currentTower);&#xD;
				} else&#xD;
					tower.crittersInRange.remove(this);&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		calcuatedX = xp;&#xD;
		calcuatedy = yp;&#xD;
&#xD;
		graphic.rotate(ang, xp, yp);&#xD;
&#xD;
		graphic.drawString(Float.toString(getExistingLife()), (xp + 15),&#xD;
				(int) (yp + 5));&#xD;
		graphic.drawOval((int) (xp - 10), (int) (yp - 10), 20, 20);&#xD;
&#xD;
		graphic.rotate(-ang, xp, yp);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBFrtW6cEeSZe_WBkuFUeQ" name="proceedToMove" specification="_UAl8cG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBFrtm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBFrt26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBFruG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (int i = 0; i &lt; 400; i = i + 20)&#xD;
			for (int j = 0; j &lt; 400; j = j + 20) {&#xD;
				if (x == (i + (i + 20)) / 2)&#xD;
					if (y == (j + (j + 20)) / 2)&#xD;
						return true;&#xD;
			}&#xD;
		return false;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBGSwG6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_UAmjgG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBGSwW6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_UBGSwm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBGSw26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBGSxG6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBGSxW6cEeSZe_WBkuFUeQ" name="isRight" specification="_UAa9UG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBGSxm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return right;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBGSx26cEeSZe_WBkuFUeQ" name="setRight" specification="_UAnKkm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBGSyG6cEeSZe_WBkuFUeQ" name="right">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.right = right;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBGSyW6cEeSZe_WBkuFUeQ" name="isDown" specification="_UAa9UW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBGSym6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return down;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBG50G6cEeSZe_WBkuFUeQ" name="setDown" specification="_UAnxoW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBG50W6cEeSZe_WBkuFUeQ" name="down">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.down = down;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBG50m6cEeSZe_WBkuFUeQ" name="setExistingLife" specification="_UAnxo26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBG5026cEeSZe_WBkuFUeQ" name="existingLife">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <language>java</language>
                <body>this.existingLife = existingLife;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBG51G6cEeSZe_WBkuFUeQ" name="getX" specification="_UAa9Um6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBG51W6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return (int) this.x;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UAaWQG6cEeSZe_WBkuFUeQ" name="determineMovement" method="_UBFEpG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH8W6cEeSZe_WBkuFUeQ">
                  <body>In this method the left,right,up and down would be updated based on the&#xD;
	 * next valid movement</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_UAaWQW6cEeSZe_WBkuFUeQ" name="stop" visibility="private" method="_UBFEpW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH8m6cEeSZe_WBkuFUeQ">
                  <body>Will stop any movement of current critter</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_UAaWQm6cEeSZe_WBkuFUeQ" name="paint" method="_UBFrs26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH9G6cEeSZe_WBkuFUeQ">
                  <body>After the movement has been taken place, the paint method is responsible&#xD;
	 * to show the new position of critter&#xD;
	 * &#xD;
	 * @param graphic</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAaWQ26cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UAa9UG6cEeSZe_WBkuFUeQ" name="isRight" method="_UBGSxW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH926cEeSZe_WBkuFUeQ">
                  <body>checks for the right&#xD;
	 * &#xD;
	 * @return right variable</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAnKkW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UAa9UW6cEeSZe_WBkuFUeQ" name="isDown" method="_UBGSyW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH-W6cEeSZe_WBkuFUeQ">
                  <body>checks for the down&#xD;
	 * &#xD;
	 * @return down variable</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAnxoG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UAa9Um6cEeSZe_WBkuFUeQ" name="getX" method="_UBG51G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH_G6cEeSZe_WBkuFUeQ">
                  <body>current position of critter in X-Axis&#xD;
	 * &#xD;
	 * @return x</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAnxpW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UAi5IG6cEeSZe_WBkuFUeQ" name="Critter" visibility="protected" method="_UBEdkm6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_UAjgM26cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UAjgNG6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_UBHg5W6cEeSZe_WBkuFUeQ">
                  <body>Create an instance of critter based on map x and y to locate the movement&#xD;
	 * &#xD;
	 * @param map&#xD;
	 * @param x&#xD;
	 * @param y</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAi5IW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_UAjgMG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAjgMW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAjgMm6cEeSZe_WBkuFUeQ" type="_SUaHcW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UAkHQG6cEeSZe_WBkuFUeQ" name="createCritter" isStatic="true" method="_UBEdl26cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UAkHQW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_UAkHQm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAkHQ26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAkHRG6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAkuUG6cEeSZe_WBkuFUeQ" type="_SUaHcW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UAkuUW6cEeSZe_WBkuFUeQ" name="move" method="_UBFEoG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH8G6cEeSZe_WBkuFUeQ">
                  <body>Will move the critter toward the path based on dx and dy&#xD;
	 * &#xD;
	 * @param dx&#xD;
	 * @param dy&#xD;
	 * @return If the movement is performed correctly</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAkuUm6cEeSZe_WBkuFUeQ" name="dx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAkuU26cEeSZe_WBkuFUeQ" name="dy">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAlVYG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UAlVYW6cEeSZe_WBkuFUeQ" name="moving" method="_UBFrsG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH826cEeSZe_WBkuFUeQ">
                  <body>Physically move critter based on delta and those variable with set in&#xD;
	 * determineMovement method&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param map</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAlVYm6cEeSZe_WBkuFUeQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAlVY26cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UAl8cG6cEeSZe_WBkuFUeQ" name="proceedToMove" isStatic="true" method="_UBFrtW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH9W6cEeSZe_WBkuFUeQ">
                  <body>This method is to make sure the next movement would be in the area of the&#xD;
	 * our map with the preferred dimension&#xD;
	 * &#xD;
	 * @param x&#xD;
	 * @param y&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAl8cW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAl8cm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAl8c26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UAmjgG6cEeSZe_WBkuFUeQ" name="drawCircle" method="_UBGSwG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH9m6cEeSZe_WBkuFUeQ">
                  <body>This method is used in when we want to show a circle around a tower for&#xD;
	 * the range of shooting&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            is the handle for depicting objects on it</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAmjgW6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_UAmjgm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAmjg26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UAnKkG6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UAnKkm6cEeSZe_WBkuFUeQ" name="setRight" method="_UBGSx26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH-G6cEeSZe_WBkuFUeQ">
                  <body>setter for the right variable&#xD;
	 * &#xD;
	 * @param right</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAnKk26cEeSZe_WBkuFUeQ" name="right">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UAnxoW6cEeSZe_WBkuFUeQ" name="setDown" method="_UBG50G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH-m6cEeSZe_WBkuFUeQ">
                  <body>setter for the down&#xD;
	 * &#xD;
	 * @param down</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAnxom6cEeSZe_WBkuFUeQ" name="down">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UAnxo26cEeSZe_WBkuFUeQ" name="setExistingLife" method="_UBG50m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_UBIH-26cEeSZe_WBkuFUeQ">
                  <body>setter for the existing life and is called by engine when the critter in&#xD;
	 * the area of shooting of towers&#xD;
	 * &#xD;
	 * @param existingLife</body>
                </ownedComment>
                <ownedParameter xmi:id="_UAnxpG6cEeSZe_WBkuFUeQ" name="existingLife">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UBJ9IG6cEeSZe_WBkuFUeQ" name="" memberEnd="_UBJ9IW6cEeSZe_WBkuFUeQ _UA-W8W6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_UBJ9IW6cEeSZe_WBkuFUeQ" name="" type="_SUaHcW6cEeSZe_WBkuFUeQ" association="_UBJ9IG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_SGJpAW6cEeSZe_WBkuFUeQ" name="runner">
            <packagedElement xmi:type="uml:Class" xmi:id="_SUdx0G6cEeSZe_WBkuFUeQ" name="Runner">
              <ownedComment xmi:id="_TzlbNG6cEeSZe_WBkuFUeQ">
                <body>This is the entry class of the game which has main method that Java needs to&#xD;
execute the game. it consist of buttons that are responsible for controlling&#xD;
the game during execution. Although it gets the main panel instance from the&#xD;
surface and depict the menu on top of that.&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_TwTdsG6cEeSZe_WBkuFUeQ" general="_TuA-sG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Txo6cG6cEeSZe_WBkuFUeQ" name="TOWERS" isStatic="true" type="_SU4okW6cEeSZe_WBkuFUeQ" isOrdered="true" association="_T0G_oW6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TxphgG6cEeSZe_WBkuFUeQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TxphgW6cEeSZe_WBkuFUeQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxqIkW6cEeSZe_WBkuFUeQ" name="paused" visibility="private" isStatic="true">
                <eAnnotations xmi:id="_TxqIkm6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_TxqIk26cEeSZe_WBkuFUeQ" key="volatile"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TxqvoG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Txqvom6cEeSZe_WBkuFUeQ" name="map" visibility="private" isStatic="true" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_T0HmsW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TxrWsW6cEeSZe_WBkuFUeQ" name="engine" visibility="private" isStatic="true" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0INwW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Txr9wW6cEeSZe_WBkuFUeQ" name="startPauseButton" visibility="private" isStatic="true" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0I00W6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Txsk0W6cEeSZe_WBkuFUeQ" name="lock" visibility="private" isStatic="true" type="_TwFbQG6cEeSZe_WBkuFUeQ" association="_T0Jb4W6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TxtL4G6cEeSZe_WBkuFUeQ" value="new Object()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Txty8G6cEeSZe_WBkuFUeQ" name="gameSpeed" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Txty8W6cEeSZe_WBkuFUeQ" value="10"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxuaAG6cEeSZe_WBkuFUeQ" name="mapGenerator" visibility="private" isStatic="true" type="_SU2zYG6cEeSZe_WBkuFUeQ" association="_T0KC8G6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TxvBEW6cEeSZe_WBkuFUeQ" name="MoneyLabel" isStatic="true" type="_TwGpYG6cEeSZe_WBkuFUeQ" association="_T0KC826cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TxvoIW6cEeSZe_WBkuFUeQ" name="X_DIMENSION" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TxvoIm6cEeSZe_WBkuFUeQ" value="15"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxwPMW6cEeSZe_WBkuFUeQ" name="Y_DIMENSION" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Txw2QG6cEeSZe_WBkuFUeQ" value="15"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxxdUG6cEeSZe_WBkuFUeQ" name="newGame" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TxxdUW6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxyEYW6cEeSZe_WBkuFUeQ" name="newEmptyGame" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TxyEYm6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxyrcW6cEeSZe_WBkuFUeQ" name="userEditing" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Txyrcm6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxzSgW6cEeSZe_WBkuFUeQ" name="StillBuilding" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Txz5kG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Txz5km6cEeSZe_WBkuFUeQ" name="SelectedEntry" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tx0goG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tx0gom6cEeSZe_WBkuFUeQ" name="SelectedExit" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tx1HsG6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tx1uwG6cEeSZe_WBkuFUeQ" name="entry" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tx1uwW6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tx2V0W6cEeSZe_WBkuFUeQ" name="createMap" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tx284G6cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tx3j8G6cEeSZe_WBkuFUeQ" name="Panel" isStatic="true" type="_Tu0P8G6cEeSZe_WBkuFUeQ" association="_T0LREG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tx4LAW6cEeSZe_WBkuFUeQ" name="Frame" isStatic="true" type="_Tuzo4G6cEeSZe_WBkuFUeQ" association="_T0L4IG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tx4yEW6cEeSZe_WBkuFUeQ" name="Strategy" type="_TuFQIG6cEeSZe_WBkuFUeQ" association="_T0L4I26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tx5ZIG6cEeSZe_WBkuFUeQ" name="newMapButton" visibility="private" isStatic="true" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0MfMW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tx6AMG6cEeSZe_WBkuFUeQ" name="createUserMap" visibility="private" isStatic="true" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0NGQW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tx7OUG6cEeSZe_WBkuFUeQ" name="loadMapButton" visibility="private" isStatic="true" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0NtUW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tx71YW6cEeSZe_WBkuFUeQ" name="saveMapButton" visibility="private" isStatic="true" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0OUYW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tx9DgG6cEeSZe_WBkuFUeQ" name="acceptChanges" visibility="private" isStatic="true" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0O7cG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tx9qkG6cEeSZe_WBkuFUeQ" name="Strategy1" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0O7c26cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tx9qkW6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Closest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tx-RoG6cEeSZe_WBkuFUeQ" name="Strategy2" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0PigW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tx-RoW6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Farthest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tx-4sW6cEeSZe_WBkuFUeQ" name="Strategy3" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0QJkW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tx-4sm6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Sickest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tx_fwW6cEeSZe_WBkuFUeQ" name="Strategy4" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0QwoW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tx_fwm6cEeSZe_WBkuFUeQ" value="new JButton(&quot;Healthiest&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyAG0W6cEeSZe_WBkuFUeQ" name="strategyShow" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0RXsW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyAt4G6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyBU8G6cEeSZe_WBkuFUeQ" name="typeShow" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0R-wW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyBU8W6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyB8AG6cEeSZe_WBkuFUeQ" name="currentTowerStatusButton" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0Sl0W6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyB8AW6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyCjEW6cEeSZe_WBkuFUeQ" name="currentTowerAmount" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0TM4W6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyCjEm6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyDKIW6cEeSZe_WBkuFUeQ" name="sellButton" visibility="private" type="_TwENIG6cEeSZe_WBkuFUeQ" association="_T0Tz8W6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyDKIm6cEeSZe_WBkuFUeQ" value="new JButton()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyEYQG6cEeSZe_WBkuFUeQ" name="counter" visibility="private" type="_TwSPkG6cEeSZe_WBkuFUeQ" association="_T0UbAW6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyEYQW6cEeSZe_WBkuFUeQ" value="new Thread(new Runnable() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void run() {&#xD;&#xA;&#x9;&#x9;&#x9;while (true) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;work();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;})"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyFmYG6cEeSZe_WBkuFUeQ" name="pauseResume" visibility="private" type="_TuDa8G6cEeSZe_WBkuFUeQ" association="_T0VCEG6cEeSZe_WBkuFUeQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyFmYW6cEeSZe_WBkuFUeQ" value="new ActionListener() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void actionPerformed(java.awt.event.ActionEvent e) {&#xD;&#xA;&#x9;&#x9;&#x9;// gameSpeed = (int) (gameSpeed > 0 ? gameSpeed - 0.5 : gameSpeed);&#xD;&#xA;&#x9;&#x9;&#x9;paused = !paused;&#xD;&#xA;&#x9;&#x9;&#x9;startPauseButton.setText(paused ? &quot;Resume&quot; : &quot;Pause&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;synchronized (lock) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;lock.notifyAll();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TzmpUG6cEeSZe_WBkuFUeQ" name="exit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TznQYG6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_TwC_AG6cEeSZe_WBkuFUeQ" client="_SUdx0G6cEeSZe_WBkuFUeQ" supplier="_TuITcW6cEeSZe_WBkuFUeQ" contract="_TuITcW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzD2wG6cEeSZe_WBkuFUeQ" name="main" specification="_TqIkQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzD2wW6cEeSZe_WBkuFUeQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TzD2wm6cEeSZe_WBkuFUeQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>java.awt.EventQueue.invokeLater(new Runnable() {&#xD;
			@Override&#xD;
			public void run() {&#xD;
				new Runner();&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzD2w26cEeSZe_WBkuFUeQ" name="Runner" specification="_TlVj0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzD2xG6cEeSZe_WBkuFUeQ" type="_SUdx0G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>createNewGame();&#xD;
		createMainSurface();&#xD;
		engine.setStrategy(Strategy);&#xD;
		createButtons();&#xD;
&#xD;
		startPauseButton.addActionListener(pauseResume);&#xD;
		handleMouseActions();&#xD;
		counter.start();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzD2xW6cEeSZe_WBkuFUeQ" name="createNewGame" specification="_TlWK4G6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>String levelToPlay = JOptionPane.showInputDialog(Panel,&#xD;
				&quot;The level you want play:&quot;, &quot;1&quot;);&#xD;
		Engine.gameLevelandNumberofCritters = Integer.parseInt(levelToPlay);&#xD;
		if (createMap) {&#xD;
			createMap();&#xD;
			map.generateMap();&#xD;
			createMap = true;&#xD;
		}&#xD;
		engineInitializingObserving();&#xD;
		if (MoneyLabel != null)&#xD;
			engine.resetMoney();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzEd0G6cEeSZe_WBkuFUeQ" name="createEmptyMap" specification="_TlWK4W6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>Engine.IS_CREATE_CRITTER = false;&#xD;
		map = new Map(X_DIMENSION, Y_DIMENSION);&#xD;
		for (int i = 0; i &lt; X_DIMENSION; i++)&#xD;
			for (int j = 0; j &lt; Y_DIMENSION; j++) {&#xD;
				map.Data[i][j] = Map.BLOCKED;&#xD;
			}&#xD;
		&#xD;
		engineInitializingObserving();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzEd0W6cEeSZe_WBkuFUeQ" name="createMap" specification="_TlWx8G6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>map = new Map(X_DIMENSION, Y_DIMENSION);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzEd0m6cEeSZe_WBkuFUeQ" name="engineInitializingObserving" specification="_TlWx8W6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>engine = Engine.initialEngine(map,true);&#xD;
		engine.addObserver(this);&#xD;
		engine.setStrategy(Strategy);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzEd026cEeSZe_WBkuFUeQ" name="update" specification="_TwPzUG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzEd1G6cEeSZe_WBkuFUeQ" name="arg0" type="_TuHsYW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TzEd1W6cEeSZe_WBkuFUeQ" name="arg1" type="_TwFbQG6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>MoneyLabel.setText(&quot;Balance: &quot; + Integer.toString(engine.MONEY) + &quot;$&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzFE4G6cEeSZe_WBkuFUeQ" name="createMainSurface" specification="_TlXZAG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>int WIDTH = map.Width * (Runner.X_DIMENSION + 50);&#xD;
		int HEIGHT = map.Height * (Runner.Y_DIMENSION + 30);&#xD;
&#xD;
		Frame = new JFrame(&quot;Tower Game&quot;);&#xD;
&#xD;
		Frame.setLayout(new BorderLayout());&#xD;
&#xD;
		Panel = new JPanel();&#xD;
		Panel.setPreferredSize(new Dimension(20, 50));&#xD;
		Panel.setBackground(Color.black);&#xD;
		setBackground(Color.black);&#xD;
		Frame.add(Panel, BorderLayout.NORTH);&#xD;
&#xD;
		setBounds(0, 0, 500, 500);&#xD;
		Frame.add(this, BorderLayout.CENTER);&#xD;
		Frame.setSize(WIDTH, HEIGHT);&#xD;
		Frame.setResizable(false);&#xD;
		Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		Frame.setLocationRelativeTo(null);&#xD;
		Frame.setVisible(true);&#xD;
		addKeyListener(new ButtonHandler());&#xD;
		requestFocus();&#xD;
&#xD;
		createBufferStrategy(2);&#xD;
		Strategy = getBufferStrategy();&#xD;
&#xD;
		// handleMouseActions(Frame);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzFE4W6cEeSZe_WBkuFUeQ" name="createButtons" specification="_TlYAEG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>startPauseButton = new JButton(&quot;Pause&quot;);&#xD;
		newMapButton = new JButton(&quot;New Game&quot;);&#xD;
		createUserMap = new JButton(&quot;Create User Map&quot;);&#xD;
		loadMapButton = new JButton(&quot;Load Map&quot;);&#xD;
		saveMapButton = new JButton(&quot;Save Map&quot;);&#xD;
		acceptChanges = new JButton(&quot;Accept MAp&quot;);&#xD;
		MoneyLabel = new JLabel(&quot;Balance: &quot; + Integer.toString(Engine.MONEY)&#xD;
				+ &quot;$&quot;, SwingConstants.RIGHT);&#xD;
		MoneyLabel.setForeground(Color.white);&#xD;
&#xD;
		Panel.add(startPauseButton);&#xD;
		Panel.add(newMapButton);&#xD;
		Panel.add(createUserMap);&#xD;
		Panel.add(loadMapButton);&#xD;
		Panel.add(saveMapButton);&#xD;
		Panel.add(MoneyLabel, BorderLayout.WEST);&#xD;
&#xD;
		Panel.add(acceptChanges);&#xD;
		acceptChanges.setVisible(false);&#xD;
&#xD;
		newMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				newGame = true;&#xD;
			}&#xD;
		});&#xD;
&#xD;
		saveMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				JFileChooser chooser = new JFileChooser();&#xD;
				// chooser.setCurrentDirectory(new java.io.File(&quot;.&quot;));&#xD;
				chooser.setDialogTitle(&quot;select folder&quot;);&#xD;
				chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);&#xD;
				chooser.setAcceptAllFileFilterUsed(false);&#xD;
&#xD;
				int returnVal = chooser.showSaveDialog(Panel);&#xD;
				if (returnVal == JFileChooser.APPROVE_OPTION) {&#xD;
					String str = chooser.getSelectedFile().getName();&#xD;
					try {&#xD;
						Engine.MAP.MapGenerator.SaveMap(str);&#xD;
					} catch (IOException e1) {&#xD;
						e1.printStackTrace();&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
&#xD;
		loadMapButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
&#xD;
				userEditing = true;&#xD;
				acceptChanges.setVisible(true);&#xD;
				int height, width;&#xD;
				JFileChooser chooser = new JFileChooser();&#xD;
				FileNameExtensionFilter filter = new FileNameExtensionFilter(&#xD;
						&quot;mp Maps&quot;, &quot;mp&quot;);&#xD;
				chooser.setFileFilter(filter);&#xD;
				int returnVal = chooser.showOpenDialog(Panel);&#xD;
				if (returnVal == JFileChooser.APPROVE_OPTION) {&#xD;
					System.out.println(&quot;Loading...&quot;);&#xD;
					String str = chooser.getSelectedFile().getName();&#xD;
					try {&#xD;
						BufferedReader br = new BufferedReader(new FileReader(&#xD;
								str));&#xD;
						try {&#xD;
							String line = br.readLine();&#xD;
							height = Integer.parseInt(line);&#xD;
							// mapGenerator.setHeight(Integer.parseInt(line));&#xD;
							line = br.readLine();&#xD;
							width = Integer.parseInt(line);&#xD;
							// mapGenerator.setWidth (Integer.parseInt(line));&#xD;
							mapGenerator = new MapGenerator(height, width);&#xD;
							SelectedEntry = true;&#xD;
							SelectedExit = true;&#xD;
							line = br.readLine();&#xD;
							int newStart = Integer.parseInt(line);&#xD;
							mapGenerator.setStartingPoint(newStart);&#xD;
							entry = newStart;&#xD;
							Runner.X_DIMENSION = height;&#xD;
							Runner.Y_DIMENSION = width;&#xD;
							line = br.readLine();&#xD;
							int newEnd = Integer.parseInt(line);&#xD;
							mapGenerator.setEndPoint(newEnd);&#xD;
							exit = newEnd;&#xD;
							line = br.readLine();&#xD;
							while (line != null) {&#xD;
								switch (line) {&#xD;
								case &quot;Up&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Up);&#xD;
									break;&#xD;
								case &quot;Down&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Down);&#xD;
									break;&#xD;
								case &quot;Right&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Right);&#xD;
									break;&#xD;
								case &quot;Left&quot;:&#xD;
									mapGenerator.getPath().add(Movement.Left);&#xD;
									break;&#xD;
								default:&#xD;
									break;&#xD;
								}&#xD;
								line = br.readLine();&#xD;
							}&#xD;
						} finally {&#xD;
							br.close();&#xD;
						}&#xD;
						int curI = mapGenerator.getStartinPoint(), curJ = 0;&#xD;
						mapGenerator.Grid[curI][curJ].value = Status.isPath;&#xD;
						for (int i = 0; i &lt; mapGenerator.getPath().size(); i++) {&#xD;
							Movement dir = mapGenerator.getPath().get(i);&#xD;
							switch (dir) {&#xD;
							case Up:&#xD;
								// Go Up&#xD;
								curI--;&#xD;
								break;&#xD;
							case Down:&#xD;
								// Go Down&#xD;
								curI++;&#xD;
								break;&#xD;
							case Left:&#xD;
								// Go Left&#xD;
								curJ--;&#xD;
								break;&#xD;
							case Right:&#xD;
								// Go Right&#xD;
								curJ++;&#xD;
								break;&#xD;
							default:&#xD;
								break;&#xD;
							}&#xD;
							if (curI &lt; mapGenerator.getHeight() &amp;&amp; curI >= 0&#xD;
									&amp;&amp; curJ &lt; mapGenerator.getWidth()&#xD;
									&amp;&amp; curJ >= 0)&#xD;
								mapGenerator.Grid[curI][curJ].value = Status.isPath;&#xD;
						}&#xD;
						for (int i = 0; i &lt; mapGenerator.getHeight(); i++)&#xD;
							for (int j = 0; j &lt; mapGenerator.getWidth(); j++)&#xD;
								if (mapGenerator.Grid[i][j].value != Status.isPath)&#xD;
									mapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
						// Printing&#xD;
						System.out.println(&quot;Map Loaded:&quot;);&#xD;
						for (int i = 0; i &lt; mapGenerator.getHeight(); i++) {&#xD;
							System.out.print(&quot;|&quot;);&#xD;
							for (int j = 0; j &lt; mapGenerator.getWidth(); j++)&#xD;
								if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
									System.out.print(&quot;X|&quot;);&#xD;
								else&#xD;
									System.out.print(&quot; |&quot;);&#xD;
							System.out.println();&#xD;
						}&#xD;
&#xD;
						for (int i = 0; i &lt; mapGenerator.getPath().size(); i++)&#xD;
							System.out.print(mapGenerator.getPath().get(i)&#xD;
									+ &quot; &quot;);&#xD;
						System.out.println(&quot;&quot;);&#xD;
						// mapGenerator.LoadMap(str);&#xD;
						map.setMapGenerator(mapGenerator);&#xD;
						// Engine.MAP_VALIDATION = new MapValidation(map);&#xD;
&#xD;
						Engine.critters = null;&#xD;
						StillBuilding = true;&#xD;
						// Window w = SwingUtilities&#xD;
						// .getWindowAncestor(engine.Panel);&#xD;
						// w.setVisible(false);&#xD;
&#xD;
						// new Runner();&#xD;
&#xD;
					} catch (IOException e1) {&#xD;
						e1.printStackTrace();&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
&#xD;
		createUserMap.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				String X_Y = JOptionPane.showInputDialog(Panel,&#xD;
						&quot;Put in your dimension:&quot;, &quot;15,15&quot;);&#xD;
				newEmptyGame = true;&#xD;
				String[] parts = X_Y.split(&quot;,&quot;);&#xD;
				int x = Integer.parseInt(parts[1]);&#xD;
				int y = Integer.parseInt(parts[0]);&#xD;
				// TODO Auto-generated method stub&#xD;
				X_DIMENSION = x;&#xD;
				Y_DIMENSION = y;&#xD;
				userEditing = true;&#xD;
				acceptChanges.setVisible(true);&#xD;
				StillBuilding = true;&#xD;
				SelectedEntry = false; // 1st selection&#xD;
				SelectedExit = false; // 2nd selection&#xD;
			}&#xD;
		});&#xD;
&#xD;
		acceptChanges.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				// TODO Auto-generated method stub&#xD;
				if (SelectedEntry &amp;&amp; SelectedExit) {&#xD;
					if (map.UserDefinedMapValidation(entry, exit, map.Height,&#xD;
							map.Width)) {&#xD;
						// show appropriate message&#xD;
						userEditing = false;&#xD;
						StillBuilding = false;&#xD;
						acceptChanges.setVisible(false);&#xD;
						createMap = false;&#xD;
						Engine.IS_CREATE_CRITTER = true;&#xD;
					} else {&#xD;
						StillBuilding = true;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzFr8G6cEeSZe_WBkuFUeQ" name="work" specification="_TlYAEW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>allowPause();&#xD;
		if (newGame) {&#xD;
			createNewGame();&#xD;
			newGame = false;&#xD;
		}&#xD;
		if (newEmptyGame) {&#xD;
			createEmptyMap();&#xD;
			newEmptyGame = false;&#xD;
		}&#xD;
		engine.playing();&#xD;
		sleep();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzFr8W6cEeSZe_WBkuFUeQ" name="allowPause" specification="_TlYnIG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>synchronized (lock) {&#xD;
			while (paused) {&#xD;
				try {&#xD;
					lock.wait();&#xD;
				} catch (InterruptedException e) {&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzFr8m6cEeSZe_WBkuFUeQ" name="sleep" specification="_TlYnIW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>try {&#xD;
			Thread.sleep(gameSpeed);&#xD;
		} catch (InterruptedException e) {&#xD;
&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzFr826cEeSZe_WBkuFUeQ" name="done" specification="_TlZOMG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>startPauseButton.setText(&quot;Start&quot;);&#xD;
		paused = true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzGTAG6cEeSZe_WBkuFUeQ" name="handleMouseActions" specification="_TlZOMW6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>addMouseListener(new MouseAdapter() {&#xD;
			private Color background;&#xD;
&#xD;
			@Override&#xD;
			public void mousePressed(MouseEvent e) {&#xD;
				if (userEditing) {&#xD;
					String clickedPoint = Map.tryMapXYtoCellNumber(&#xD;
							e.getX() - 100, e.getY() - 100);&#xD;
					String[] parts = clickedPoint.split(&quot;,&quot;);&#xD;
					int x, y;&#xD;
&#xD;
					try {&#xD;
						x = Integer.parseInt(parts[1]);&#xD;
						y = Integer.parseInt(parts[0]);&#xD;
					} catch (Exception e2) {&#xD;
						return;&#xD;
					}&#xD;
&#xD;
					if (StillBuilding &amp;&amp; !SelectedEntry &amp;&amp; !SelectedExit) {&#xD;
						// select entry point;&#xD;
						if (y == 0) {&#xD;
							entry = x;&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
							SelectedEntry = true;&#xD;
						} else {&#xD;
							// show message to select from the first column&#xD;
							System.out.println(&quot;Select from the 1st column!&quot;);&#xD;
						}&#xD;
					} else if (StillBuilding &amp;&amp; SelectedEntry &amp;&amp; !SelectedExit) {&#xD;
						// select exit point;&#xD;
						if (y == map.Width - 1) {&#xD;
							exit = x;&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
							SelectedExit = true;&#xD;
						} else {&#xD;
							// show message to select from the last column&#xD;
							System.out.println(&quot;Select from the last column!&quot;);&#xD;
						}&#xD;
					} else if (StillBuilding &amp;&amp; SelectedEntry &amp;&amp; SelectedExit) {&#xD;
						if (map.Data[x][y] == Map.BLOCKED)&#xD;
							map.Data[x][y] = Map.CLEAR;&#xD;
						else {&#xD;
							if (x != entry || x != exit)&#xD;
								map.Data[x][y] = Map.BLOCKED;&#xD;
							// else if (x == entry &amp;&amp; y == 0) {&#xD;
							// SelectedEntry = false;&#xD;
							// System.out.println(&quot;Select new entry point&quot;);&#xD;
							// } else if (x == exit &amp;&amp; y == map.Width - 1) {&#xD;
							// SelectedExit = false;&#xD;
							// System.out.println(&quot;Select new exit point&quot;);&#xD;
							// }&#xD;
						}&#xD;
					}&#xD;
&#xD;
				} else {&#xD;
					String clickedPoint = Map.tryMapXYtoCellNumber(&#xD;
							e.getX() - 100, e.getY() - 100);&#xD;
					String[] parts = clickedPoint.split(&quot;,&quot;);&#xD;
					int x = Integer.parseInt(parts[1]);&#xD;
					int y = Integer.parseInt(parts[0]);&#xD;
					if (map.Data[x][y] == Map.BLOCKED) {&#xD;
						if (engine.checkBalance()) {&#xD;
							JButton regularTypeButton = new JButton(&quot;Regular&quot;);&#xD;
							JButton massTypeButton = new JButton(&#xD;
									&quot;Mass Shooting&quot;);&#xD;
							JButton riffleTypeButton = new JButton(&#xD;
									&quot;Riffle Shooting&quot;);&#xD;
&#xD;
							final JFrame parent = new JFrame();&#xD;
&#xD;
							currentTowerAmount.setEnabled(false);&#xD;
&#xD;
							strategyShow.setEnabled(false);&#xD;
&#xD;
							parent.add(regularTypeButton);&#xD;
							parent.add(massTypeButton);&#xD;
							parent.add(riffleTypeButton);&#xD;
&#xD;
							parent.getContentPane().setLayout(&#xD;
									new GridLayout(3, 3));&#xD;
&#xD;
							parent.pack();&#xD;
							parent.setLocationRelativeTo(null);&#xD;
							parent.setVisible(true);&#xD;
&#xD;
							parent.repaint();&#xD;
							final Tower newTower = new Tower(x, y, 1, 100, 200);&#xD;
&#xD;
							regularTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Regular;&#xD;
&#xD;
											parent.setVisible(false);&#xD;
&#xD;
										}&#xD;
									});&#xD;
&#xD;
							massTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Mass;&#xD;
											engine.withDraw(200);&#xD;
											parent.setVisible(false);&#xD;
&#xD;
										}&#xD;
									});&#xD;
&#xD;
							riffleTypeButton&#xD;
									.addActionListener(new java.awt.event.ActionListener() {&#xD;
										@Override&#xD;
										public void actionPerformed(&#xD;
												java.awt.event.ActionEvent evt) {&#xD;
											newTower.Type = TowerType.Riffle;&#xD;
											engine.withDraw(100);&#xD;
											parent.setVisible(false);&#xD;
										}&#xD;
									});&#xD;
&#xD;
							TOWERS.add(newTower);&#xD;
							for (Critter critter : Engine.critters) {&#xD;
								critter.addObserver(newTower);&#xD;
							}&#xD;
							map.Data[x][y] = Map.TOWER;&#xD;
							engine.withDraw(100);&#xD;
						} else&#xD;
							JOptionPane.showMessageDialog(null,&#xD;
									&quot;No More Money!&quot;);&#xD;
					} else if (map.Data[x][y] == Map.TOWER) {&#xD;
						if (e.isAltDown()) {&#xD;
							showCharacteristics(x, y);&#xD;
						} else {&#xD;
&#xD;
							int amountToDeposit = GetTower(x, y).CurrentAmount / 2;&#xD;
							map.Data[x][y] = Map.BLOCKED;&#xD;
							engine.deposit(amountToDeposit);&#xD;
							Iterator&lt;Tower> i = TOWERS.iterator();&#xD;
							while (i.hasNext()) {&#xD;
								Tower tower = i.next();&#xD;
								if (tower.x == x &amp;&amp; tower.y == y)&#xD;
									i.remove();&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
&#xD;
			private void showCharacteristics(int x, int y) {&#xD;
				final Tower tower = GetTower(x, y);&#xD;
				final JFrame parent = new JFrame();&#xD;
&#xD;
				final JPanel informationPanel = new JPanel();&#xD;
				final JPanel strategyPanel = new JPanel();&#xD;
				final JPanel actionPanel = new JPanel();&#xD;
&#xD;
				currentTowerAmount.setEnabled(false);&#xD;
&#xD;
				strategyShow.setEnabled(false);&#xD;
				typeShow.setEnabled(false);&#xD;
&#xD;
				informationPanel.add(typeShow);&#xD;
&#xD;
				informationPanel.add(currentTowerAmount);&#xD;
&#xD;
				parent.add(informationPanel, BorderLayout.NORTH);&#xD;
&#xD;
				actionPanel.add(currentTowerStatusButton);&#xD;
				actionPanel.add(sellButton);&#xD;
				parent.add(actionPanel, BorderLayout.CENTER);&#xD;
&#xD;
				strategyPanel.add(Strategy1);&#xD;
				strategyPanel.add(Strategy2);&#xD;
				strategyPanel.add(Strategy3);&#xD;
				strategyPanel.add(Strategy4);&#xD;
				strategyPanel.add(strategyShow);&#xD;
				parent.add(strategyPanel, BorderLayout.SOUTH);&#xD;
&#xD;
				updateValues(tower);&#xD;
&#xD;
				parent.getContentPane().setLayout(new GridLayout(3, 3));&#xD;
&#xD;
				parent.pack();&#xD;
				parent.setLocationRelativeTo(null);&#xD;
				parent.setVisible(true);&#xD;
&#xD;
				parent.repaint();&#xD;
&#xD;
				currentTowerStatusButton&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								if (tower.improveLevel()) {&#xD;
									engine.withDraw(50);&#xD;
									updateValues(tower);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
				sellButton&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								map.Data[tower.x][tower.y] = Map.BLOCKED;&#xD;
								engine.deposit(tower.CurrentAmount / 2);&#xD;
								parent.setVisible(false);&#xD;
							}&#xD;
						});&#xD;
				Strategy1&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Closest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy2&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Farthest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy3&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Sickest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
				Strategy4&#xD;
						.addActionListener(new java.awt.event.ActionListener() {&#xD;
							@Override&#xD;
							public void actionPerformed(&#xD;
									java.awt.event.ActionEvent evt) {&#xD;
								tower.Strategy = TowerStrategy.Healthiest;&#xD;
								updateValues(tower);&#xD;
							}&#xD;
						});&#xD;
			}&#xD;
&#xD;
			private void updateValues(Tower tower) {&#xD;
				currentTowerStatusButton&#xD;
						.setText(&quot;Increase the power of tower with 50$ (current is: [&quot;&#xD;
								+ tower.Level + &quot;])&quot;);&#xD;
&#xD;
				sellButton.setText(&quot;Sell this tower ($&quot;&#xD;
						+ (tower.CurrentAmount / 2) + &quot;)&quot;);&#xD;
&#xD;
				currentTowerAmount&#xD;
						.setText(&quot;Amount you paid for this tower so far is: &quot;&#xD;
								+ tower.CurrentAmount);&#xD;
&#xD;
				// if (tower.Level &lt; 5)&#xD;
				// currentShooting.setText(&quot;Current Shooting rate is:  &quot;&#xD;
				// + tower.Shooting + &quot;  Update to  &quot; + (tower.Shooting&#xD;
				// +50));&#xD;
				// else&#xD;
				// currentShooting.setText(&quot;Current Shoothin rate is: &quot;&#xD;
				// + tower.Shooting + &quot; Cannot Update.&quot;);&#xD;
&#xD;
				strategyShow.setText(&quot;Strategy: &quot; + tower.Strategy.toString());&#xD;
				typeShow.setText(&quot;Type of Tower: &quot; + tower.Type.toString());&#xD;
&#xD;
			}&#xD;
&#xD;
			@Override&#xD;
			public void mouseReleased(MouseEvent e) {&#xD;
				setBackground(background);&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzGTAW6cEeSZe_WBkuFUeQ" name="GetTower" specification="_TqLAgG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzGTAm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzGTA26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzGTBG6cEeSZe_WBkuFUeQ" type="_SU4okW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Iterator&lt;Tower> i = TOWERS.iterator();&#xD;
		while (i.hasNext()) {&#xD;
			Tower tower = i.next();&#xD;
			if (tower.x == x &amp;&amp; tower.y == y)&#xD;
				return tower;&#xD;
		}&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_TlVj0G6cEeSZe_WBkuFUeQ" name="Runner" method="_TzD2w26cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_TlVj0m6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_TlVj026cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_TzoegG6cEeSZe_WBkuFUeQ">
                  <body>This is the constructor of our runner class and in this method we create&#xD;
	 * an instance of Game Engine</body>
                </ownedComment>
                <ownedParameter xmi:id="_TlVj0W6cEeSZe_WBkuFUeQ" type="_SUdx0G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TlWK4G6cEeSZe_WBkuFUeQ" name="createNewGame" visibility="private" method="_TzD2xW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzoegW6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for creating new instance of game</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlWK4W6cEeSZe_WBkuFUeQ" name="createEmptyMap" visibility="private" method="_TzEd0G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_Tzoegm6cEeSZe_WBkuFUeQ">
                  <body>Create a new empty map based on the user request for create new user&#xD;
	 * defined map</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlWx8G6cEeSZe_WBkuFUeQ" name="createMap" visibility="private" isStatic="true" method="_TzEd0W6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_Tzoeg26cEeSZe_WBkuFUeQ">
                  <body>just private method that is called by createNewGame()</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlWx8W6cEeSZe_WBkuFUeQ" name="engineInitializingObserving" visibility="private" method="_TzEd0m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzoehG6cEeSZe_WBkuFUeQ">
                  <body>Add observers to the engine class which in this case is Runner itself</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlXZAG6cEeSZe_WBkuFUeQ" name="createMainSurface" visibility="private" method="_TzFE4G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzoehW6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for painting the game environment</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlYAEG6cEeSZe_WBkuFUeQ" name="createButtons" isStatic="true" method="_TzFE4W6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzpFkG6cEeSZe_WBkuFUeQ">
                  <body>This methods is responsible for creating buttons and put them inside the&#xD;
	 * panel that we receive from engine which is received from surface in a&#xD;
	 * sequence of gets.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlYAEW6cEeSZe_WBkuFUeQ" name="work" visibility="private" method="_TzFr8G6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzpFkW6cEeSZe_WBkuFUeQ">
                  <body>Work() intends to handle ongoing play from the beginning of game to the&#xD;
	 * end of the game</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlYnIG6cEeSZe_WBkuFUeQ" name="allowPause" visibility="private" method="_TzFr8W6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzpFkm6cEeSZe_WBkuFUeQ">
                  <body>allowPause is called in short time boxes just to check if the&#xD;
	 * Pause/Resume button pressed or not</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlYnIW6cEeSZe_WBkuFUeQ" name="sleep" visibility="private" method="_TzFr8m6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzpFk26cEeSZe_WBkuFUeQ">
                  <body>This method handles sleeps during execution of thread</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlZOMG6cEeSZe_WBkuFUeQ" name="done" visibility="private" method="_TzFr826cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzpFlG6cEeSZe_WBkuFUeQ">
                  <body>An unused method to be called when the game is finished (Game Over or&#xD;
	 * Victory)</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TlZOMW6cEeSZe_WBkuFUeQ" name="handleMouseActions" visibility="private" method="_TzGTAG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzpFlW6cEeSZe_WBkuFUeQ">
                  <body>This method is responsible to react to user request based on mouse clicks&#xD;
	 * such as toggling between Tower and Scenary(path)</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TqIkQG6cEeSZe_WBkuFUeQ" name="main" isStatic="true" method="_TzD2wG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_Tzn3cG6cEeSZe_WBkuFUeQ">
                  <body>main method of the program it has not yet finished because we are going&#xD;
	 * to obtain game dimension from String[] args&#xD;
	 * &#xD;
	 * @param args&#xD;
	 *            is intended to get custom argument from user when running the&#xD;
	 *            program</body>
                </ownedComment>
                <ownedParameter xmi:id="_TqIkQW6cEeSZe_WBkuFUeQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TqJLUG6cEeSZe_WBkuFUeQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TqLAgG6cEeSZe_WBkuFUeQ" name="GetTower" isStatic="true" method="_TzGTAW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TqLAgW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TqLAgm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TqLAg26cEeSZe_WBkuFUeQ" type="_SU4okW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TwPzUG6cEeSZe_WBkuFUeQ" name="update" method="_TzEd026cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TwPzUW6cEeSZe_WBkuFUeQ" name="arg0" type="_TuHsYW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TwPzUm6cEeSZe_WBkuFUeQ" name="arg1" type="_TwFbQG6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0G_oW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0G_om6cEeSZe_WBkuFUeQ _Txo6cG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0G_om6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0G_oW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0HmsW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Hmsm6cEeSZe_WBkuFUeQ _Txqvom6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Hmsm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0HmsW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0INwW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0INwm6cEeSZe_WBkuFUeQ _TxrWsW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0INwm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0INwW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0I00W6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0I00m6cEeSZe_WBkuFUeQ _Txr9wW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0I00m6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0I00W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0Jb4W6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Jb4m6cEeSZe_WBkuFUeQ _Txsk0W6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Jb4m6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0Jb4W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0KC8G6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0KC8W6cEeSZe_WBkuFUeQ _TxuaAG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0KC8W6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0KC8G6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0KC826cEeSZe_WBkuFUeQ" name="" memberEnd="_T0KC9G6cEeSZe_WBkuFUeQ _TxvBEW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0KC9G6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0KC826cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0LREG6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0LREW6cEeSZe_WBkuFUeQ _Tx3j8G6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0LREW6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0LREG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0L4IG6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0L4IW6cEeSZe_WBkuFUeQ _Tx4LAW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0L4IW6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0L4IG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0L4I26cEeSZe_WBkuFUeQ" name="" memberEnd="_T0L4JG6cEeSZe_WBkuFUeQ _Tx4yEW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0L4JG6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0L4I26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0MfMW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0MfMm6cEeSZe_WBkuFUeQ _Tx5ZIG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0MfMm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0MfMW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0NGQW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0NGQm6cEeSZe_WBkuFUeQ _Tx6AMG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0NGQm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0NGQW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0NtUW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0NtUm6cEeSZe_WBkuFUeQ _Tx7OUG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0NtUm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0NtUW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0OUYW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0OUYm6cEeSZe_WBkuFUeQ _Tx71YW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0OUYm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0OUYW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0O7cG6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0O7cW6cEeSZe_WBkuFUeQ _Tx9DgG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0O7cW6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0O7cG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0O7c26cEeSZe_WBkuFUeQ" name="" memberEnd="_T0O7dG6cEeSZe_WBkuFUeQ _Tx9qkG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0O7dG6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0O7c26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0PigW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Pigm6cEeSZe_WBkuFUeQ _Tx-RoG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Pigm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0PigW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0QJkW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0QJkm6cEeSZe_WBkuFUeQ _Tx-4sW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0QJkm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0QJkW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0QwoW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Qwom6cEeSZe_WBkuFUeQ _Tx_fwW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Qwom6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0QwoW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0RXsW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0RXsm6cEeSZe_WBkuFUeQ _TyAG0W6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0RXsm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0RXsW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0R-wW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0R-wm6cEeSZe_WBkuFUeQ _TyBU8G6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0R-wm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0R-wW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0Sl0W6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Sl0m6cEeSZe_WBkuFUeQ _TyB8AG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Sl0m6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0Sl0W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0TM4W6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0TM4m6cEeSZe_WBkuFUeQ _TyCjEW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0TM4m6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0TM4W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0Tz8W6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Tz8m6cEeSZe_WBkuFUeQ _TyDKIW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Tz8m6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0Tz8W6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0UbAW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0UbAm6cEeSZe_WBkuFUeQ _TyEYQG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0UbAm6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0UbAW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0VCEG6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0VCEW6cEeSZe_WBkuFUeQ _TyFmYG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0VCEW6cEeSZe_WBkuFUeQ" name="" type="_SUdx0G6cEeSZe_WBkuFUeQ" association="_T0VCEG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_SGKQEG6cEeSZe_WBkuFUeQ" name="ui">
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_SKn5UG6cEeSZe_WBkuFUeQ" name="TowerType">
              <ownedLiteral xmi:id="_SKpHcW6cEeSZe_WBkuFUeQ" name="Regular"/>
              <ownedLiteral xmi:id="_SKpugG6cEeSZe_WBkuFUeQ" name="Mass"/>
              <ownedLiteral xmi:id="_SKpugW6cEeSZe_WBkuFUeQ" name="Riffle"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_SLKE0G6cEeSZe_WBkuFUeQ" name="TowerStrategy">
              <ownedLiteral xmi:id="_SPhncW6cEeSZe_WBkuFUeQ" name="Closest"/>
              <ownedLiteral xmi:id="_SPiOgG6cEeSZe_WBkuFUeQ" name="Farthest"/>
              <ownedLiteral xmi:id="_SPiOgW6cEeSZe_WBkuFUeQ" name="Sickest"/>
              <ownedLiteral xmi:id="_SPi1kG6cEeSZe_WBkuFUeQ" name="Healthiest"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_SPkDsG6cEeSZe_WBkuFUeQ" name="Status">
              <ownedComment xmi:id="_SY2ikG6cEeSZe_WBkuFUeQ">
                <body>possible values of each cell in the map&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <ownedLiteral xmi:id="_SPlR0G6cEeSZe_WBkuFUeQ" name="isPath"/>
              <ownedLiteral xmi:id="_SPlR0W6cEeSZe_WBkuFUeQ" name="isBlock"/>
              <ownedLiteral xmi:id="_SPl44G6cEeSZe_WBkuFUeQ" name="notDecided"/>
              <ownedLiteral xmi:id="_SPl44W6cEeSZe_WBkuFUeQ" name="isTower"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SPnHAG6cEeSZe_WBkuFUeQ" name="Cell">
              <ownedComment xmi:id="_SY2ikW6cEeSZe_WBkuFUeQ">
                <body>The MapGenerator class is using to make cells of the map based on this&#xD;
structure. It is kind of DataClass that holds the status of cell</body>
              </ownedComment>
              <ownedAttribute xmi:id="_SXxkgG6cEeSZe_WBkuFUeQ" name="value" type="_SPkDsG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYeIEG6cEeSZe_WBkuFUeQ" name="Cell" specification="_SPo8MG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SYeIEW6cEeSZe_WBkuFUeQ" type="_SPnHAG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>value = Status.notDecided;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SPo8MG6cEeSZe_WBkuFUeQ" name="Cell" method="_SYeIEG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_SPpjQG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SPpjQW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SPqKUG6cEeSZe_WBkuFUeQ" type="_SPnHAG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_SPt0sG6cEeSZe_WBkuFUeQ" name="Movement">
              <ownedComment xmi:id="_SY3JoG6cEeSZe_WBkuFUeQ">
                <body>Enum indicating the next movement that should be performed by the engine and&#xD;
critter&#xD;
&#xD;
@author Sasan&#xD;
 *</body>
              </ownedComment>
              <ownedLiteral xmi:id="_SPvp4G6cEeSZe_WBkuFUeQ" name="Up"/>
              <ownedLiteral xmi:id="_SPvp4W6cEeSZe_WBkuFUeQ" name="Down"/>
              <ownedLiteral xmi:id="_SPwQ8G6cEeSZe_WBkuFUeQ" name="Right"/>
              <ownedLiteral xmi:id="_SPwQ8W6cEeSZe_WBkuFUeQ" name="Left"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SU0XIW6cEeSZe_WBkuFUeQ" name="Map">
              <ownedComment xmi:id="_TzkNEG6cEeSZe_WBkuFUeQ">
                <body>The map is the holder of data that shows which cell of that two dimensional&#xD;
array is block, path or tower</body>
              </ownedComment>
              <ownedAttribute xmi:id="_TxfJcG6cEeSZe_WBkuFUeQ" name="MapGenerator" type="_SU2zYG6cEeSZe_WBkuFUeQ" association="_T0GYkW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TxgXkG6cEeSZe_WBkuFUeQ" name="CLEAR" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TxgXkW6cEeSZe_WBkuFUeQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxgXkm6cEeSZe_WBkuFUeQ" name="BLOCKED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Txg-oG6cEeSZe_WBkuFUeQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Txg-oW6cEeSZe_WBkuFUeQ" name="TOWER" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TxhlsG6cEeSZe_WBkuFUeQ" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxhlsW6cEeSZe_WBkuFUeQ" name="Width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxiMwW6cEeSZe_WBkuFUeQ" name="Height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Txiz0W6cEeSZe_WBkuFUeQ" name="TILE_SIZE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Txiz0m6cEeSZe_WBkuFUeQ" value="20"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Txja4G6cEeSZe_WBkuFUeQ" name="StartColumnIndex">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxkB8G6cEeSZe_WBkuFUeQ" name="StartRowIndex">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxkpAG6cEeSZe_WBkuFUeQ" name="Data">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TxkpAW6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty768G6cEeSZe_WBkuFUeQ" name="Map" specification="_TpzNEG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty768W6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty768m6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty76826cEeSZe_WBkuFUeQ" type="_SU0XIW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Width = width;&#xD;
		Height = height;&#xD;
		Data = new int[Width][Height];&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
		MapGenerator = new MapGenerator(Height, Width);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty8iAG6cEeSZe_WBkuFUeQ" name="setMapGenerator" specification="_TkhEcG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty8iAW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_SU2zYG6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>this.MapGenerator = mapGenerator;&#xD;
&#xD;
		this.Width = mapGenerator.getWidth();&#xD;
		this.Height = mapGenerator.getHeight();&#xD;
&#xD;
		Data = new int[Width][Height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty8iAm6cEeSZe_WBkuFUeQ" name="generateMap" specification="_TkhrgG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>while (MapGenerator.getPath().size() &lt; 50)&#xD;
			MapGenerator.RandomGenerate(Height, Width);&#xD;
&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty9JEG6cEeSZe_WBkuFUeQ" name="Map" specification="_Tp0bMG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty9JEW6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty9JEm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty9JE26cEeSZe_WBkuFUeQ" name="mapGenerator" type="_SU2zYG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Ty9JFG6cEeSZe_WBkuFUeQ" type="_SU0XIW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.MapGenerator = mapGenerator;&#xD;
		Data = new int[width][height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; width; i++)&#xD;
			for (int j = 0; j &lt; height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
&#xD;
		Width = width;&#xD;
		Height = height;&#xD;
&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty9wIG6cEeSZe_WBkuFUeQ" name="Map" specification="_TkhrgW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty9wIW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_SU2zYG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Ty9wIm6cEeSZe_WBkuFUeQ" type="_SU0XIW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>MapGenerator = mapGenerator;&#xD;
&#xD;
		Width = mapGenerator.getWidth();&#xD;
		Height = mapGenerator.getHeight();&#xD;
&#xD;
		Data = new int[Width][Height];&#xD;
		// MapGenerator = mapGenerator;&#xD;
		// MapGenerator.Map = mapGenerator.Map;&#xD;
		// MapGenerator.Path = mapGenerator.Path;&#xD;
		for (int i = 0; i &lt; Width; i++)&#xD;
			for (int j = 0; j &lt; Height; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					Data[i][j] = 0;&#xD;
				else&#xD;
					Data[i][j] = 1;&#xD;
&#xD;
		StartColumnIndex = 0.5f;&#xD;
		StartRowIndex = 0.5f;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty9wI26cEeSZe_WBkuFUeQ" name="paint" specification="_Tv7qQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty9wJG6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>for (int x = 0; x &lt; Runner.X_DIMENSION; x++) {&#xD;
			for (int y = 0; y &lt; Runner.Y_DIMENSION; y++) {&#xD;
&#xD;
				// so if the cell is blocks, draw a light grey block&#xD;
				// otherwise use a dark gray&#xD;
				graphic.setColor(Color.darkGray);&#xD;
				if (Data[y][x] == BLOCKED) {&#xD;
					graphic.setColor(Color.white);&#xD;
				}&#xD;
				if (Data[y][x] == TOWER) {&#xD;
					graphic.setColor(Color.blue);&#xD;
				}&#xD;
				// draw the rectangle with a dark outline&#xD;
				graphic.fillRect(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE,&#xD;
						TILE_SIZE);&#xD;
				graphic.setColor(graphic.getColor().darker());&#xD;
				graphic.drawRect(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE,&#xD;
						TILE_SIZE);&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (int x = 0; x &lt; Width; x++) {&#xD;
			for (int y = 0; y &lt; Height; y++) {&#xD;
&#xD;
				if (Data[y][x] == TOWER) {&#xD;
					graphic.setColor(Color.blue);&#xD;
&#xD;
					for (int i = 0; i &lt; Runner.TOWERS.size(); i++)&#xD;
						if (Runner.TOWERS.get(i).x == y&#xD;
								&amp;&amp; Runner.TOWERS.get(i).y == x) {&#xD;
							Tower tower = Runner.TOWERS.get(i);&#xD;
							drawCircle(graphic, x * TILE_SIZE, y * TILE_SIZE,&#xD;
									tower.Range * 20);&#xD;
						}&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		graphic.setColor(Color.orange);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty-XMG6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_Tv8RUG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty-XMW6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Ty-XMm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty-XM26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty-XNG6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty-XNW6cEeSZe_WBkuFUeQ" name="isBlocked" specification="_Tp23cG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty-XNm6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty-XN26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty-XOG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (isNotMap(x, y))&#xD;
			return true;&#xD;
		else&#xD;
			return Data[(int) y][(int) x] == BLOCKED;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty--QG6cEeSZe_WBkuFUeQ" name="isNotMap" specification="_Tp4FkG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty--QW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty--Qm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty--Q26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (x &lt; 0 || x > Width || y &lt; 0 || y > Height)&#xD;
			return true;&#xD;
		else&#xD;
			return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty--RG6cEeSZe_WBkuFUeQ" name="tryMapXYtoCellNumber" specification="_Tp4soG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty--RW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty--Rm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty--R26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>for (int i = 0; i &lt; 400; i = i + 20)&#xD;
			for (int j = 0; j &lt; 400; j = j + 20) {&#xD;
				if (x >= i &amp;&amp; x &lt;= i + 20)&#xD;
					if (y >= j &amp;&amp; y &lt;= j + 20)&#xD;
						return ((i / 20) + &quot;,&quot; + (j / 20));&#xD;
			}&#xD;
		return &quot;&quot;;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty_lUG6cEeSZe_WBkuFUeQ" name="UserDefinedMapValidation" specification="_Tp6h0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty_lUW6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty_lUm6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty_lU26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty_lVG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty_lVW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this.MapGenerator.getPath() != null) {&#xD;
			// this.MapGenerator.setPath(null);&#xD;
			this.MapGenerator.setPath(new ArrayList&lt;Movement>());&#xD;
			System.out.println(&quot;Map Editing...&quot;);&#xD;
			for (int i = 0; i &lt; height; i++)&#xD;
				for (int j = 0; j &lt; width; j++)&#xD;
					if (this.Data[i][j] == Map.CLEAR)&#xD;
						this.MapGenerator.Grid[i][j].value = Status.notDecided;&#xD;
					else&#xD;
						this.MapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
			MapGenerator validity = this.MapGenerator.mapEditing(entry, exit,&#xD;
					height, width);&#xD;
			if (validity == null)&#xD;
				return false;&#xD;
			return true;&#xD;
		} else {&#xD;
			System.out.println(&quot;Manually Generating...&quot;);&#xD;
			this.MapGenerator = new MapGenerator(height, width);&#xD;
			for (int i = 0; i &lt; height; i++)&#xD;
				for (int j = 0; j &lt; width; j++)&#xD;
					if (this.Data[i][j] == Map.CLEAR)&#xD;
						this.MapGenerator.Grid[i][j].value = Status.notDecided;&#xD;
					else&#xD;
						this.MapGenerator.Grid[i][j].value = Status.isBlock;&#xD;
			MapGenerator validity = this.MapGenerator.ManualGenerate(entry,&#xD;
					exit, height, width);&#xD;
			if (validity == null)&#xD;
				return false;&#xD;
&#xD;
			else {&#xD;
				// complete map;&#xD;
			}&#xD;
			return true;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_TkhEcG6cEeSZe_WBkuFUeQ" name="setMapGenerator" method="_Ty8iAG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TkhEcW6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_SU2zYG6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TkhrgG6cEeSZe_WBkuFUeQ" name="generateMap" method="_Ty8iAm6cEeSZe_WBkuFUeQ"/>
              <ownedOperation xmi:id="_TkhrgW6cEeSZe_WBkuFUeQ" name="Map" method="_Ty9wIG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_TkiSkW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_TkiSkm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Tkhrgm6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_SU2zYG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TkiSkG6cEeSZe_WBkuFUeQ" type="_SU0XIW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TpzNEG6cEeSZe_WBkuFUeQ" name="Map" method="_Ty768G6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_Tpz0IG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Tpz0IW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Tzk0IG6cEeSZe_WBkuFUeQ">
                  <body>Create a new map with some default contents&#xD;
	 * &#xD;
	 * @param width&#xD;
	 * @param height</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpzNEW6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpzNEm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpzNE26cEeSZe_WBkuFUeQ" type="_SU0XIW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Tp0bMG6cEeSZe_WBkuFUeQ" name="Map" method="_Ty9JEG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_Tp1CQm6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Tp1CQ26cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Tzk0IW6cEeSZe_WBkuFUeQ">
                  <body>This constructor is used by Load button&#xD;
	 * &#xD;
	 * @param width&#xD;
	 *            is the width map&#xD;
	 * &#xD;
	 * @param height&#xD;
	 *            is the height of the map&#xD;
	 * &#xD;
	 * @param mapGenerator&#xD;
	 *            to generate the path based on the loaded file</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tp0bMW6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp0bMm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp1CQG6cEeSZe_WBkuFUeQ" name="mapGenerator" type="_SU2zYG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Tp1CQW6cEeSZe_WBkuFUeQ" type="_SU0XIW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Tp23cG6cEeSZe_WBkuFUeQ" name="isBlocked" method="_Ty-XNW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzlbMG6cEeSZe_WBkuFUeQ">
                  <body>Check if a particular location on the map is blocked. Note that the x and&#xD;
	 * y parameters are floating point numbers meaning that we can be checking&#xD;
	 * partially across a grid cell.&#xD;
	 * &#xD;
	 * @param x&#xD;
	 *            The x position to check for blocking&#xD;
	 * @param y&#xD;
	 *            The y position to check for blocking&#xD;
	 * @return True if the location is blocked</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tp23cW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp23cm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp3egG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tp4FkG6cEeSZe_WBkuFUeQ" name="isNotMap" method="_Ty--QG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzlbMW6cEeSZe_WBkuFUeQ">
                  <body>This method will tell the caller if it is in the area of map&#xD;
	 * &#xD;
	 * @param x&#xD;
	 *            is the position in the x-Axis&#xD;
	 * @param y&#xD;
	 *            is the position in the y-Axis</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tp4FkW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp4Fkm6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp4Fk26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tp4soG6cEeSZe_WBkuFUeQ" name="tryMapXYtoCellNumber" isStatic="true" method="_Ty--RG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzlbMm6cEeSZe_WBkuFUeQ">
                  <body>This is very useful method that map the point (x,y) to the corresponding&#xD;
	 * cell in the array of [15][15] or any user preference when wanted to&#xD;
	 * create the map&#xD;
	 * &#xD;
	 * @param is&#xD;
	 *            the value x in the x-Axis&#xD;
	 * @param is&#xD;
	 *            the value of y-Axis</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tp5TsG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp5TsW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp5Tsm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tp6h0G6cEeSZe_WBkuFUeQ" name="UserDefinedMapValidation" method="_Ty_lUG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzlbM26cEeSZe_WBkuFUeQ">
                  <body>This method is responsible for checking if the user created map is valid&#xD;
	 * or not by checking the start point, end point and the path from start to&#xD;
	 * end&#xD;
	 * &#xD;
	 * @param entry&#xD;
	 * @param exit&#xD;
	 * @param height&#xD;
	 * @param width&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tp6h0W6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp6h0m6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp6h026cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp6h1G6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tp7I4G6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tv7qQG6cEeSZe_WBkuFUeQ" name="paint" method="_Ty9wI26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_Tzk0Im6cEeSZe_WBkuFUeQ">
                  <body>Render the map to the graphics context provided. The rendering is just&#xD;
	 * simple fill rectangles&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            The graphics context on which to draw the map</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tv7qQW6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Tv8RUG6cEeSZe_WBkuFUeQ" name="drawCircle" method="_Ty-XMG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_Tzk0I26cEeSZe_WBkuFUeQ">
                  <body>This method is used in when we want to show a circle around a tower for&#xD;
	 * the range of shooting&#xD;
	 * &#xD;
	 * @param graphic&#xD;
	 *            is the handle for depicting objects on it</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tv8RUW6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Tv84YG6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tv84YW6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tv84Ym6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SU2zYG6cEeSZe_WBkuFUeQ" name="MapGenerator">
              <ownedComment xmi:id="_TzeGcG6cEeSZe_WBkuFUeQ">
                <body>Creates a randomized map and a path from the starting point to the end point&#xD;
in it.&#xD;
&#xD;
@author Sasan&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_TxRuEG6cEeSZe_WBkuFUeQ" name="Grid" isStatic="true" type="_SPnHAG6cEeSZe_WBkuFUeQ" association="_T0FxgG6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TxSVIG6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxS8MG6cEeSZe_WBkuFUeQ" name="Path" isStatic="true" type="_SPt0sG6cEeSZe_WBkuFUeQ" isOrdered="true">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TxTjQG6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TxV_gG6cEeSZe_WBkuFUeQ" name="Height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TzetgG6cEeSZe_WBkuFUeQ" name="Width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TzfUkW6cEeSZe_WBkuFUeQ" name="StartingPoint">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tzf7oG6cEeSZe_WBkuFUeQ" name="EndPoint">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TyyJ8G6cEeSZe_WBkuFUeQ" name="MapGenerator" specification="_TpXvQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TyyJ8W6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TyyJ8m6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TyyJ826cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Grid = new Cell[height][width];&#xD;
		Path = new ArrayList&lt;Movement>();&#xD;
		Height = height;&#xD;
		Width = width;&#xD;
		StartingPoint = 0;&#xD;
		EndPoint = 0;&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j] = new Cell();&#xD;
&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j].value = Status.notDecided;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TyyxAG6cEeSZe_WBkuFUeQ" name="getStartinPoint" specification="_TkAuIG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TyyxAW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.StartingPoint;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TyyxAm6cEeSZe_WBkuFUeQ" name="getEndPoint" specification="_TkBVMG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TyyxA26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.EndPoint;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TyyxBG6cEeSZe_WBkuFUeQ" name="getWidth" specification="_TkBVMW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TyyxBW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.Width;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TyzYEG6cEeSZe_WBkuFUeQ" name="MapGenerator" specification="_TpaykG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TyzYEW6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TyzYEm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TyzYE26cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TyzYFG6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Grid = new Cell[height][width];&#xD;
		Path = new ArrayList&lt;Movement>();&#xD;
		StartingPoint = 0;&#xD;
		EndPoint = 0;&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j] = new Cell();&#xD;
&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				Grid[i][j].value = Status.notDecided;&#xD;
		LoadMap(file);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TyzYFW6cEeSZe_WBkuFUeQ" name="SaveMap" specification="_TpdO0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TyzYFm6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>File statText = new File(file);&#xD;
		FileOutputStream is = new FileOutputStream(statText);&#xD;
		OutputStreamWriter osw = new OutputStreamWriter(is);&#xD;
		Writer writer = new BufferedWriter(osw);&#xD;
		writer.write(Height + &quot;\r\n&quot;);&#xD;
		writer.write(Width + &quot;\r\n&quot;);&#xD;
		writer.write(this.StartingPoint + &quot;\r\n&quot;);&#xD;
		writer.write(this.EndPoint + &quot;\r\n&quot;);&#xD;
		for (int i = 0; i &lt; MapGenerator.Path.size(); i++)&#xD;
			writer.write(MapGenerator.Path.get(i).toString() + &quot;\r\n&quot;);&#xD;
		writer.close();&#xD;
		System.out.println(&quot;File saved!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Tyz_IG6cEeSZe_WBkuFUeQ" name="LoadMap" specification="_Tpec8G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Tyz_IW6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tyz_Im6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>System.out.println(&quot;Loading...&quot;);&#xD;
		BufferedReader br = new BufferedReader(new FileReader(file));&#xD;
		try {&#xD;
			String line = br.readLine();&#xD;
			this.Height = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.Width = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.StartingPoint = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			this.EndPoint = Integer.parseInt(line);&#xD;
			line = br.readLine();&#xD;
			while (line != null) {&#xD;
				switch (line) {&#xD;
				case &quot;Up&quot;:&#xD;
					this.Path.add(Movement.Up);&#xD;
					break;&#xD;
				case &quot;Down&quot;:&#xD;
					this.Path.add(Movement.Down);&#xD;
					break;&#xD;
				case &quot;Right&quot;:&#xD;
					this.Path.add(Movement.Right);&#xD;
					break;&#xD;
				case &quot;Left&quot;:&#xD;
					this.Path.add(Movement.Left);&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
				line = br.readLine();&#xD;
			}&#xD;
		} finally {&#xD;
			br.close();&#xD;
		}&#xD;
		int curI = this.StartingPoint, curJ = 0;&#xD;
		this.Grid[curI][curJ].value = Status.isPath;&#xD;
		for (int i = 0; i &lt; this.Path.size(); i++) {&#xD;
			Movement dir = this.Path.get(i);&#xD;
			switch (dir) {&#xD;
			case Up:&#xD;
				// Go Up&#xD;
				curI--;&#xD;
				break;&#xD;
			case Down:&#xD;
				// Go Down&#xD;
				curI++;&#xD;
				break;&#xD;
			case Left:&#xD;
				// Go Left&#xD;
				curJ--;&#xD;
				break;&#xD;
			case Right:&#xD;
				// Go Right&#xD;
				curJ++;&#xD;
				break;&#xD;
			default:&#xD;
				break;&#xD;
			}&#xD;
			if (curI &lt; Height &amp;&amp; curI >= 0 &amp;&amp; curJ &lt; Width &amp;&amp; curJ >= 0)&#xD;
				this.Grid[curI][curJ].value = Status.isPath;&#xD;
		}&#xD;
		for (int i = 0; i &lt; Height; i++)&#xD;
			for (int j = 0; j &lt; Width; j++)&#xD;
				if (this.Grid[i][j].value != Status.isPath)&#xD;
					this.Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Loaded:&quot;);&#xD;
		for (int i = 0; i &lt; Height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; Width; j++)&#xD;
				if (MapGenerator.Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; this.Path.size(); i++)&#xD;
			System.out.print(this.Path.get(i) + &quot; &quot;);&#xD;
&#xD;
		return this;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Tyz_I26cEeSZe_WBkuFUeQ" name="Deadend" specification="_TpfrEG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Tyz_JG6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tyz_JW6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tyz_Jm6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>try {&#xD;
			if ((i >= 0 &amp;&amp; i &lt;= Height - 2 &amp;&amp; Grid[i + 1][j].value == Status.notDecided)&#xD;
					|| (i >= 1 &amp;&amp; i &lt; Height &amp;&amp; Grid[i - 1][j].value == Status.notDecided)&#xD;
					|| (j >= 0 &amp;&amp; j &lt;= Width - 2 &amp;&amp; Grid[i][j + 1].value == Status.notDecided)&#xD;
					|| (j >= 1 &amp;&amp; j &lt; Width &amp;&amp; Grid[i][j - 1].value == Status.notDecided))&#xD;
				return false;&#xD;
		} catch (Exception e) {&#xD;
			return false;&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty0mMG6cEeSZe_WBkuFUeQ" name="DestinationCellAdjIsZero" specification="_Tpg5MG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty0mMW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty0mMm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty0mM26cEeSZe_WBkuFUeQ" name="Dir" type="_SPt0sG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Ty0mNG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>int adj = 0;&#xD;
		switch (Dir) {&#xD;
		case Up:&#xD;
			if (i > 0 &amp;&amp; j > 0 &amp;&amp; Grid[i - 1][j - 1].value == Status.isPath) // left&#xD;
																				// of&#xD;
																				// destination&#xD;
																				// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i - 1][j + 1].value == Status.isPath) // right of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 1 &amp;&amp; Grid[i - 2][j].value == Status.isPath) // top of&#xD;
																// destination&#xD;
																// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Down:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j > 0&#xD;
					&amp;&amp; Grid[i + 1][j - 1].value == Status.isPath) // left of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i &lt; Height - 1 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i + 1][j + 1].value == Status.isPath) // right of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i &lt; Height - 2 &amp;&amp; Grid[i + 2][j].value == Status.isPath) // bottom&#xD;
																			// of&#xD;
																			// destination&#xD;
																			// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Left:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j > 0&#xD;
					&amp;&amp; Grid[i + 1][j - 1].value == Status.isPath) // bottom of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j > 0 &amp;&amp; Grid[i - 1][j - 1].value == Status.isPath) // top&#xD;
																				// of&#xD;
																				// destination&#xD;
																				// cell&#xD;
				adj++;&#xD;
			if (j > 1 &amp;&amp; Grid[i][j - 2].value == Status.isPath) // left of&#xD;
																// destination&#xD;
																// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		case Right:&#xD;
			if (i &lt; Height - 1 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i + 1][j + 1].value == Status.isPath) // bottom of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (i > 0 &amp;&amp; j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i - 1][j + 1].value == Status.isPath) // top of&#xD;
																	// destination&#xD;
																	// cell&#xD;
				adj++;&#xD;
			if (j &lt; Width - 2 &amp;&amp; Grid[i][j + 2].value == Status.isPath) // right&#xD;
																		// of&#xD;
																		// destination&#xD;
																		// cell&#xD;
				adj++;&#xD;
			break;&#xD;
		default:&#xD;
			break;&#xD;
		}&#xD;
		if (adj == 0)&#xD;
			return true;&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty0mNW6cEeSZe_WBkuFUeQ" name="MoveIsPossible" specification="_TpiHUG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty0mNm6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty0mN26cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty0mOG6cEeSZe_WBkuFUeQ" name="Dir" type="_SPt0sG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Ty1NQG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>try {&#xD;
			if (((i > 0 &amp;&amp; Grid[i - 1][j].value == Status.notDecided &amp;&amp; Dir == Movement.Up)&#xD;
					|| (i &lt; Height - 1&#xD;
							&amp;&amp; Grid[i + 1][j].value == Status.notDecided &amp;&amp; Dir == Movement.Down)&#xD;
					|| (j > 0 &amp;&amp; Grid[i][j - 1].value == Status.notDecided &amp;&amp; Dir == Movement.Left) || (j &lt; Width - 1&#xD;
					&amp;&amp; Grid[i][j + 1].value == Status.notDecided &amp;&amp; Dir == Movement.Right))&#xD;
			// &amp;&amp; DestinationCellAdjIsZero(i, j, Dir)&#xD;
			)&#xD;
				return true;&#xD;
		} catch (Exception e) {&#xD;
			return false;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty1NQW6cEeSZe_WBkuFUeQ" name="RandomGenerate" specification="_TpjVcG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty1NQm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty1NQ26cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty1NRG6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>// Initializing&#xD;
		Random rnd = new Random();&#xD;
		int in = 0;&#xD;
		int out = rnd.nextInt(height);&#xD;
		StartingPoint = in;&#xD;
		EndPoint = out;&#xD;
		Runner.entry = StartingPoint;&#xD;
		Runner.exit = EndPoint;&#xD;
		// int in = scn.nextInt(height);&#xD;
		// int out = scn.nextInt(height);&#xD;
&#xD;
		int cur_i = 0, cur_j = 0, Dir;&#xD;
		Movement Direction = null;&#xD;
&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// Random Generation&#xD;
		while (!(cur_i == out &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				Dir = rnd.nextInt(4);&#xD;
				switch (Dir) {&#xD;
				case 0:&#xD;
					Direction = Movement.Up;&#xD;
					break;&#xD;
				case 1:&#xD;
					Direction = Movement.Down;&#xD;
					break;&#xD;
				case 2:&#xD;
					Direction = Movement.Left;&#xD;
					break;&#xD;
				case 3:&#xD;
					Direction = Movement.Right;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
				if (MoveIsPossible(cur_i, cur_j, Direction)) {&#xD;
					// Update(cur_i, cur_j, Direction);&#xD;
					switch (Direction) {&#xD;
					case Up:&#xD;
						// Go Up&#xD;
						cur_i--;&#xD;
						break;&#xD;
					case Down:&#xD;
						// Go Down&#xD;
						cur_i++;&#xD;
						break;&#xD;
					case Left:&#xD;
						// Go Left&#xD;
						cur_j--;&#xD;
						break;&#xD;
					case Right:&#xD;
						// Go Right&#xD;
						cur_j++;&#xD;
						break;&#xD;
					default:&#xD;
						break;&#xD;
					}&#xD;
					Grid[cur_i][cur_j].value = Status.isPath;&#xD;
					Path.add(Direction);&#xD;
				}&#xD;
			} else {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = Path.get(Path.size() - 1);&#xD;
				if (LastMove == null)&#xD;
					RandomGenerate(height, width);&#xD;
				Path.remove(Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty10UG6cEeSZe_WBkuFUeQ" name="ManualGenerate" specification="_TpkjkG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty10UW6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty10Um6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty10U26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty10VG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty10VW6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>StartingPoint = entry;&#xD;
		EndPoint = exit;&#xD;
		int cur_i = entry;&#xD;
		int cur_j = 0;&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// DFS&#xD;
		while (!(cur_i == exit &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				if (MoveIsPossible(cur_i, cur_j, Movement.Right)) {&#xD;
					cur_j++;&#xD;
					Path.add(Movement.Right);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Up)) {&#xD;
					cur_i--;&#xD;
					Path.add(Movement.Up);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Down)) {&#xD;
					cur_i++;&#xD;
					Path.add(Movement.Down);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Left)) {&#xD;
					cur_j--;&#xD;
					Path.add(Movement.Left);&#xD;
				}&#xD;
				Grid[cur_i][cur_j].value = Status.isPath;&#xD;
			} else if (!Path.isEmpty()) {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = Path.get(Path.size() - 1);&#xD;
				Path.remove(Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			if (Path.isEmpty() &amp;&amp; Deadend(cur_i, cur_j)) {&#xD;
				System.out&#xD;
						.println(&quot;There isn't a path between entry point and end point!&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty10Vm6cEeSZe_WBkuFUeQ" name="mapEditing" specification="_TpmYwG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty10V26cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty10WG6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty10WW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty10Wm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ty10W26cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>StartingPoint = entry;&#xD;
		EndPoint = exit;&#xD;
		int cur_i = entry;&#xD;
		int cur_j = 0;&#xD;
		Grid[cur_i][cur_j].value = Status.isPath;&#xD;
&#xD;
		// DFS&#xD;
		while (!(cur_i == exit &amp;&amp; cur_j == width - 1)) {&#xD;
			if (!Deadend(cur_i, cur_j)) {&#xD;
				if (MoveIsPossible(cur_i, cur_j, Movement.Right)) {&#xD;
					cur_j++;&#xD;
					this.Path.add(Movement.Right);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Up)) {&#xD;
					cur_i--;&#xD;
					this.Path.add(Movement.Up);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Down)) {&#xD;
					cur_i++;&#xD;
					this.Path.add(Movement.Down);&#xD;
				} else if (MoveIsPossible(cur_i, cur_j, Movement.Left)) {&#xD;
					cur_j--;&#xD;
					this.Path.add(Movement.Left);&#xD;
				}&#xD;
				Grid[cur_i][cur_j].value = Status.isPath;&#xD;
			} else if (!this.Path.isEmpty()) {&#xD;
				// Go back a move&#xD;
				Grid[cur_i][cur_j].value = Status.isBlock;&#xD;
				Movement LastMove = this.Path.get(this.Path.size() - 1);&#xD;
				this.Path.remove(this.Path.size() - 1);&#xD;
				switch (LastMove) {&#xD;
				case Up:&#xD;
					// Go back down&#xD;
					cur_i++;&#xD;
					break;&#xD;
				case Down:&#xD;
					// Go back up&#xD;
					cur_i--;&#xD;
					break;&#xD;
				case Left:&#xD;
					// Go back right&#xD;
					cur_j++;&#xD;
					break;&#xD;
				case Right:&#xD;
					// Go back left&#xD;
					cur_j--;&#xD;
					break;&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			if (this.Path.isEmpty() &amp;&amp; Deadend(cur_i, cur_j)) {&#xD;
				System.out&#xD;
						.println(&quot;There isn't a path between entry point and end point!&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
		// Finalizing&#xD;
		for (int i = 0; i &lt; height; i++)&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.notDecided)&#xD;
					Grid[i][j].value = Status.isBlock;&#xD;
&#xD;
		// Printing&#xD;
		System.out.println(&quot;Map Created:&quot;);&#xD;
		for (int i = 0; i &lt; height; i++) {&#xD;
			System.out.print(&quot;|&quot;);&#xD;
			for (int j = 0; j &lt; width; j++)&#xD;
				if (Grid[i][j].value == Status.isPath)&#xD;
					System.out.print(&quot;X|&quot;);&#xD;
				else&#xD;
					System.out.print(&quot; |&quot;);&#xD;
			System.out.println();&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; Path.size(); i++)&#xD;
			System.out.print(Path.get(i) + &quot; &quot;);&#xD;
		System.out.println(&quot;&quot;);&#xD;
		return this;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty2bYG6cEeSZe_WBkuFUeQ" name="setWidth" specification="_TpoN8G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty2bYW6cEeSZe_WBkuFUeQ" name="newWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.Width = newWidth;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty2bYm6cEeSZe_WBkuFUeQ" name="setStartingPoint" specification="_TppcEG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty2bY26cEeSZe_WBkuFUeQ" name="newStart">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.StartingPoint = newStart;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ty2bZG6cEeSZe_WBkuFUeQ" name="setEndPoint" specification="_TpqqMG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Ty2bZW6cEeSZe_WBkuFUeQ" name="newEnd">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		this.EndPoint = newEnd;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_TkAuIG6cEeSZe_WBkuFUeQ" name="getStartinPoint" method="_TyyxAG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzgisG6cEeSZe_WBkuFUeQ">
                  <body>getter of StartingPoint&#xD;
	 * &#xD;
	 * @return Starting Point</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpY9YG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TkBVMG6cEeSZe_WBkuFUeQ" name="getEndPoint" method="_TyyxAm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzgisW6cEeSZe_WBkuFUeQ">
                  <body>getter of EndPoint&#xD;
	 * &#xD;
	 * @return EndPoint</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpZkcG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TkBVMW6cEeSZe_WBkuFUeQ" name="getWidth" method="_TyyxBG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzhJwG6cEeSZe_WBkuFUeQ">
                  <body>get the Width of&#xD;
	 * &#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpZkcW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TpXvQG6cEeSZe_WBkuFUeQ" name="MapGenerator" method="_TyyJ8G6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_TpYWUG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_TpYWUW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_TpXvQW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpXvQm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpXvQ26cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TpaykG6cEeSZe_WBkuFUeQ" name="MapGenerator" method="_TyzYEG6cEeSZe_WBkuFUeQ" raisedException="_TvzucG6cEeSZe_WBkuFUeQ _TuGeQW6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_TpbZoW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_TpbZom6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_TzhJwW6cEeSZe_WBkuFUeQ">
                  <body>After loading map based on the file path in will fill it with new cell&#xD;
	 * for the path&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @throws NumberFormatException&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpaykW6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpaykm6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpayk26cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpbZoG6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TpdO0G6cEeSZe_WBkuFUeQ" name="SaveMap" method="_TyzYFW6cEeSZe_WBkuFUeQ" raisedException="_TuGeQW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzhJwm6cEeSZe_WBkuFUeQ">
                  <body>Save map with based on the given path&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpdO0W6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tpec8G6cEeSZe_WBkuFUeQ" name="LoadMap" method="_Tyz_IG6cEeSZe_WBkuFUeQ" raisedException="_TvzucG6cEeSZe_WBkuFUeQ _TuGeQW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzhJw26cEeSZe_WBkuFUeQ">
                  <body>This method will read the file to create a new map based on the inputs&#xD;
	 * &#xD;
	 * @param file&#xD;
	 * @return&#xD;
	 * @throws NumberFormatException&#xD;
	 * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tpec8W6cEeSZe_WBkuFUeQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpec8m6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TpfrEG6cEeSZe_WBkuFUeQ" name="Deadend" method="_Tyz_I26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzhJxG6cEeSZe_WBkuFUeQ">
                  <body>will check if the path has reached a dead-end&#xD;
	 * &#xD;
	 * @param i&#xD;
	 * @param j&#xD;
	 * @return true if it has found any dead-end</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpfrEW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpfrEm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpgSIG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tpg5MG6cEeSZe_WBkuFUeQ" name="DestinationCellAdjIsZero" method="_Ty0mMG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzhJxW6cEeSZe_WBkuFUeQ">
                  <body>Deprecate method that we used to search the path for adjacency with&#xD;
	 * another path when we are going to make the map based on user creation of&#xD;
	 * map&#xD;
	 * &#xD;
	 * @param i&#xD;
	 * @param j&#xD;
	 * @param Dir&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tpg5MW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpg5Mm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpg5M26cEeSZe_WBkuFUeQ" name="Dir" type="_SPt0sG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TphgQG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TpiHUG6cEeSZe_WBkuFUeQ" name="MoveIsPossible" method="_Ty0mNW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_Tzhw0G6cEeSZe_WBkuFUeQ">
                  <body>Check the new movement is possible or not&#xD;
	 * &#xD;
	 * @param i&#xD;
	 *            is the value on the X-Axis&#xD;
	 * @param j&#xD;
	 *            is the value on Y-Axis&#xD;
	 * @param Dir&#xD;
	 *            the next movement&#xD;
	 * @return true if it's possible and false if it's not possible</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpiHUW6cEeSZe_WBkuFUeQ" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpiHUm6cEeSZe_WBkuFUeQ" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpiuYG6cEeSZe_WBkuFUeQ" name="Dir" type="_SPt0sG6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TpiuYW6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TpjVcG6cEeSZe_WBkuFUeQ" name="RandomGenerate" method="_Ty1NQW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_Tzhw0W6cEeSZe_WBkuFUeQ">
                  <body>Generating a new map based on random numbers that starts with point(0,0)&#xD;
	 * and finished with the right edge.&#xD;
	 * &#xD;
	 * @return MapGenerator the generated map</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpjVcW6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpjVcm6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpj8gG6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TpkjkG6cEeSZe_WBkuFUeQ" name="ManualGenerate" method="_Ty10UG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_Tzhw0m6cEeSZe_WBkuFUeQ">
                  <body>Checks user defined map for validation&#xD;
	 * &#xD;
	 * @param entry&#xD;
	 * @param exit&#xD;
	 * @param height&#xD;
	 * @param width&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_TpkjkW6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpkjkm6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpkjk26cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TplKoG6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TplKoW6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TpmYwG6cEeSZe_WBkuFUeQ" name="mapEditing" method="_Ty10Vm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TpmYwW6cEeSZe_WBkuFUeQ" name="entry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TpmYwm6cEeSZe_WBkuFUeQ" name="exit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpm_0G6cEeSZe_WBkuFUeQ" name="height">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpm_0W6cEeSZe_WBkuFUeQ" name="width">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tpm_0m6cEeSZe_WBkuFUeQ" type="_SU2zYG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TpoN8G6cEeSZe_WBkuFUeQ" name="setWidth" method="_Ty2bYG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TpoN8W6cEeSZe_WBkuFUeQ" name="newWidth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TppcEG6cEeSZe_WBkuFUeQ" name="setStartingPoint" method="_Ty2bYm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TppcEW6cEeSZe_WBkuFUeQ" name="newStart">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TpqqMG6cEeSZe_WBkuFUeQ" name="setEndPoint" method="_Ty2bZG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TpqqMW6cEeSZe_WBkuFUeQ" name="newEnd">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SU4okW6cEeSZe_WBkuFUeQ" name="Tower">
              <ownedComment xmi:id="_TzulIG6cEeSZe_WBkuFUeQ">
                <body>Holds information about the tower such as Level and current paid amount for&#xD;
this tower&#xD;
&#xD;
@author Shahriar&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_TyVeAG6cEeSZe_WBkuFUeQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyWFEW6cEeSZe_WBkuFUeQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyWsIW6cEeSZe_WBkuFUeQ" name="Level">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyXTMW6cEeSZe_WBkuFUeQ" name="CurrentAmount">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyX6QW6cEeSZe_WBkuFUeQ" name="Range">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyYhUG6cEeSZe_WBkuFUeQ" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyZIYG6cEeSZe_WBkuFUeQ" name="Type" type="_SKn5UG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TyZvcG6cEeSZe_WBkuFUeQ" name="Strategy" type="_SLKE0G6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TyaWgG6cEeSZe_WBkuFUeQ" name="Shooting">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Tya9kG6cEeSZe_WBkuFUeQ" name="crittersInRange" type="_SUaHcW6cEeSZe_WBkuFUeQ" isOrdered="true" association="_T0XeUW6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Tya9kW6cEeSZe_WBkuFUeQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tya9km6cEeSZe_WBkuFUeQ" value="new ArrayList&lt;Critter>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TybkoG6cEeSZe_WBkuFUeQ" name="lastTimeSpan" type="_Tu7ksG6cEeSZe_WBkuFUeQ"/>
              <interfaceRealization xmi:id="_TwqqEG6cEeSZe_WBkuFUeQ" client="_SU4okW6cEeSZe_WBkuFUeQ" supplier="_TuITcW6cEeSZe_WBkuFUeQ" contract="_TuITcW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzOO0G6cEeSZe_WBkuFUeQ" name="Tower" specification="_TqtzEG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzOO0W6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzOO0m6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzOO026cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzOO1G6cEeSZe_WBkuFUeQ" name="currentAmount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzOO1W6cEeSZe_WBkuFUeQ" name="shooting">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzOO1m6cEeSZe_WBkuFUeQ" type="_SU4okW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.x = x;&#xD;
		this.y = y;&#xD;
		this.Level = level;&#xD;
		this.CurrentAmount = currentAmount;&#xD;
		this.Type = TowerType.Regular;&#xD;
		this.Strategy = TowerStrategy.Closest;&#xD;
		this.Shooting = shooting;&#xD;
		this.lastTimeSpan = new Date();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzOO126cEeSZe_WBkuFUeQ" name="improveLevel" specification="_TmOUoG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzOO2G6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this.Level &lt; 5) {&#xD;
			this.Shooting -= 50;&#xD;
			this.Level++;&#xD;
			this.CurrentAmount += 50;&#xD;
			if (this.Level >= 3 &amp;&amp; this.Level &lt;= 4)&#xD;
				this.Range++;&#xD;
			else if (this.Level == 5) {&#xD;
				this.Range++;&#xD;
			}&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzO14G6cEeSZe_WBkuFUeQ" name="update" specification="_TwttYG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzO14W6cEeSZe_WBkuFUeQ" name="arg0" type="_TuHsYW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TzO14m6cEeSZe_WBkuFUeQ" name="arg1" type="_TwFbQG6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>Critter critter = (Critter) arg0;&#xD;
		if (!crittersInRange.contains(critter))&#xD;
			crittersInRange.add(critter);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzO1426cEeSZe_WBkuFUeQ" name="checkIfIsinTheAreaOfTower" specification="_Tqw2YG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzO15G6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TzO15W6cEeSZe_WBkuFUeQ" name="xp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzO15m6cEeSZe_WBkuFUeQ" name="yp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzO1526cEeSZe_WBkuFUeQ" type="_SU4okW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>boolean isIn = false;&#xD;
		for (int x = 0; x &lt; Runner.X_DIMENSION; x++) {&#xD;
			for (int y = 0; y &lt; Runner.Y_DIMENSION; y++) {&#xD;
&#xD;
				if (map.Data[y][x] == Map.TOWER) {&#xD;
					int centerX = x;&#xD;
					int centerY = y;&#xD;
&#xD;
					if (Math.abs((int) centerX - xp / 20)&#xD;
							+ Math.abs((int) centerY - yp / 20) &lt;= Range)&#xD;
						isIn = true;&#xD;
					else&#xD;
						isIn = false;&#xD;
&#xD;
					if (isIn) {&#xD;
						for (int i = 0; i &lt; Runner.TOWERS.size(); i++)&#xD;
							if (Runner.TOWERS.get(i).x == centerY&#xD;
									&amp;&amp; Runner.TOWERS.get(i).y == centerX) {&#xD;
								Tower tower = Runner.TOWERS.get(i);&#xD;
								Engine.graphic.setColor(Color.yellow);&#xD;
								drawCircle(Engine.graphic, tower.y * 20,&#xD;
										tower.x * 20, tower.Range * 20,&#xD;
										tower.Type == Type.Regular ? 1&#xD;
												: tower.Type == Type.Mass ? 10&#xD;
														: 5);&#xD;
								return this;&#xD;
							}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (isIn)&#xD;
			return this;&#xD;
		else&#xD;
			return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzPc8G6cEeSZe_WBkuFUeQ" name="drawCircle" specification="_TwwJoG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzPc8W6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TzPc8m6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzPc826cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzPc9G6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzPc9W6cEeSZe_WBkuFUeQ" name="stroke">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// graphic.setStroke(new BasicStroke(stroke));&#xD;
		graphic.drawOval(x - radius + 10, y - radius + 10, radius * 2,&#xD;
				radius * 2);&#xD;
		// graphic.setStroke(new BasicStroke(1));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_TmOUoG6cEeSZe_WBkuFUeQ" name="improveLevel" method="_TzOO126cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TqwPUG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_TqtzEG6cEeSZe_WBkuFUeQ" name="Tower" method="_TzOO0G6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_TqvBMW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_TqvBMm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_TqtzEW6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TquaIG6cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TquaIW6cEeSZe_WBkuFUeQ" name="level">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TquaIm6cEeSZe_WBkuFUeQ" name="currentAmount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TquaI26cEeSZe_WBkuFUeQ" name="shooting">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TqvBMG6cEeSZe_WBkuFUeQ" type="_SU4okW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Tqw2YG6cEeSZe_WBkuFUeQ" name="checkIfIsinTheAreaOfTower" method="_TzO1426cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TqxdcG6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TqxdcW6cEeSZe_WBkuFUeQ" name="xp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tqxdcm6cEeSZe_WBkuFUeQ" name="yp">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TqyEgG6cEeSZe_WBkuFUeQ" type="_SU4okW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TwttYG6cEeSZe_WBkuFUeQ" name="update" method="_TzO14G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TwttYW6cEeSZe_WBkuFUeQ" name="arg0" type="_TuHsYW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TwttYm6cEeSZe_WBkuFUeQ" name="arg1" type="_TwFbQG6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TwwJoG6cEeSZe_WBkuFUeQ" name="drawCircle" method="_TzPc8G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TwwJoW6cEeSZe_WBkuFUeQ" name="graphic" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TwwJom6cEeSZe_WBkuFUeQ" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TwwJo26cEeSZe_WBkuFUeQ" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TwwwsG6cEeSZe_WBkuFUeQ" name="radius">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TwwwsW6cEeSZe_WBkuFUeQ" name="stroke">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_TqbfMG6cEeSZe_WBkuFUeQ" name="Surface">
              <ownedComment xmi:id="_Tzt-EG6cEeSZe_WBkuFUeQ">
                <body>This is the main element of the game, Surface tends to hold and draw each and&#xD;
every UI elements we have in the game It should be complete over the time&#xD;
Creation of Surface is the common thing between all games and you can find&#xD;
many similar things like this which actually this one is also influenced by a&#xD;
piece of code I found somewhere else.&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_TyNiMG6cEeSZe_WBkuFUeQ" name="Strategy" type="_TuFQIG6cEeSZe_WBkuFUeQ" association="_T0VCE26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TyOwUG6cEeSZe_WBkuFUeQ" name="prevRow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyPXYW6cEeSZe_WBkuFUeQ" name="prevCol" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyP-cW6cEeSZe_WBkuFUeQ" name="RowChanged">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyP-cm6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyQlgW6cEeSZe_WBkuFUeQ" name="PreviousRowLeftBlock">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyQlgm6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyRMkW6cEeSZe_WBkuFUeQ" name="PreviousRowRightBlock">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyRMkm6cEeSZe_WBkuFUeQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyRzoW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_T0VpIW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TySasW6cEeSZe_WBkuFUeQ" name="Panel" type="_Tu0P8G6cEeSZe_WBkuFUeQ" association="_T0WQMW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TyTBwW6cEeSZe_WBkuFUeQ" name="Frame" isStatic="true" type="_Tuzo4G6cEeSZe_WBkuFUeQ" association="_T0W3QW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzLykG6cEeSZe_WBkuFUeQ" name="Surface" specification="_TqfJkG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzLykW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TzLykm6cEeSZe_WBkuFUeQ" name="engine" type="_SUx64G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TzLyk26cEeSZe_WBkuFUeQ" type="_TqbfMG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>this.map = map;&#xD;
		Strategy = engine.getStrategy();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzMZoG6cEeSZe_WBkuFUeQ" name="refreshSurface" specification="_TwnmwG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzMZoW6cEeSZe_WBkuFUeQ" name="g" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>g.setColor(Color.black);&#xD;
		g.fillRect(0, 0, 500, 500);&#xD;
&#xD;
		g.translate(100, 100);&#xD;
		map.paint(g);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_TqfJkG6cEeSZe_WBkuFUeQ" name="Surface" method="_TzLykG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_TqfwoG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_TqfwoW6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_TqfJkW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TqfJkm6cEeSZe_WBkuFUeQ" name="engine" type="_SUx64G6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Tqfwom6cEeSZe_WBkuFUeQ" type="_TqbfMG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_TwnmwG6cEeSZe_WBkuFUeQ" name="refreshSurface" method="_TzMZoG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TwnmwW6cEeSZe_WBkuFUeQ" name="g" type="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0FxgG6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0FxgW6cEeSZe_WBkuFUeQ _TxRuEG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0FxgW6cEeSZe_WBkuFUeQ" name="" type="_SU2zYG6cEeSZe_WBkuFUeQ" association="_T0FxgG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0GYkW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0GYkm6cEeSZe_WBkuFUeQ _TxfJcG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0GYkm6cEeSZe_WBkuFUeQ" name="" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_T0GYkW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0VCE26cEeSZe_WBkuFUeQ" name="" memberEnd="_T0VCFG6cEeSZe_WBkuFUeQ _TyNiMG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0VCFG6cEeSZe_WBkuFUeQ" name="" type="_TqbfMG6cEeSZe_WBkuFUeQ" association="_T0VCE26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0VpIW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0VpIm6cEeSZe_WBkuFUeQ _TyRzoW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0VpIm6cEeSZe_WBkuFUeQ" name="" type="_TqbfMG6cEeSZe_WBkuFUeQ" association="_T0VpIW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0WQMW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0WQMm6cEeSZe_WBkuFUeQ _TySasW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0WQMm6cEeSZe_WBkuFUeQ" name="" type="_TqbfMG6cEeSZe_WBkuFUeQ" association="_T0WQMW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0W3QW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0W3Qm6cEeSZe_WBkuFUeQ _TyTBwW6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0W3Qm6cEeSZe_WBkuFUeQ" name="" type="_TqbfMG6cEeSZe_WBkuFUeQ" association="_T0W3QW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0XeUW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0XeUm6cEeSZe_WBkuFUeQ _Tya9kG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0XeUm6cEeSZe_WBkuFUeQ" name="" type="_SU4okW6cEeSZe_WBkuFUeQ" association="_T0XeUW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_SGdyEG6cEeSZe_WBkuFUeQ" name="engine">
            <packagedElement xmi:type="uml:Class" xmi:id="_SK-eoG6cEeSZe_WBkuFUeQ" name="ButtonHandler">
              <ownedComment xmi:id="_SY17gG6cEeSZe_WBkuFUeQ">
                <body>This class would be used when we want to handle keyboard interactions from&#xD;
the player We may use map it for map creation it extends KeyAdapter</body>
              </ownedComment>
              <generalization xmi:id="_SW-TQG6cEeSZe_WBkuFUeQ" general="_SVmaQG6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYadsG6cEeSZe_WBkuFUeQ" name="ButtonHandler" specification="_SLA64G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SYadsW6cEeSZe_WBkuFUeQ" type="_SK-eoG6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>System.out.println(&quot; Button handler initialised! &quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYbEwG6cEeSZe_WBkuFUeQ" name="keyPressed" specification="_SW7P8G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SYbr0G6cEeSZe_WBkuFUeQ" name="key" type="_SVoPcW6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>switch (key.getKeyCode()) {&#xD;
		case KeyEvent.VK_UP:&#xD;
			// Critter..get(0).setUp(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_DOWN:&#xD;
			// Critter.critters.get(0).setDown(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_LEFT:&#xD;
			// Critter.critters.get(0).setLeft(true);&#xD;
			break;&#xD;
		case KeyEvent.VK_RIGHT:&#xD;
			// Critter.critters.get(0).setRight(true);&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SYcS4G6cEeSZe_WBkuFUeQ" name="keyReleased" specification="_SW9FIG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SYcS4W6cEeSZe_WBkuFUeQ" name="key" type="_SVoPcW6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>switch (key.getKeyCode()) {&#xD;
		case KeyEvent.VK_UP:&#xD;
			// Critter.critters.get(0).setUp(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_DOWN:&#xD;
			// Critter.critters.get(0).setDown(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_LEFT:&#xD;
			// Critter.critters.get(0).setLeft(false);&#xD;
			break;&#xD;
		case KeyEvent.VK_RIGHT:&#xD;
&#xD;
			// Critter.critters.get(0).setRight(false);&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SLA64G6cEeSZe_WBkuFUeQ" name="ButtonHandler" method="_SYadsG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_SLA64W6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SLBh8G6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SLBh8W6cEeSZe_WBkuFUeQ" type="_SK-eoG6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SW7P8G6cEeSZe_WBkuFUeQ" name="keyPressed" method="_SYbEwG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SW7P8W6cEeSZe_WBkuFUeQ" name="key" type="_SVoPcW6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SW9FIG6cEeSZe_WBkuFUeQ" name="keyReleased" method="_SYcS4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_SW9sMG6cEeSZe_WBkuFUeQ" name="key" type="_SVoPcW6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SUx64G6cEeSZe_WBkuFUeQ" name="Engine">
              <ownedComment xmi:id="_TzvMMG6cEeSZe_WBkuFUeQ">
                <body>This class is responsible for the game logic including the movements,&#xD;
creation of critters, accounting of the game and so on. In case of&#xD;
restarting, this class would be initialized again and its noteworthy to know&#xD;
that we make the constructor of this class private and we are going to&#xD;
initialize this class using initialEngine which is a static method returning&#xD;
new instance of class&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Tw9lAG6cEeSZe_WBkuFUeQ" general="_TuHsYW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TyfPAG6cEeSZe_WBkuFUeQ" name="Panel" type="_Tu0P8G6cEeSZe_WBkuFUeQ" association="_T0YFYW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_Tyf2EG6cEeSZe_WBkuFUeQ" name="MAP" isStatic="true" type="_SU0XIW6cEeSZe_WBkuFUeQ" association="_T0YscW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TygdIG6cEeSZe_WBkuFUeQ" name="MONEY" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TygdIW6cEeSZe_WBkuFUeQ" value="1000"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyhEMG6cEeSZe_WBkuFUeQ" name="Surface" type="_TqbfMG6cEeSZe_WBkuFUeQ" association="_T0ZTgG6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TyhrQG6cEeSZe_WBkuFUeQ" name="critters" isStatic="true" type="_SUaHcW6cEeSZe_WBkuFUeQ" isOrdered="true" association="_T0Z6kG6cEeSZe_WBkuFUeQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TyhrQW6cEeSZe_WBkuFUeQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyiSUW6cEeSZe_WBkuFUeQ" name="gameLevelandNumberofCritters" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Tyi5YG6cEeSZe_WBkuFUeQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TyjgcG6cEeSZe_WBkuFUeQ" name="IS_CREATE_CRITTER" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_TyjgcW6cEeSZe_WBkuFUeQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_TykHgG6cEeSZe_WBkuFUeQ" name="graphic" isStatic="true" type="_Tt1YgW6cEeSZe_WBkuFUeQ" association="_T0Z6k26cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TykukG6cEeSZe_WBkuFUeQ" name="engine" visibility="private" isStatic="true" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0ahoW6cEeSZe_WBkuFUeQ"/>
              <ownedAttribute xmi:id="_TylVoG6cEeSZe_WBkuFUeQ" name="strategy" type="_TuFQIG6cEeSZe_WBkuFUeQ" isReadOnly="true" association="_T0bIsW6cEeSZe_WBkuFUeQ"/>
              <interfaceRealization xmi:id="_Tw23UG6cEeSZe_WBkuFUeQ" client="_SUx64G6cEeSZe_WBkuFUeQ" supplier="_TuITcW6cEeSZe_WBkuFUeQ" contract="_TuITcW6cEeSZe_WBkuFUeQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzR5MG6cEeSZe_WBkuFUeQ" name="initialEngine" specification="_Tq6nYG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzR5MW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TzR5Mm6cEeSZe_WBkuFUeQ" name="createNew">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_TzR5M26cEeSZe_WBkuFUeQ" type="_SUx64G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>MAP = map;&#xD;
		if (engine == null || createNew)&#xD;
			engine = new Engine();&#xD;
		return engine;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzSgQG6cEeSZe_WBkuFUeQ" name="Engine" specification="_TmxuQG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzSgQW6cEeSZe_WBkuFUeQ" type="_SUx64G6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Surface = new Surface(MAP, this);&#xD;
		critters = new ArrayList&lt;Critter>();&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++) {&#xD;
			Critter critter = Critter.createCritter(MAP, MAP.StartColumnIndex,&#xD;
					MAP.StartRowIndex, gameLevelandNumberofCritters);&#xD;
			critters.add(critter);&#xD;
			critter.addObserver(this);&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzSgQm6cEeSZe_WBkuFUeQ" name="update" specification="_Tw56oG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzSgQ26cEeSZe_WBkuFUeQ" name="critterArg" type="_TuHsYW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_TzSgRG6cEeSZe_WBkuFUeQ" name="towerArg" type="_TwFbQG6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>Critter critter = (Critter) critterArg;&#xD;
		Tower tower = (Tower) towerArg;&#xD;
		Critter tempCritter = null;&#xD;
&#xD;
		if (tower.Strategy == TowerStrategy.Closest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			int minDX = 1000;&#xD;
			int minDY = 1000;&#xD;
			for (int i = 0; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (Math.abs((tower.crittersInRange.get(i).getX()) - tower.x) &lt; minDX&#xD;
						|| Math.abs((tower.crittersInRange.get(i).getY())&#xD;
								- tower.y) &lt; minDY) {&#xD;
					minDX = Math.abs((tower.crittersInRange.get(i).getX())&#xD;
							- tower.x);&#xD;
					minDY = Math.abs((tower.crittersInRange.get(i).getY())&#xD;
							- tower.y);&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
				}&#xD;
		} else if (tower.Strategy == TowerStrategy.Farthest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			int maxDX = 0;&#xD;
			int maxDY = 0;&#xD;
			for (int i = 0; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (Math.abs(tower.crittersInRange.get(i).getX() - tower.x) > maxDX&#xD;
						|| Math.abs(tower.crittersInRange.get(i).getY()&#xD;
								- tower.y) > maxDY) {&#xD;
					maxDX = Math.abs((tower.crittersInRange.get(i).getX())&#xD;
							- tower.x);&#xD;
					maxDY = Math.abs((tower.crittersInRange.get(i).getY())&#xD;
							- tower.y);&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
				}&#xD;
		} else if (tower.Strategy == TowerStrategy.Healthiest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			tempCritter = tower.crittersInRange.get(0);&#xD;
			for (int i = 1; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (tower.crittersInRange.get(i).getExistingLife() > tempCritter&#xD;
						.getExistingLife())&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
		} else if (tower.Strategy == TowerStrategy.Sickest&#xD;
				&amp;&amp; !tower.crittersInRange.isEmpty()) {&#xD;
			tempCritter = tower.crittersInRange.get(0);&#xD;
			for (int i = 1; i &lt; tower.crittersInRange.size(); i++)&#xD;
				if (tower.crittersInRange.get(i).getExistingLife() &lt; tempCritter&#xD;
						.getExistingLife())&#xD;
					tempCritter = tower.crittersInRange.get(i);&#xD;
		}&#xD;
		if (critter == tempCritter) {&#xD;
			Date dateobj = new Date();&#xD;
			if (dateobj.getTime() - tower.lastTimeSpan.getTime() > tower.Shooting) {&#xD;
				int shootingType = 0;&#xD;
				if (tower.Type == TowerType.Regular)&#xD;
					shootingType = 1;&#xD;
				else if (tower.Type == TowerType.Mass)&#xD;
					shootingType = 10;&#xD;
				else {&#xD;
					shootingType = 2;&#xD;
					tower.Shooting = 50;&#xD;
				}&#xD;
				critter.setExistingLife((int) (critter.getExistingLife() - shootingType));&#xD;
				tower.lastTimeSpan = dateobj;&#xD;
			}&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzTHUG6cEeSZe_WBkuFUeQ" name="resetMoney" specification="_Tmy8YG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>MONEY = 1000;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzTHUW6cEeSZe_WBkuFUeQ" name="withDraw" specification="_Tq8ckG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzTHUm6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (checkBalance())&#xD;
			MONEY -= amount;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzTuYG6cEeSZe_WBkuFUeQ" name="deposit" specification="_Tq9DoG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzTuYW6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>MONEY += amount;&#xD;
		setChanged();&#xD;
		notifyObservers(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzTuYm6cEeSZe_WBkuFUeQ" name="checkBalance" specification="_TmzjcG6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzTuY26cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (MONEY >= 100)&#xD;
			return true;&#xD;
		else&#xD;
			return false;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzTuZG6cEeSZe_WBkuFUeQ" name="setStrategy" specification="_Tw8W4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzTuZW6cEeSZe_WBkuFUeQ" name="strategy" type="_TuFQIG6cEeSZe_WBkuFUeQ"/>
                <language>java</language>
                <body>this.strategy = strategy;&#xD;
		Surface.Strategy = strategy;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzUVcG6cEeSZe_WBkuFUeQ" name="playing" specification="_Tm0KgG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>if (Runner.userEditing) {&#xD;
			critters = null;&#xD;
			refreshSurface();&#xD;
			strategy.show();&#xD;
			return;&#xD;
		}&#xD;
		if (critters == null) {&#xD;
			critters = new ArrayList&lt;Critter>();&#xD;
			for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
				if (critters.size() &lt; gameLevelandNumberofCritters) {&#xD;
					Critter critter = Critter.createCritter(MAP,&#xD;
							MAP.StartColumnIndex, MAP.StartRowIndex,&#xD;
							gameLevelandNumberofCritters);&#xD;
					critter.addObserver(this);&#xD;
					critters.add(critter);&#xD;
&#xD;
					for (Tower tower : Runner.TOWERS) {&#xD;
						critter.addObserver(tower);&#xD;
					}&#xD;
				}&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			if (critters.get(i).isToReduceTheMoney()) {&#xD;
				deposit(200);&#xD;
				critters.get(i).setToReduceTheMoney(false);&#xD;
			}&#xD;
&#xD;
		boolean toNewLevel = true;&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			if (critters.get(i).getExistingLife() > 0) {&#xD;
				toNewLevel = false;&#xD;
			}&#xD;
&#xD;
		if (toNewLevel) {&#xD;
			critters = null;&#xD;
			nextLevel();&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		graphic = refreshSurface();&#xD;
&#xD;
		for (int i = 0; i &lt; gameLevelandNumberofCritters; i++)&#xD;
			critters.get(i).paint(graphic);&#xD;
&#xD;
		strategy.show();&#xD;
		try {&#xD;
			Thread.sleep(4);&#xD;
		} catch (Exception e) {&#xD;
&#xD;
		}&#xD;
&#xD;
		for (int index = 0; index &lt; gameLevelandNumberofCritters; index++)&#xD;
			critters.get(index).moving(5 + index, MAP);&#xD;
&#xD;
		try {&#xD;
			for (int index = 0; index &lt; gameLevelandNumberofCritters; index++) {&#xD;
				critters.get(index).moving(index % 5, MAP);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			// TODO: handle exception&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzUVcW6cEeSZe_WBkuFUeQ" name="refreshSurface" specification="_Tm0KgW6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_TzUVcm6cEeSZe_WBkuFUeQ" type="_Tt1YgW6cEeSZe_WBkuFUeQ" direction="return"/>
                <language>java</language>
                <body>Graphics2D g = (Graphics2D) strategy.getDrawGraphics();&#xD;
		Surface.refreshSurface(g);&#xD;
		strategy.show();&#xD;
		return g;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzUVc26cEeSZe_WBkuFUeQ" name="nextLevel" specification="_Tm0Kgm6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>JOptionPane.showMessageDialog(null,&#xD;
				&quot;You Are Victorious! Press start and go to level: &quot;&#xD;
						+ (gameLevelandNumberofCritters + 1));&#xD;
&#xD;
		Engine.IS_CREATE_CRITTER = true;&#xD;
		gameLevelandNumberofCritters++;&#xD;
		deposit(500);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TzU8gG6cEeSZe_WBkuFUeQ" name="setGameOver" specification="_Tm0xkG6cEeSZe_WBkuFUeQ">
                <language>java</language>
                <body>JOptionPane.showMessageDialog(null, &quot;Game Over&quot;);&#xD;
		critters = null;&#xD;
		for (Tower tower : Runner.TOWERS) {&#xD;
			MAP.Data[tower.x][tower.y] = Map.BLOCKED;&#xD;
		}&#xD;
		Runner.TOWERS.clear();&#xD;
		Engine.IS_CREATE_CRITTER = true;&#xD;
		gameLevelandNumberofCritters = 1;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_TmxuQG6cEeSZe_WBkuFUeQ" name="Engine" visibility="private" method="_TzSgQG6cEeSZe_WBkuFUeQ">
                <eAnnotations xmi:id="_TmyVUW6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_TmyVUm6cEeSZe_WBkuFUeQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_TzvzQW6cEeSZe_WBkuFUeQ">
                  <body>private constructor of Engine class that initialize map, map validation,&#xD;
	 * set the default value for money (1000), create surface based on the new&#xD;
	 * map. Here we also create two critter for our game and can be dynamic&#xD;
	 * based on the level of the game. For now we hard coded the creation of&#xD;
	 * these two critters.</body>
                </ownedComment>
                <ownedParameter xmi:id="_TmyVUG6cEeSZe_WBkuFUeQ" type="_SUx64G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Tmy8YG6cEeSZe_WBkuFUeQ" name="resetMoney" method="_TzTHUG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzwaUG6cEeSZe_WBkuFUeQ">
                  <body>this methos is responsible for reseting game settings</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_TmzjcG6cEeSZe_WBkuFUeQ" name="checkBalance" method="_TzTuYm6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzwaU26cEeSZe_WBkuFUeQ">
                  <body>It will be called whenever we want to make sure the player wont exceed&#xD;
	 * the amount it has for buying towers.&#xD;
	 * &#xD;
	 * @return will return true/false to indicate if the user positive balance&#xD;
	 *         or not.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tq9qsG6cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tm0KgG6cEeSZe_WBkuFUeQ" name="playing" method="_TzUVcG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzwaVW6cEeSZe_WBkuFUeQ">
                  <body>This public method is playing an important role in the game. It has the&#xD;
	 * game logic inside to be called by the thread frequently.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Tm0KgW6cEeSZe_WBkuFUeQ" name="refreshSurface" method="_TzUVcW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzxBYG6cEeSZe_WBkuFUeQ">
                  <body>depicting latest changes on the screen&#xD;
	 * &#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tw898G6cEeSZe_WBkuFUeQ" type="_Tt1YgW6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Tm0Kgm6cEeSZe_WBkuFUeQ" name="nextLevel" method="_TzUVc26cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzxBYW6cEeSZe_WBkuFUeQ">
                  <body>Transition from one level to another</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Tm0xkG6cEeSZe_WBkuFUeQ" name="setGameOver" isStatic="true" method="_TzU8gG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzxBYm6cEeSZe_WBkuFUeQ">
                  <body>This static method is called when the player cannot defend well from&#xD;
	 * critters and one critter reach the end point</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Tq6nYG6cEeSZe_WBkuFUeQ" name="initialEngine" isStatic="true" method="_TzR5MG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzvzQG6cEeSZe_WBkuFUeQ">
                  <body>Static method which is responsible for creating an instance of class&#xD;
	 * Engine and is accessible from outside because it's static method</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tq6nYW6cEeSZe_WBkuFUeQ" name="map" type="_SU0XIW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Tq6nYm6cEeSZe_WBkuFUeQ" name="createNew">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Tq7OcG6cEeSZe_WBkuFUeQ" type="_SUx64G6cEeSZe_WBkuFUeQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Tq8ckG6cEeSZe_WBkuFUeQ" name="withDraw" method="_TzTHUW6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzwaUW6cEeSZe_WBkuFUeQ">
                  <body>This is part of accounting system of the our game which will reduce the&#xD;
	 * amount of the user deposited. Then it will refresh the text of label for&#xD;
	 * showing the remaining amount of money&#xD;
	 * &#xD;
	 * @param amount&#xD;
	 *            represents the amount of money should be reduced from the&#xD;
	 *            deposit</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tq8ckW6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tq9DoG6cEeSZe_WBkuFUeQ" name="deposit" method="_TzTuYG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzwaUm6cEeSZe_WBkuFUeQ">
                  <body>This method will act in opposite of withdraw. it is used full when the&#xD;
	 * player sells the tower for half of the prices it pays for.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tq9DoW6cEeSZe_WBkuFUeQ" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Tw56oG6cEeSZe_WBkuFUeQ" name="update" method="_TzSgQm6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_Tw56oW6cEeSZe_WBkuFUeQ" name="critterArg" type="_TuHsYW6cEeSZe_WBkuFUeQ"/>
                <ownedParameter xmi:id="_Tw6hsG6cEeSZe_WBkuFUeQ" name="towerArg" type="_TwFbQG6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Tw8W4G6cEeSZe_WBkuFUeQ" name="setStrategy" method="_TzTuZG6cEeSZe_WBkuFUeQ">
                <ownedComment xmi:id="_TzwaVG6cEeSZe_WBkuFUeQ">
                  <body>It is used to set the private value of strategy for internal usages will&#xD;
	 * assign BufferStrategy to local variable strategy.&#xD;
	 * &#xD;
	 * @param the&#xD;
	 *            value of this parameter should be correspond to the Surface&#xD;
	 *            which itself is extending the canvas</body>
                </ownedComment>
                <ownedParameter xmi:id="_Tw8W4W6cEeSZe_WBkuFUeQ" name="strategy" type="_TuFQIG6cEeSZe_WBkuFUeQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0YFYW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0YFYm6cEeSZe_WBkuFUeQ _TyfPAG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0YFYm6cEeSZe_WBkuFUeQ" name="" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0YFYW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0YscW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Yscm6cEeSZe_WBkuFUeQ _Tyf2EG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Yscm6cEeSZe_WBkuFUeQ" name="" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0YscW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0ZTgG6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0ZTgW6cEeSZe_WBkuFUeQ _TyhEMG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0ZTgW6cEeSZe_WBkuFUeQ" name="" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0ZTgG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0Z6kG6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Z6kW6cEeSZe_WBkuFUeQ _TyhrQG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Z6kW6cEeSZe_WBkuFUeQ" name="" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0Z6kG6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0Z6k26cEeSZe_WBkuFUeQ" name="" memberEnd="_T0Z6lG6cEeSZe_WBkuFUeQ _TykHgG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0Z6lG6cEeSZe_WBkuFUeQ" name="" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0Z6k26cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0ahoW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0ahom6cEeSZe_WBkuFUeQ _TykukG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0ahom6cEeSZe_WBkuFUeQ" name="" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0ahoW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_T0bIsW6cEeSZe_WBkuFUeQ" name="" memberEnd="_T0bIsm6cEeSZe_WBkuFUeQ _TylVoG6cEeSZe_WBkuFUeQ">
              <ownedEnd xmi:id="_T0bIsm6cEeSZe_WBkuFUeQ" name="" type="_SUx64G6cEeSZe_WBkuFUeQ" association="_T0bIsW6cEeSZe_WBkuFUeQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_UAWr4G6cEeSZe_WBkuFUeQ" name="util">
            <packagedElement xmi:type="uml:Class" xmi:id="_UAo_wG6cEeSZe_WBkuFUeQ" name="Utility">
              <ownedComment xmi:id="_UBIH_W6cEeSZe_WBkuFUeQ">
                <body>We can put general purpose methods here, such as collection helpers and this&#xD;
randInt that I need for the initial version All Utility methods are most of&#xD;
the time static&#xD;
&#xD;
@author Shahriar Rostami&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UBHg4G6cEeSZe_WBkuFUeQ" name="randInt" specification="_UApm0G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UBHg4W6cEeSZe_WBkuFUeQ" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBHg4m6cEeSZe_WBkuFUeQ" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UBHg426cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Random rand = new Random();&#xD;
		int randomNum = rand.nextInt((max - min) + 1) + min;&#xD;
		return randomNum;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UApm0G6cEeSZe_WBkuFUeQ" name="randInt" isStatic="true" method="_UBHg4G6cEeSZe_WBkuFUeQ">
                <ownedParameter xmi:id="_UApm0W6cEeSZe_WBkuFUeQ" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UApm0m6cEeSZe_WBkuFUeQ" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UApm026cEeSZe_WBkuFUeQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SHV70G6cEeSZe_WBkuFUeQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_SHV70W6cEeSZe_WBkuFUeQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_SHWi4G6cEeSZe_WBkuFUeQ" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_SVmaQG6cEeSZe_WBkuFUeQ" name="KeyAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_SVoPcW6cEeSZe_WBkuFUeQ" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_TuCM0W6cEeSZe_WBkuFUeQ" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_TuDa8G6cEeSZe_WBkuFUeQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_TuECAG6cEeSZe_WBkuFUeQ" name="MouseAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_TuEpEG6cEeSZe_WBkuFUeQ" name="MouseEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Tkuf0G6cEeSZe_WBkuFUeQ" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_TuFQIG6cEeSZe_WBkuFUeQ" name="BufferStrategy"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Tt0xcG6cEeSZe_WBkuFUeQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Tt1YgW6cEeSZe_WBkuFUeQ" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Tt_wkG6cEeSZe_WBkuFUeQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TuA-sG6cEeSZe_WBkuFUeQ" name="Canvas"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TuBlwG6cEeSZe_WBkuFUeQ" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TuBlwm6cEeSZe_WBkuFUeQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UA6FgG6cEeSZe_WBkuFUeQ" name="Image"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_SWIlwG6cEeSZe_WBkuFUeQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_SWIlwW6cEeSZe_WBkuFUeQ" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TvzucG6cEeSZe_WBkuFUeQ" name="NumberFormatException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TwFbQG6cEeSZe_WBkuFUeQ" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TwSPkG6cEeSZe_WBkuFUeQ" name="Thread"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_UAWE0G6cEeSZe_WBkuFUeQ" name="Math"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_TjoToG6cEeSZe_WBkuFUeQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_TtmvAG6cEeSZe_WBkuFUeQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_TtnWEW6cEeSZe_WBkuFUeQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TtokMG6cEeSZe_WBkuFUeQ" name="Random"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_TuHFUW6cEeSZe_WBkuFUeQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TuHsYW6cEeSZe_WBkuFUeQ" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_TuITcW6cEeSZe_WBkuFUeQ" name="Observer"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_Tu7ksG6cEeSZe_WBkuFUeQ" name="Date"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Tjo6sG6cEeSZe_WBkuFUeQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_TuFQIm6cEeSZe_WBkuFUeQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TuF3MW6cEeSZe_WBkuFUeQ" name="FileReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TuGeQW6cEeSZe_WBkuFUeQ" name="IOException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SI-6kG6cEeSZe_WBkuFUeQ" name="TestSuite"/>
    <packagedElement xmi:type="uml:Package" xmi:id="_TkwVAG6cEeSZe_WBkuFUeQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_TkwVAW6cEeSZe_WBkuFUeQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_Tkw8EG6cEeSZe_WBkuFUeQ" name="filechooser">
          <packagedElement xmi:type="uml:Class" xmi:id="_TuI6gW6cEeSZe_WBkuFUeQ" name="FileNameExtensionFilter"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Tuzo4G6cEeSZe_WBkuFUeQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Tu0P8G6cEeSZe_WBkuFUeQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TvKOMG6cEeSZe_WBkuFUeQ" name="JOptionPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TwENIG6cEeSZe_WBkuFUeQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TwGpYG6cEeSZe_WBkuFUeQ" name="JLabel"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_RbBoYG6cEeSZe_WBkuFUeQ">
      <eAnnotations xmi:id="_RbLZYG6cEeSZe_WBkuFUeQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_RbPDwG6cEeSZe_WBkuFUeQ" base_Package="_RLA2cG6cEeSZe_WBkuFUeQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJDMAG6cEeSZe_WBkuFUeQ" base_Element="_SI-6kG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJFBMG6cEeSZe_WBkuFUeQ" base_Element="_SI-6kG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJG2YG6cEeSZe_WBkuFUeQ" name="RunWith">
      <annotationParameters xmi:id="_SJHdcG6cEeSZe_WBkuFUeQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_SYmq8G6cEeSZe_WBkuFUeQ" value="Suite.class"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_SJIEgG6cEeSZe_WBkuFUeQ" name="SuiteClasses">
      <annotationParameters xmi:id="_SJIEgW6cEeSZe_WBkuFUeQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_SYnSAG6cEeSZe_WBkuFUeQ" value="CritterUnitTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_SYnSAW6cEeSZe_WBkuFUeQ" value="EngineTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_SYnSAm6cEeSZe_WBkuFUeQ" value="MapUnitTests.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJQnYG6cEeSZe_WBkuFUeQ" base_Element="_SJOyMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJR1gG6cEeSZe_WBkuFUeQ" base_Element="_SJOyMG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJR1gW6cEeSZe_WBkuFUeQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJURwG6cEeSZe_WBkuFUeQ" base_Element="_SJTDoG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJU40G6cEeSZe_WBkuFUeQ" base_Element="_SJTDoG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJU40W6cEeSZe_WBkuFUeQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJWuAG6cEeSZe_WBkuFUeQ" base_Element="_SJWG8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJXVEG6cEeSZe_WBkuFUeQ" base_Element="_SJWG8G6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJXVEW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJYjMG6cEeSZe_WBkuFUeQ" base_Element="_SJXVEm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJZKQG6cEeSZe_WBkuFUeQ" base_Element="_SJXVEm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJZKQW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJZxUG6cEeSZe_WBkuFUeQ" base_Element="_SJZKQm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJaYYG6cEeSZe_WBkuFUeQ" base_Element="_SJZKQm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJaYYW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJbmgG6cEeSZe_WBkuFUeQ" base_Element="_SJa_cG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJcNkG6cEeSZe_WBkuFUeQ" base_Element="_SJa_cG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJcNkW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJdbsG6cEeSZe_WBkuFUeQ" base_Element="_SJc0oG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJeCwG6cEeSZe_WBkuFUeQ" base_Element="_SJc0oG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJeCwW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJfQ4G6cEeSZe_WBkuFUeQ" base_Element="_SJep0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJf38G6cEeSZe_WBkuFUeQ" base_Element="_SJep0G6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJgfAG6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJhGEG6cEeSZe_WBkuFUeQ" base_Element="_SJgfAW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJhtIG6cEeSZe_WBkuFUeQ" base_Element="_SJgfAW6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJhtIW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJ2dQG6cEeSZe_WBkuFUeQ" base_Element="_SJ12MG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJ3EUG6cEeSZe_WBkuFUeQ" base_Element="_SJ12MG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJ3EUW6cEeSZe_WBkuFUeQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJ45gG6cEeSZe_WBkuFUeQ" base_Element="_SJ4ScG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJ6HoG6cEeSZe_WBkuFUeQ" base_Element="_SJ4ScG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJ6HoW6cEeSZe_WBkuFUeQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJ7VwG6cEeSZe_WBkuFUeQ" base_Element="_SJ6usG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJ780G6cEeSZe_WBkuFUeQ" base_Element="_SJ6usG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJ780W6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJ8j4W6cEeSZe_WBkuFUeQ" base_Element="_SJ8j4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJ9K8G6cEeSZe_WBkuFUeQ" base_Element="_SJ8j4G6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJ9K8W6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJ-ZEG6cEeSZe_WBkuFUeQ" base_Element="_SJ9yAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SJ_AIG6cEeSZe_WBkuFUeQ" base_Element="_SJ9yAG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SJ_AIW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJ_nMG6cEeSZe_WBkuFUeQ" base_Element="_SJ_AIm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SKAOQG6cEeSZe_WBkuFUeQ" base_Element="_SJ_AIm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SKAOQW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKR7EG6cEeSZe_WBkuFUeQ" base_Element="_SKRUAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SKSiIG6cEeSZe_WBkuFUeQ" base_Element="_SKRUAG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SKTJMG6cEeSZe_WBkuFUeQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKUXUG6cEeSZe_WBkuFUeQ" base_Element="_SKTwQG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SKU-YG6cEeSZe_WBkuFUeQ" base_Element="_SKTwQG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SKU-YW6cEeSZe_WBkuFUeQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKWMgG6cEeSZe_WBkuFUeQ" base_Element="_SKVlcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SKWzkG6cEeSZe_WBkuFUeQ" base_Element="_SKVlcG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SKWzkW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKXaoG6cEeSZe_WBkuFUeQ" base_Element="_SKWzkm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SKYBsG6cEeSZe_WBkuFUeQ" base_Element="_SKWzkm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SKYBsW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKYowG6cEeSZe_WBkuFUeQ" base_Element="_SKYBsm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SKZP0G6cEeSZe_WBkuFUeQ" base_Element="_SKYBsm6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SKZP0W6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKad8G6cEeSZe_WBkuFUeQ" base_Element="_SKZP0m6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SKbFAG6cEeSZe_WBkuFUeQ" base_Element="_SKZP0m6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SKbFAW6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKcTIG6cEeSZe_WBkuFUeQ" base_Element="_SKbsEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_SKc6MG6cEeSZe_WBkuFUeQ" base_Element="_SKbsEG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_SKdhQG6cEeSZe_WBkuFUeQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKpHcG6cEeSZe_WBkuFUeQ" base_Element="_SKn5UG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SPhncG6cEeSZe_WBkuFUeQ" base_Element="_SLKE0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SUMsEG6cEeSZe_WBkuFUeQ" base_Element="_SUKP0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SUOhQG6cEeSZe_WBkuFUeQ" base_Element="_SUMsEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SUSLoG6cEeSZe_WBkuFUeQ" base_Element="_SUPvYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SUUn4G6cEeSZe_WBkuFUeQ" base_Element="_SUSysG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SUXEIG6cEeSZe_WBkuFUeQ" base_Element="_SUUn4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SUaHcG6cEeSZe_WBkuFUeQ" base_Element="_SUXrMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SVoPcG6cEeSZe_WBkuFUeQ" base_Element="_SVmaQG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SVqEoG6cEeSZe_WBkuFUeQ" base_Element="_SVoPcW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SWLCAG6cEeSZe_WBkuFUeQ" base_Element="_SWIlwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXLuoG6cEeSZe_WBkuFUeQ" base_Element="_SXKggG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXM8wG6cEeSZe_WBkuFUeQ" base_Element="_SXLuoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXNj0G6cEeSZe_WBkuFUeQ" base_Element="_SXM8wW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXOx8G6cEeSZe_WBkuFUeQ" base_Element="_SXOK4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXQAEG6cEeSZe_WBkuFUeQ" base_Element="_SXOx8W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_SXQnIG6cEeSZe_WBkuFUeQ" base_Property="_SXQAEW6cEeSZe_WBkuFUeQ" siblings="_SYn5EG6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXROMG6cEeSZe_WBkuFUeQ" base_Element="_SXQAEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXZxEG6cEeSZe_WBkuFUeQ" base_Element="_SXZKAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXbmQG6cEeSZe_WBkuFUeQ" base_Element="_SXaYIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXdbcG6cEeSZe_WBkuFUeQ" base_Element="_SXcNUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXfQoG6cEeSZe_WBkuFUeQ" base_Element="_SXeCgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXlXQG6cEeSZe_WBkuFUeQ" base_Element="_SXjiEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_SXl-UW6cEeSZe_WBkuFUeQ" base_Property="_SXl-UG6cEeSZe_WBkuFUeQ" siblings="_SYvN0G6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXnMcG6cEeSZe_WBkuFUeQ" base_Element="_SXl-UG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_SXposG6cEeSZe_WBkuFUeQ" base_Property="_SXoakG6cEeSZe_WBkuFUeQ" siblings="_SYwb8G6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXqPwG6cEeSZe_WBkuFUeQ" base_Element="_SXoakG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXyyoG6cEeSZe_WBkuFUeQ" base_Element="_SXxkgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_SYogIG6cEeSZe_WBkuFUeQ" base_Property="_SYn5EG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYpHMG6cEeSZe_WBkuFUeQ" base_Element="_SYn5EG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_SYvN0W6cEeSZe_WBkuFUeQ" base_Property="_SYvN0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYv04G6cEeSZe_WBkuFUeQ" base_Element="_SYvN0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_SYxDAG6cEeSZe_WBkuFUeQ" base_Property="_SYwb8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYxDAW6cEeSZe_WBkuFUeQ" base_Element="_SYwb8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZFzIG6cEeSZe_WBkuFUeQ" base_Element="_SZD98G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZIPYG6cEeSZe_WBkuFUeQ" base_Element="_SZFzIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZLSsG6cEeSZe_WBkuFUeQ" base_Element="_SZI2cG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZOWAG6cEeSZe_WBkuFUeQ" base_Element="_SZLSsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZRZUG6cEeSZe_WBkuFUeQ" base_Element="_SZOWAW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZUcoG6cEeSZe_WBkuFUeQ" base_Element="_SZSAYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZXf8G6cEeSZe_WBkuFUeQ" base_Element="_SZUcoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZbKUG6cEeSZe_WBkuFUeQ" base_Element="_SZYHAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZdmkG6cEeSZe_WBkuFUeQ" base_Element="_SZbxYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZhQ8G6cEeSZe_WBkuFUeQ" base_Element="_SZeNoG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZkUQG6cEeSZe_WBkuFUeQ" base_Element="_SZh4AG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZnXkG6cEeSZe_WBkuFUeQ" base_Element="_SZkUQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZyWsG6cEeSZe_WBkuFUeQ" base_Element="_SZnXkW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZ0y8G6cEeSZe_WBkuFUeQ" base_Element="_SZyWsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_SZ3PMG6cEeSZe_WBkuFUeQ" base_Element="_SZ0y8W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TtnWEG6cEeSZe_WBkuFUeQ" base_Element="_TtmvAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_Ttn9IG6cEeSZe_WBkuFUeQ" base_Element="_TtnWEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TtokMW6cEeSZe_WBkuFUeQ" base_Element="_TtokMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_Tt1YgG6cEeSZe_WBkuFUeQ" base_Element="_Tt0xcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_Tt1_kG6cEeSZe_WBkuFUeQ" base_Element="_Tt1YgW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuAXoG6cEeSZe_WBkuFUeQ" base_Element="_Tt_wkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuA-sW6cEeSZe_WBkuFUeQ" base_Element="_TuA-sG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuBlwW6cEeSZe_WBkuFUeQ" base_Element="_TuBlwG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuCM0G6cEeSZe_WBkuFUeQ" base_Element="_TuBlwm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuCz4G6cEeSZe_WBkuFUeQ" base_Element="_TuCM0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuDa8W6cEeSZe_WBkuFUeQ" base_Element="_TuDa8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuECAW6cEeSZe_WBkuFUeQ" base_Element="_TuECAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuEpEW6cEeSZe_WBkuFUeQ" base_Element="_TuEpEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuFQIW6cEeSZe_WBkuFUeQ" base_Element="_TuFQIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuF3MG6cEeSZe_WBkuFUeQ" base_Element="_TuFQIm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuGeQG6cEeSZe_WBkuFUeQ" base_Element="_TuF3MW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuHFUG6cEeSZe_WBkuFUeQ" base_Element="_TuGeQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuHsYG6cEeSZe_WBkuFUeQ" base_Element="_TuHFUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuITcG6cEeSZe_WBkuFUeQ" base_Element="_TuHsYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuI6gG6cEeSZe_WBkuFUeQ" base_Element="_TuITcW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TuJhkG6cEeSZe_WBkuFUeQ" base_Element="_TuI6gW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_Tuzo4W6cEeSZe_WBkuFUeQ" base_Element="_Tuzo4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_Tu0P8W6cEeSZe_WBkuFUeQ" base_Element="_Tu0P8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_Tu8LwG6cEeSZe_WBkuFUeQ" base_Element="_Tu7ksG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TvK1QG6cEeSZe_WBkuFUeQ" base_Element="_TvKOMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TvzucW6cEeSZe_WBkuFUeQ" base_Element="_TvzucG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TwE0MG6cEeSZe_WBkuFUeQ" base_Element="_TwENIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TwGCUG6cEeSZe_WBkuFUeQ" base_Element="_TwFbQG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_TwHQcG6cEeSZe_WBkuFUeQ" base_Element="_TwGpYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TwQaYG6cEeSZe_WBkuFUeQ" base_Element="_TwPzUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_TwRBcG6cEeSZe_WBkuFUeQ" base_Element="_TwPzUG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_TwRBcW6cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_TwSPkW6cEeSZe_WBkuFUeQ" base_Element="_TwSPkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TwuUcG6cEeSZe_WBkuFUeQ" base_Element="_TwttYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_Twu7gG6cEeSZe_WBkuFUeQ" base_Element="_TwttYG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_Twu7gW6cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tw6hsW6cEeSZe_WBkuFUeQ" base_Element="_Tw56oG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Annotations xmi:id="_Tw7IwG6cEeSZe_WBkuFUeQ" base_Element="_Tw56oG6cEeSZe_WBkuFUeQ">
    <annotations xmi:id="_Tw7v0G6cEeSZe_WBkuFUeQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_TxSVIW6cEeSZe_WBkuFUeQ" dimensions="2" base_Element="_TxRuEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxSVIm6cEeSZe_WBkuFUeQ" base_Element="_TxRuEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxS8MW6cEeSZe_WBkuFUeQ" base_Element="_TxS8MG6cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_TxUKUG6cEeSZe_WBkuFUeQ" name="getPath" isStatic="true" method="_TywUwG6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_TxUKU26cEeSZe_WBkuFUeQ" type="_SPt0sG6cEeSZe_WBkuFUeQ" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TxUKVG6cEeSZe_WBkuFUeQ" value="*"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_TxUKUW6cEeSZe_WBkuFUeQ" name="setPath" isStatic="true" method="_Tyw70G6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_TxUKUm6cEeSZe_WBkuFUeQ" name="path" type="_TtnWEW6cEeSZe_WBkuFUeQ"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_TxVYcG6cEeSZe_WBkuFUeQ" genericsValue="Movement" base_Element="_TxUKUm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxV_gW6cEeSZe_WBkuFUeQ" base_Element="_TxV_gG6cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_TxX0sG6cEeSZe_WBkuFUeQ" name="getHeight" method="_Tyw70m6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_TxYbwG6cEeSZe_WBkuFUeQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_TxX0sW6cEeSZe_WBkuFUeQ" name="setHeight" method="_Tyxi4W6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_TxX0sm6cEeSZe_WBkuFUeQ" name="newHeight">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_TxWmkG6cEeSZe_WBkuFUeQ" base_Property="_TxV_gG6cEeSZe_WBkuFUeQ" siblings="_TzetgG6cEeSZe_WBkuFUeQ _TzfUkW6cEeSZe_WBkuFUeQ _Tzf7oG6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxfwgG6cEeSZe_WBkuFUeQ" base_Element="_TxfJcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxiMwG6cEeSZe_WBkuFUeQ" base_Element="_TxhlsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Txiz0G6cEeSZe_WBkuFUeQ" base_Element="_TxiMwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Txja4W6cEeSZe_WBkuFUeQ" base_Element="_Txja4G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxkB8W6cEeSZe_WBkuFUeQ" base_Element="_TxkB8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Array xmi:id="_TxkpAm6cEeSZe_WBkuFUeQ" dimensions="2" base_Element="_TxkpAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxlQEG6cEeSZe_WBkuFUeQ" base_Element="_TxkpAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxqIkG6cEeSZe_WBkuFUeQ" base_Element="_Txo6cG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxqvoW6cEeSZe_WBkuFUeQ" base_Element="_TxqIkW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxrWsG6cEeSZe_WBkuFUeQ" base_Element="_Txqvom6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Txr9wG6cEeSZe_WBkuFUeQ" base_Element="_TxrWsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Txsk0G6cEeSZe_WBkuFUeQ" base_Element="_Txr9wW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxtL4W6cEeSZe_WBkuFUeQ" base_Element="_Txsk0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Txty8m6cEeSZe_WBkuFUeQ" base_Element="_Txty8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxvBEG6cEeSZe_WBkuFUeQ" base_Element="_TxuaAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxvoIG6cEeSZe_WBkuFUeQ" base_Element="_TxvBEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxwPMG6cEeSZe_WBkuFUeQ" base_Element="_TxvoIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Txw2QW6cEeSZe_WBkuFUeQ" base_Element="_TxwPMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxyEYG6cEeSZe_WBkuFUeQ" base_Element="_TxxdUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxyrcG6cEeSZe_WBkuFUeQ" base_Element="_TxyEYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TxzSgG6cEeSZe_WBkuFUeQ" base_Element="_TxyrcW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Txz5kW6cEeSZe_WBkuFUeQ" base_Element="_TxzSgW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx0goW6cEeSZe_WBkuFUeQ" base_Element="_Txz5km6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx1HsW6cEeSZe_WBkuFUeQ" base_Element="_Tx0gom6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_Tx1uwm6cEeSZe_WBkuFUeQ" base_Property="_Tx1uwG6cEeSZe_WBkuFUeQ" siblings="_TzmpUG6cEeSZe_WBkuFUeQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx2V0G6cEeSZe_WBkuFUeQ" base_Element="_Tx1uwG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx284W6cEeSZe_WBkuFUeQ" base_Element="_Tx2V0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx4LAG6cEeSZe_WBkuFUeQ" base_Element="_Tx3j8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx4yEG6cEeSZe_WBkuFUeQ" base_Element="_Tx4LAW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx4yEm6cEeSZe_WBkuFUeQ" base_Element="_Tx4yEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx5ZIW6cEeSZe_WBkuFUeQ" base_Element="_Tx5ZIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx6nQG6cEeSZe_WBkuFUeQ" base_Element="_Tx6AMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx71YG6cEeSZe_WBkuFUeQ" base_Element="_Tx7OUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx8ccG6cEeSZe_WBkuFUeQ" base_Element="_Tx71YW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx9DgW6cEeSZe_WBkuFUeQ" base_Element="_Tx9DgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx9qkm6cEeSZe_WBkuFUeQ" base_Element="_Tx9qkG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx-4sG6cEeSZe_WBkuFUeQ" base_Element="_Tx-RoG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tx_fwG6cEeSZe_WBkuFUeQ" base_Element="_Tx-4sW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyAG0G6cEeSZe_WBkuFUeQ" base_Element="_Tx_fwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyAt4W6cEeSZe_WBkuFUeQ" base_Element="_TyAG0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyBU8m6cEeSZe_WBkuFUeQ" base_Element="_TyBU8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyCjEG6cEeSZe_WBkuFUeQ" base_Element="_TyB8AG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyDKIG6cEeSZe_WBkuFUeQ" base_Element="_TyCjEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyDxMG6cEeSZe_WBkuFUeQ" base_Element="_TyDKIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyE_UG6cEeSZe_WBkuFUeQ" base_Element="_TyEYQG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyGNcG6cEeSZe_WBkuFUeQ" base_Element="_TyFmYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyOJQG6cEeSZe_WBkuFUeQ" base_Element="_TyNiMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyPXYG6cEeSZe_WBkuFUeQ" base_Element="_TyOwUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyP-cG6cEeSZe_WBkuFUeQ" base_Element="_TyPXYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyQlgG6cEeSZe_WBkuFUeQ" base_Element="_TyP-cW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyRMkG6cEeSZe_WBkuFUeQ" base_Element="_TyQlgW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyRzoG6cEeSZe_WBkuFUeQ" base_Element="_TyRMkW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TySasG6cEeSZe_WBkuFUeQ" base_Element="_TyRzoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyTBwG6cEeSZe_WBkuFUeQ" base_Element="_TySasW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyTo0G6cEeSZe_WBkuFUeQ" base_Element="_TyTBwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyWFEG6cEeSZe_WBkuFUeQ" base_Element="_TyVeAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyWsIG6cEeSZe_WBkuFUeQ" base_Element="_TyWFEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyXTMG6cEeSZe_WBkuFUeQ" base_Element="_TyWsIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyX6QG6cEeSZe_WBkuFUeQ" base_Element="_TyXTMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyYhUW6cEeSZe_WBkuFUeQ" base_Element="_TyX6QW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyZIYW6cEeSZe_WBkuFUeQ" base_Element="_TyZIYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyZvcW6cEeSZe_WBkuFUeQ" base_Element="_TyZvcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyaWgW6cEeSZe_WBkuFUeQ" base_Element="_TyaWgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tya9k26cEeSZe_WBkuFUeQ" base_Element="_Tya9kG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TybkoW6cEeSZe_WBkuFUeQ" base_Element="_TybkoG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyfPAW6cEeSZe_WBkuFUeQ" base_Element="_TyfPAG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tyf2EW6cEeSZe_WBkuFUeQ" base_Element="_Tyf2EG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TygdIm6cEeSZe_WBkuFUeQ" base_Element="_TygdIG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyhEMW6cEeSZe_WBkuFUeQ" base_Element="_TyhEMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TyiSUG6cEeSZe_WBkuFUeQ" base_Element="_TyhrQG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tyi5YW6cEeSZe_WBkuFUeQ" base_Element="_TyiSUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tyjgcm6cEeSZe_WBkuFUeQ" base_Element="_TyjgcG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TykHgW6cEeSZe_WBkuFUeQ" base_Element="_TykHgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TykukW6cEeSZe_WBkuFUeQ" base_Element="_TykukG6cEeSZe_WBkuFUeQ"/>
  <uml:OpaqueBehavior xmi:id="_TywUwG6cEeSZe_WBkuFUeQ" name="getPath" specification="_TxUKUG6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_TywUwW6cEeSZe_WBkuFUeQ" type="_SPt0sG6cEeSZe_WBkuFUeQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TywUwm6cEeSZe_WBkuFUeQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return Path;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Tyw70G6cEeSZe_WBkuFUeQ" name="setPath" specification="_TxUKUW6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_Tyw70W6cEeSZe_WBkuFUeQ" name="path" type="_TtnWEW6cEeSZe_WBkuFUeQ"/>
    <language>java</language>
    <body>Path = path;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Tyw70m6cEeSZe_WBkuFUeQ" name="getHeight" specification="_TxX0sG6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_Tyxi4G6cEeSZe_WBkuFUeQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.Height;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Tyxi4W6cEeSZe_WBkuFUeQ" name="setHeight" specification="_TxX0sW6cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_Tyxi4m6cEeSZe_WBkuFUeQ" name="newHeight">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>this.Height = newHeight;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_TzetgW6cEeSZe_WBkuFUeQ" base_Property="_TzetgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TzfUkG6cEeSZe_WBkuFUeQ" base_Element="_TzetgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_TzfUkm6cEeSZe_WBkuFUeQ" base_Property="_TzfUkW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TzfUk26cEeSZe_WBkuFUeQ" base_Element="_TzfUkW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_Tzf7oW6cEeSZe_WBkuFUeQ" base_Property="_Tzf7oG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Tzf7om6cEeSZe_WBkuFUeQ" base_Element="_Tzf7oG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_TzmpUW6cEeSZe_WBkuFUeQ" base_Property="_TzmpUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TzmpUm6cEeSZe_WBkuFUeQ" base_Element="_TzmpUG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0GYkG6cEeSZe_WBkuFUeQ" base_Element="_T0FxgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0G_oG6cEeSZe_WBkuFUeQ" base_Element="_T0GYkW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0HmsG6cEeSZe_WBkuFUeQ" base_Element="_T0G_oW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0INwG6cEeSZe_WBkuFUeQ" base_Element="_T0HmsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0I00G6cEeSZe_WBkuFUeQ" base_Element="_T0INwW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0Jb4G6cEeSZe_WBkuFUeQ" base_Element="_T0I00W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0Jb426cEeSZe_WBkuFUeQ" base_Element="_T0Jb4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0KC8m6cEeSZe_WBkuFUeQ" base_Element="_T0KC8G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0KqAG6cEeSZe_WBkuFUeQ" base_Element="_T0KC826cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0LREm6cEeSZe_WBkuFUeQ" base_Element="_T0LREG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0L4Im6cEeSZe_WBkuFUeQ" base_Element="_T0L4IG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0MfMG6cEeSZe_WBkuFUeQ" base_Element="_T0L4I26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0NGQG6cEeSZe_WBkuFUeQ" base_Element="_T0MfMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0NtUG6cEeSZe_WBkuFUeQ" base_Element="_T0NGQW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0OUYG6cEeSZe_WBkuFUeQ" base_Element="_T0NtUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0OUY26cEeSZe_WBkuFUeQ" base_Element="_T0OUYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0O7cm6cEeSZe_WBkuFUeQ" base_Element="_T0O7cG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0PigG6cEeSZe_WBkuFUeQ" base_Element="_T0O7c26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0QJkG6cEeSZe_WBkuFUeQ" base_Element="_T0PigW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0QwoG6cEeSZe_WBkuFUeQ" base_Element="_T0QJkW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0RXsG6cEeSZe_WBkuFUeQ" base_Element="_T0QwoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0R-wG6cEeSZe_WBkuFUeQ" base_Element="_T0RXsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0Sl0G6cEeSZe_WBkuFUeQ" base_Element="_T0R-wW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0TM4G6cEeSZe_WBkuFUeQ" base_Element="_T0Sl0W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0Tz8G6cEeSZe_WBkuFUeQ" base_Element="_T0TM4W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0UbAG6cEeSZe_WBkuFUeQ" base_Element="_T0Tz8W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0UbA26cEeSZe_WBkuFUeQ" base_Element="_T0UbAW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0VCEm6cEeSZe_WBkuFUeQ" base_Element="_T0VCEG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0VpIG6cEeSZe_WBkuFUeQ" base_Element="_T0VCE26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0WQMG6cEeSZe_WBkuFUeQ" base_Element="_T0VpIW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0W3QG6cEeSZe_WBkuFUeQ" base_Element="_T0WQMW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0XeUG6cEeSZe_WBkuFUeQ" base_Element="_T0W3QW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0YFYG6cEeSZe_WBkuFUeQ" base_Element="_T0XeUW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0YscG6cEeSZe_WBkuFUeQ" base_Element="_T0YFYW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0Ysc26cEeSZe_WBkuFUeQ" base_Element="_T0YscW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0ZTgm6cEeSZe_WBkuFUeQ" base_Element="_T0ZTgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0Z6km6cEeSZe_WBkuFUeQ" base_Element="_T0Z6kG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0ahoG6cEeSZe_WBkuFUeQ" base_Element="_T0Z6k26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0bIsG6cEeSZe_WBkuFUeQ" base_Element="_T0ahoW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_T0bvwG6cEeSZe_WBkuFUeQ" base_Element="_T0bIsW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:Reference xmi:id="_UA6skG6cEeSZe_WBkuFUeQ" base_Element="_UA6FgG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UA9v4G6cEeSZe_WBkuFUeQ" base_Element="_UA9I0G6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UA9v4m6cEeSZe_WBkuFUeQ" base_Element="_UA9v4W6cEeSZe_WBkuFUeQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_UA9v426cEeSZe_WBkuFUeQ" name="getY" method="_UBEdkG6cEeSZe_WBkuFUeQ">
      <ownedParameter xmi:id="_UA-W8G6cEeSZe_WBkuFUeQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UA-W8m6cEeSZe_WBkuFUeQ" base_Element="_UA-W8W6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UA--AG6cEeSZe_WBkuFUeQ" base_Element="_UA-W826cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UA_lEG6cEeSZe_WBkuFUeQ" base_Element="_UA--AW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBAMIG6cEeSZe_WBkuFUeQ" base_Element="_UA_lEW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBAzMm6cEeSZe_WBkuFUeQ" base_Element="_UBAzMG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBBaQW6cEeSZe_WBkuFUeQ" base_Element="_UBAzM26cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBCBUG6cEeSZe_WBkuFUeQ" base_Element="_UBBaQm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBCBU26cEeSZe_WBkuFUeQ" base_Element="_UBCBUm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBCoYW6cEeSZe_WBkuFUeQ" base_Element="_UBCoYG6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBDPcG6cEeSZe_WBkuFUeQ" base_Element="_UBCoYm6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBDPcm6cEeSZe_WBkuFUeQ" base_Element="_UBDPcW6cEeSZe_WBkuFUeQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UBD2gG6cEeSZe_WBkuFUeQ" base_Element="_UBDPc26cEeSZe_WBkuFUeQ"/>
  <uml:OpaqueBehavior xmi:id="_UBEdkG6cEeSZe_WBkuFUeQ" name="getY" specification="_UA9v426cEeSZe_WBkuFUeQ">
    <ownedParameter xmi:id="_UBEdkW6cEeSZe_WBkuFUeQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return (int) this.y;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_UBKkMG6cEeSZe_WBkuFUeQ" base_Element="_UBJ9IG6cEeSZe_WBkuFUeQ"/>
</xmi:XMI>
